{
  "result": [
    {
      "expressions": [
        {
          "value": {
            "azurerm_aadb2c_directory": [
              "country_code",
              "display_name",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_residency_location",
              "domain_name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_active_directory_domain_service": [
              "domain_configuration_type",
              "filtered_sync_enabled",
              "id",
              "tags",
              "notifications.additional_recipients",
              "notifications.notify_dc_admins",
              "notifications.notify_global_admins",
              "secure_ldap.external_access_enabled",
              "security.kerberos_armoring_enabled",
              "security.kerberos_rc4_encryption_enabled",
              "security.ntlm_v1_enabled",
              "security.sync_kerberos_passwords",
              "security.sync_ntlm_passwords",
              "security.sync_on_prem_passwords",
              "security.tls_v1_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "domain_name",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "initial_replica_set.subnet_id",
              "secure_ldap.enabled",
              "secure_ldap.pfx_certificate",
              "secure_ldap.pfx_certificate_password",
              "initial_replica_set",
              "notifications",
              "secure_ldap",
              "security",
              "timeouts"
            ],
            "azurerm_active_directory_domain_service_replica_set": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "domain_service_id",
              "location",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_active_directory_domain_service_trust": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "domain_service_id",
              "name",
              "password",
              "trusted_domain_dns_ips",
              "trusted_domain_fqdn",
              "timeouts"
            ],
            "azurerm_advanced_threat_protection": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "enabled",
              "target_resource_id",
              "timeouts"
            ],
            "azurerm_analysis_services_server": [
              "admin_users",
              "backup_blob_container_uri",
              "enable_power_bi_service",
              "id",
              "querypool_connection_mode",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "ipv4_firewall_rule.name",
              "ipv4_firewall_rule.range_end",
              "ipv4_firewall_rule.range_start",
              "ipv4_firewall_rule",
              "timeouts"
            ],
            "azurerm_api_connection": [
              "display_name",
              "id",
              "parameter_values",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "managed_api_id",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management": [
              "client_certificate_enabled",
              "gateway_disabled",
              "id",
              "min_api_version",
              "notification_sender_email",
              "policy",
              "public_ip_address_id",
              "public_network_access_enabled",
              "tags",
              "virtual_network_type",
              "zones",
              "additional_location.capacity",
              "additional_location.gateway_disabled",
              "additional_location.public_ip_address_id",
              "additional_location.zones",
              "certificate.certificate_password",
              "hostname_configuration.developer_portal.certificate",
              "hostname_configuration.developer_portal.certificate_password",
              "hostname_configuration.developer_portal.key_vault_id",
              "hostname_configuration.developer_portal.negotiate_client_certificate",
              "hostname_configuration.developer_portal.ssl_keyvault_identity_client_id",
              "hostname_configuration.management.certificate",
              "hostname_configuration.management.certificate_password",
              "hostname_configuration.management.key_vault_id",
              "hostname_configuration.management.negotiate_client_certificate",
              "hostname_configuration.management.ssl_keyvault_identity_client_id",
              "hostname_configuration.portal.certificate",
              "hostname_configuration.portal.certificate_password",
              "hostname_configuration.portal.key_vault_id",
              "hostname_configuration.portal.negotiate_client_certificate",
              "hostname_configuration.portal.ssl_keyvault_identity_client_id",
              "hostname_configuration.proxy.certificate",
              "hostname_configuration.proxy.certificate_password",
              "hostname_configuration.proxy.default_ssl_binding",
              "hostname_configuration.proxy.key_vault_id",
              "hostname_configuration.proxy.negotiate_client_certificate",
              "hostname_configuration.proxy.ssl_keyvault_identity_client_id",
              "hostname_configuration.scm.certificate",
              "hostname_configuration.scm.certificate_password",
              "hostname_configuration.scm.key_vault_id",
              "hostname_configuration.scm.negotiate_client_certificate",
              "hostname_configuration.scm.ssl_keyvault_identity_client_id",
              "identity.identity_ids",
              "protocols.enable_http2",
              "security.enable_backend_ssl30",
              "security.enable_backend_tls10",
              "security.enable_backend_tls11",
              "security.enable_frontend_ssl30",
              "security.enable_frontend_tls10",
              "security.enable_frontend_tls11",
              "security.tls_ecdhe_ecdsa_with_aes128_cbc_sha_ciphers_enabled",
              "security.tls_ecdhe_ecdsa_with_aes256_cbc_sha_ciphers_enabled",
              "security.tls_ecdhe_rsa_with_aes128_cbc_sha_ciphers_enabled",
              "security.tls_ecdhe_rsa_with_aes256_cbc_sha_ciphers_enabled",
              "security.tls_rsa_with_aes128_cbc_sha256_ciphers_enabled",
              "security.tls_rsa_with_aes128_cbc_sha_ciphers_enabled",
              "security.tls_rsa_with_aes128_gcm_sha256_ciphers_enabled",
              "security.tls_rsa_with_aes256_cbc_sha256_ciphers_enabled",
              "security.tls_rsa_with_aes256_cbc_sha_ciphers_enabled",
              "security.tls_rsa_with_aes256_gcm_sha384_ciphers_enabled",
              "security.triple_des_ciphers_enabled",
              "sign_up.terms_of_service.text",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "publisher_email",
              "publisher_name",
              "resource_group_name",
              "sku_name",
              "additional_location.location",
              "additional_location.virtual_network_configuration.subnet_id",
              "certificate.encoded_certificate",
              "certificate.store_name",
              "hostname_configuration.developer_portal.host_name",
              "hostname_configuration.management.host_name",
              "hostname_configuration.portal.host_name",
              "hostname_configuration.proxy.host_name",
              "hostname_configuration.scm.host_name",
              "identity.type",
              "sign_in.enabled",
              "sign_up.enabled",
              "sign_up.terms_of_service.consent_required",
              "sign_up.terms_of_service.enabled",
              "tenant_access.enabled",
              "virtual_network_configuration.subnet_id",
              "additional_location",
              "additional_location.virtual_network_configuration",
              "certificate",
              "hostname_configuration",
              "hostname_configuration.developer_portal",
              "hostname_configuration.management",
              "hostname_configuration.portal",
              "hostname_configuration.proxy",
              "hostname_configuration.scm",
              "identity",
              "protocols",
              "security",
              "sign_in",
              "sign_up",
              "sign_up.terms_of_service",
              "tenant_access",
              "timeouts",
              "virtual_network_configuration"
            ],
            "azurerm_api_management_api": [
              "api_type",
              "description",
              "display_name",
              "id",
              "path",
              "protocols",
              "revision_description",
              "service_url",
              "soap_pass_through",
              "source_api_id",
              "subscription_required",
              "terms_of_service_url",
              "version",
              "version_description",
              "version_set_id",
              "contact.email",
              "contact.name",
              "contact.url",
              "license.name",
              "license.url",
              "oauth2_authorization.scope",
              "openid_authentication.bearer_token_sending_methods",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "name",
              "resource_group_name",
              "revision",
              "import.content_format",
              "import.content_value",
              "import.wsdl_selector.endpoint_name",
              "import.wsdl_selector.service_name",
              "oauth2_authorization.authorization_server_name",
              "openid_authentication.openid_provider_name",
              "subscription_key_parameter_names.header",
              "subscription_key_parameter_names.query",
              "contact",
              "import",
              "import.wsdl_selector",
              "license",
              "oauth2_authorization",
              "openid_authentication",
              "subscription_key_parameter_names",
              "timeouts"
            ],
            "azurerm_api_management_api_diagnostic": [
              "always_log_errors",
              "http_correlation_protocol",
              "id",
              "log_client_ip",
              "operation_name_format",
              "sampling_percentage",
              "verbosity",
              "backend_request.body_bytes",
              "backend_request.headers_to_log",
              "backend_response.body_bytes",
              "backend_response.headers_to_log",
              "frontend_request.body_bytes",
              "frontend_request.headers_to_log",
              "frontend_response.body_bytes",
              "frontend_response.headers_to_log",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_logger_id",
              "api_management_name",
              "api_name",
              "identifier",
              "resource_group_name",
              "backend_request.data_masking.headers.mode",
              "backend_request.data_masking.headers.value",
              "backend_request.data_masking.query_params.mode",
              "backend_request.data_masking.query_params.value",
              "backend_response.data_masking.headers.mode",
              "backend_response.data_masking.headers.value",
              "backend_response.data_masking.query_params.mode",
              "backend_response.data_masking.query_params.value",
              "frontend_request.data_masking.headers.mode",
              "frontend_request.data_masking.headers.value",
              "frontend_request.data_masking.query_params.mode",
              "frontend_request.data_masking.query_params.value",
              "frontend_response.data_masking.headers.mode",
              "frontend_response.data_masking.headers.value",
              "frontend_response.data_masking.query_params.mode",
              "frontend_response.data_masking.query_params.value",
              "backend_request",
              "backend_request.data_masking",
              "backend_request.data_masking.headers",
              "backend_request.data_masking.query_params",
              "backend_response",
              "backend_response.data_masking",
              "backend_response.data_masking.headers",
              "backend_response.data_masking.query_params",
              "frontend_request",
              "frontend_request.data_masking",
              "frontend_request.data_masking.headers",
              "frontend_request.data_masking.query_params",
              "frontend_response",
              "frontend_response.data_masking",
              "frontend_response.data_masking.headers",
              "frontend_response.data_masking.query_params",
              "timeouts"
            ],
            "azurerm_api_management_api_operation": [
              "description",
              "id",
              "request.description",
              "request.header.default_value",
              "request.header.description",
              "request.header.schema_id",
              "request.header.type_name",
              "request.header.values",
              "request.header.example.description",
              "request.header.example.external_value",
              "request.header.example.summary",
              "request.header.example.value",
              "request.query_parameter.default_value",
              "request.query_parameter.description",
              "request.query_parameter.schema_id",
              "request.query_parameter.type_name",
              "request.query_parameter.values",
              "request.query_parameter.example.description",
              "request.query_parameter.example.external_value",
              "request.query_parameter.example.summary",
              "request.query_parameter.example.value",
              "request.representation.schema_id",
              "request.representation.type_name",
              "request.representation.example.description",
              "request.representation.example.external_value",
              "request.representation.example.summary",
              "request.representation.example.value",
              "request.representation.form_parameter.default_value",
              "request.representation.form_parameter.description",
              "request.representation.form_parameter.schema_id",
              "request.representation.form_parameter.type_name",
              "request.representation.form_parameter.values",
              "request.representation.form_parameter.example.description",
              "request.representation.form_parameter.example.external_value",
              "request.representation.form_parameter.example.summary",
              "request.representation.form_parameter.example.value",
              "response.description",
              "response.header.default_value",
              "response.header.description",
              "response.header.schema_id",
              "response.header.type_name",
              "response.header.values",
              "response.header.example.description",
              "response.header.example.external_value",
              "response.header.example.summary",
              "response.header.example.value",
              "response.representation.schema_id",
              "response.representation.type_name",
              "response.representation.example.description",
              "response.representation.example.external_value",
              "response.representation.example.summary",
              "response.representation.example.value",
              "response.representation.form_parameter.default_value",
              "response.representation.form_parameter.description",
              "response.representation.form_parameter.schema_id",
              "response.representation.form_parameter.type_name",
              "response.representation.form_parameter.values",
              "response.representation.form_parameter.example.description",
              "response.representation.form_parameter.example.external_value",
              "response.representation.form_parameter.example.summary",
              "response.representation.form_parameter.example.value",
              "template_parameter.default_value",
              "template_parameter.description",
              "template_parameter.schema_id",
              "template_parameter.type_name",
              "template_parameter.values",
              "template_parameter.example.description",
              "template_parameter.example.external_value",
              "template_parameter.example.summary",
              "template_parameter.example.value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "api_name",
              "display_name",
              "method",
              "operation_id",
              "resource_group_name",
              "url_template",
              "request.header.name",
              "request.header",
              "request.header",
              "request.header.type",
              "request.header.example.name",
              "request.query_parameter.name",
              "request.query_parameter",
              "request.query_parameter",
              "request.query_parameter.type",
              "request.query_parameter.example.name",
              "request.representation.content_type",
              "request.representation.example.name",
              "request.representation.form_parameter.name",
              "request.representation.form_parameter",
              "request.representation.form_parameter",
              "request.representation.form_parameter.type",
              "request.representation.form_parameter.example.name",
              "response.status_code",
              "response.header.name",
              "response.header",
              "response.header",
              "response.header.type",
              "response.header.example.name",
              "response.representation.content_type",
              "response.representation.example.name",
              "response.representation.form_parameter.name",
              "response.representation.form_parameter",
              "response.representation.form_parameter",
              "response.representation.form_parameter.type",
              "response.representation.form_parameter.example.name",
              "template_parameter.name",
              "template_parameter",
              "template_parameter",
              "template_parameter.type",
              "template_parameter.example.name",
              "request",
              "request.header",
              "request.header.example",
              "request.query_parameter",
              "request.query_parameter.example",
              "request.representation",
              "request.representation.example",
              "request.representation.form_parameter",
              "request.representation.form_parameter.example",
              "response",
              "response.header",
              "response.header.example",
              "response.representation",
              "response.representation.example",
              "response.representation.form_parameter",
              "response.representation.form_parameter.example",
              "template_parameter",
              "template_parameter.example",
              "timeouts"
            ],
            "azurerm_api_management_api_operation_policy": [
              "id",
              "xml_content",
              "xml_link",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "api_name",
              "operation_id",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_api_operation_tag": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_operation_id",
              "display_name",
              "name",
              "timeouts"
            ],
            "azurerm_api_management_api_policy": [
              "id",
              "xml_content",
              "xml_link",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "api_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_api_release": [
              "id",
              "notes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_id",
              "name",
              "timeouts"
            ],
            "azurerm_api_management_api_schema": [
              "components",
              "definitions",
              "id",
              "value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "api_name",
              "content_type",
              "resource_group_name",
              "schema_id",
              "timeouts"
            ],
            "azurerm_api_management_api_tag": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "api_id",
              "name",
              "timeouts"
            ],
            "azurerm_api_management_api_tag_description": [
              "description",
              "external_documentation_description",
              "external_documentation_url",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_tag_id",
              "timeouts"
            ],
            "azurerm_api_management_api_version_set": [
              "description",
              "id",
              "version_header_name",
              "version_query_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "display_name",
              "name",
              "resource_group_name",
              "versioning_scheme",
              "timeouts"
            ],
            "azurerm_api_management_authorization_server": [
              "bearer_token_sending_methods",
              "client_authentication_method",
              "client_secret",
              "default_scope",
              "description",
              "id",
              "resource_owner_password",
              "resource_owner_username",
              "support_state",
              "token_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "authorization_endpoint",
              "authorization_methods",
              "client_id",
              "client_registration_endpoint",
              "display_name",
              "grant_types",
              "name",
              "resource_group_name",
              "token_body_parameter.name",
              "token_body_parameter.value",
              "timeouts",
              "token_body_parameter"
            ],
            "azurerm_api_management_backend": [
              "description",
              "id",
              "resource_id",
              "title",
              "credentials.certificate",
              "credentials.header",
              "credentials.query",
              "credentials.authorization.parameter",
              "credentials.authorization.scheme",
              "proxy.password",
              "service_fabric_cluster.client_certificate_id",
              "service_fabric_cluster.client_certificate_thumbprint",
              "service_fabric_cluster.server_certificate_thumbprints",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "tls.validate_certificate_chain",
              "tls.validate_certificate_name",
              "api_management_name",
              "name",
              "protocol",
              "resource_group_name",
              "url",
              "proxy.url",
              "proxy.username",
              "service_fabric_cluster.management_endpoints",
              "service_fabric_cluster.max_partition_resolution_retries",
              "service_fabric_cluster.server_x509_name.issuer_certificate_thumbprint",
              "service_fabric_cluster.server_x509_name.name",
              "credentials",
              "credentials.authorization",
              "proxy",
              "service_fabric_cluster",
              "service_fabric_cluster.server_x509_name",
              "timeouts",
              "tls"
            ],
            "azurerm_api_management_certificate": [
              "data",
              "id",
              "key_vault_identity_client_id",
              "key_vault_secret_id",
              "password",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_custom_domain": [
              "id",
              "developer_portal.certificate",
              "developer_portal.certificate_password",
              "developer_portal.key_vault_id",
              "developer_portal.negotiate_client_certificate",
              "developer_portal.ssl_keyvault_identity_client_id",
              "gateway.certificate",
              "gateway.certificate_password",
              "gateway.default_ssl_binding",
              "gateway.key_vault_id",
              "gateway.negotiate_client_certificate",
              "gateway.ssl_keyvault_identity_client_id",
              "management.certificate",
              "management.certificate_password",
              "management.key_vault_id",
              "management.negotiate_client_certificate",
              "management.ssl_keyvault_identity_client_id",
              "portal.certificate",
              "portal.certificate_password",
              "portal.key_vault_id",
              "portal.negotiate_client_certificate",
              "portal.ssl_keyvault_identity_client_id",
              "scm.certificate",
              "scm.certificate_password",
              "scm.key_vault_id",
              "scm.negotiate_client_certificate",
              "scm.ssl_keyvault_identity_client_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_id",
              "developer_portal.host_name",
              "gateway.host_name",
              "management.host_name",
              "portal.host_name",
              "scm.host_name",
              "developer_portal",
              "gateway",
              "management",
              "portal",
              "scm",
              "timeouts"
            ],
            "azurerm_api_management_diagnostic": [
              "always_log_errors",
              "http_correlation_protocol",
              "id",
              "log_client_ip",
              "operation_name_format",
              "sampling_percentage",
              "verbosity",
              "backend_request.body_bytes",
              "backend_request.headers_to_log",
              "backend_response.body_bytes",
              "backend_response.headers_to_log",
              "frontend_request.body_bytes",
              "frontend_request.headers_to_log",
              "frontend_response.body_bytes",
              "frontend_response.headers_to_log",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_logger_id",
              "api_management_name",
              "identifier",
              "resource_group_name",
              "backend_request.data_masking.headers.mode",
              "backend_request.data_masking.headers.value",
              "backend_request.data_masking.query_params.mode",
              "backend_request.data_masking.query_params.value",
              "backend_response.data_masking.headers.mode",
              "backend_response.data_masking.headers.value",
              "backend_response.data_masking.query_params.mode",
              "backend_response.data_masking.query_params.value",
              "frontend_request.data_masking.headers.mode",
              "frontend_request.data_masking.headers.value",
              "frontend_request.data_masking.query_params.mode",
              "frontend_request.data_masking.query_params.value",
              "frontend_response.data_masking.headers.mode",
              "frontend_response.data_masking.headers.value",
              "frontend_response.data_masking.query_params.mode",
              "frontend_response.data_masking.query_params.value",
              "backend_request",
              "backend_request.data_masking",
              "backend_request.data_masking.headers",
              "backend_request.data_masking.query_params",
              "backend_response",
              "backend_response.data_masking",
              "backend_response.data_masking.headers",
              "backend_response.data_masking.query_params",
              "frontend_request",
              "frontend_request.data_masking",
              "frontend_request.data_masking.headers",
              "frontend_request.data_masking.query_params",
              "frontend_response",
              "frontend_response.data_masking",
              "frontend_response.data_masking.headers",
              "frontend_response.data_masking.query_params",
              "timeouts"
            ],
            "azurerm_api_management_email_template": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "body",
              "resource_group_name",
              "subject",
              "template_name",
              "timeouts"
            ],
            "azurerm_api_management_gateway": [
              "description",
              "id",
              "location_data.city",
              "location_data.district",
              "location_data.region",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_id",
              "name",
              "location_data.name",
              "location_data",
              "timeouts"
            ],
            "azurerm_api_management_gateway_api": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_id",
              "gateway_id",
              "timeouts"
            ],
            "azurerm_api_management_gateway_certificate_authority": [
              "id",
              "is_trusted",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_id",
              "certificate_name",
              "gateway_name",
              "timeouts"
            ],
            "azurerm_api_management_gateway_host_name_configuration": [
              "http2_enabled",
              "id",
              "request_client_certificate_enabled",
              "tls10_enabled",
              "tls11_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_id",
              "certificate_id",
              "gateway_name",
              "host_name",
              "name",
              "timeouts"
            ],
            "azurerm_api_management_global_schema": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "resource_group_name",
              "schema_id",
              "type",
              "value",
              "timeouts"
            ],
            "azurerm_api_management_group": [
              "description",
              "external_id",
              "id",
              "type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "display_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_group_user": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "group_name",
              "resource_group_name",
              "user_id",
              "timeouts"
            ],
            "azurerm_api_management_identity_provider_aad": [
              "id",
              "signin_tenant",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "allowed_tenants",
              "api_management_name",
              "client_id",
              "client_secret",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_identity_provider_aadb2c": [
              "id",
              "password_reset_policy",
              "profile_editing_policy",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "allowed_tenant",
              "api_management_name",
              "authority",
              "client_id",
              "client_secret",
              "resource_group_name",
              "signin_policy",
              "signin_tenant",
              "signup_policy",
              "timeouts"
            ],
            "azurerm_api_management_identity_provider_facebook": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "app_id",
              "app_secret",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_identity_provider_google": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "client_id",
              "client_secret",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_identity_provider_microsoft": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "client_id",
              "client_secret",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_identity_provider_twitter": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_key",
              "api_management_name",
              "api_secret_key",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_logger": [
              "buffered",
              "description",
              "id",
              "resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "name",
              "resource_group_name",
              "application_insights.instrumentation_key",
              "eventhub.connection_string",
              "eventhub.name",
              "application_insights",
              "eventhub",
              "timeouts"
            ],
            "azurerm_api_management_named_value": [
              "id",
              "secret",
              "tags",
              "value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "value_from_key_vault.identity_client_id",
              "api_management_name",
              "display_name",
              "name",
              "resource_group_name",
              "value_from_key_vault.secret_id",
              "timeouts",
              "value_from_key_vault"
            ],
            "azurerm_api_management_notification_recipient_email": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "api_management_id",
              "email",
              "notification_type",
              "timeouts"
            ],
            "azurerm_api_management_notification_recipient_user": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "api_management_id",
              "notification_type",
              "user_id",
              "timeouts"
            ],
            "azurerm_api_management_openid_connect_provider": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "client_id",
              "client_secret",
              "display_name",
              "metadata_endpoint",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_policy": [
              "id",
              "xml_content",
              "xml_link",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_id",
              "timeouts"
            ],
            "azurerm_api_management_product": [
              "approval_required",
              "description",
              "id",
              "subscription_required",
              "subscriptions_limit",
              "terms",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "display_name",
              "product_id",
              "published",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_product_api": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "api_name",
              "product_id",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_product_group": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "group_name",
              "product_id",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_product_policy": [
              "id",
              "xml_content",
              "xml_link",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "product_id",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_product_tag": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "api_management_product_id",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_redis_cache": [
              "cache_location",
              "description",
              "id",
              "redis_cache_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_id",
              "connection_string",
              "name",
              "timeouts"
            ],
            "azurerm_api_management_subscription": [
              "allow_tracing",
              "api_id",
              "id",
              "primary_key",
              "product_id",
              "secondary_key",
              "state",
              "subscription_id",
              "user_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "display_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_api_management_tag": [
              "display_name",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_id",
              "name",
              "timeouts"
            ],
            "azurerm_api_management_user": [
              "confirmation",
              "id",
              "note",
              "password",
              "state",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_management_name",
              "email",
              "first_name",
              "last_name",
              "resource_group_name",
              "user_id",
              "timeouts"
            ],
            "azurerm_app_configuration": [
              "id",
              "local_auth_enabled",
              "public_network_access",
              "purge_protection_enabled",
              "sku",
              "soft_delete_retention_days",
              "tags",
              "encryption.identity_client_id",
              "encryption.key_vault_key_identifier",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "encryption",
              "identity",
              "timeouts"
            ],
            "azurerm_app_configuration_feature": [
              "description",
              "enabled",
              "etag",
              "id",
              "label",
              "locked",
              "percentage_filter_value",
              "tags",
              "targeting_filter.users",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "timewindow_filter.end",
              "timewindow_filter.start",
              "configuration_store_id",
              "name",
              "targeting_filter.default_rollout_percentage",
              "targeting_filter.groups.name",
              "targeting_filter.groups.rollout_percentage",
              "targeting_filter",
              "targeting_filter.groups",
              "timeouts",
              "timewindow_filter"
            ],
            "azurerm_app_configuration_key": [
              "content_type",
              "etag",
              "id",
              "label",
              "locked",
              "tags",
              "type",
              "value",
              "vault_key_reference",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "configuration_store_id",
              "key",
              "timeouts"
            ],
            "azurerm_app_service": [
              "app_settings",
              "client_affinity_enabled",
              "client_cert_enabled",
              "client_cert_mode",
              "enabled",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "tags",
              "auth_settings.additional_login_params",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.oauth_scopes",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_in_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "logs.detailed_error_messages_enabled",
              "logs.failed_request_tracing_enabled",
              "logs.application_logs.file_system_level",
              "site_config.acr_use_managed_identity_credentials",
              "site_config.acr_user_managed_identity_client_id",
              "site_config.always_on",
              "site_config.app_command_line",
              "site_config.auto_swap_slot_name",
              "site_config.default_documents",
              "site_config.dotnet_framework_version",
              "site_config.ftps_state",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.java_container",
              "site_config.java_container_version",
              "site_config.java_version",
              "site_config.linux_fx_version",
              "site_config.local_mysql_enabled",
              "site_config.managed_pipeline_mode",
              "site_config.min_tls_version",
              "site_config.number_of_workers",
              "site_config.php_version",
              "site_config.python_version",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.scm_ip_restriction",
              "site_config.scm_type",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker_process",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.windows_fx_version",
              "site_config.cors.support_credentials",
              "source_control.branch",
              "source_control.manual_integration",
              "source_control.repo_url",
              "source_control.rollback_enabled",
              "source_control.use_mercurial",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_plan_id",
              "location",
              "name",
              "resource_group_name",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.facebook.app_secret",
              "auth_settings.google.client_id",
              "auth_settings.google.client_secret",
              "auth_settings.microsoft.client_id",
              "auth_settings.microsoft.client_secret",
              "auth_settings.twitter.consumer_key",
              "auth_settings.twitter.consumer_secret",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "logs.application_logs.azure_blob_storage.level",
              "logs.application_logs.azure_blob_storage.retention_in_days",
              "logs.application_logs.azure_blob_storage.sas_url",
              "logs.http_logs.azure_blob_storage.retention_in_days",
              "logs.http_logs.azure_blob_storage.sas_url",
              "logs.http_logs.file_system.retention_in_days",
              "logs.http_logs.file_system.retention_in_mb",
              "site_config.cors.allowed_origins",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "logs",
              "logs.application_logs",
              "logs.application_logs.azure_blob_storage",
              "logs.http_logs",
              "logs.http_logs.azure_blob_storage",
              "logs.http_logs.file_system",
              "site_config",
              "site_config.cors",
              "source_control",
              "storage_account",
              "timeouts"
            ],
            "azurerm_app_service_active_slot": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_name",
              "app_service_slot_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_app_service_certificate": [
              "app_service_plan_id",
              "id",
              "key_vault_secret_id",
              "password",
              "pfx_blob",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_app_service_certificate_binding": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "certificate_id",
              "hostname_binding_id",
              "ssl_state",
              "timeouts"
            ],
            "azurerm_app_service_certificate_order": [
              "auto_renew",
              "csr",
              "distinguished_name",
              "id",
              "key_size",
              "product_type",
              "tags",
              "validity_in_years",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_app_service_connection": [
              "client_type",
              "id",
              "vnet_solution",
              "authentication.certificate",
              "authentication.client_id",
              "authentication.name",
              "authentication.principal_id",
              "authentication.secret",
              "authentication.subscription_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_id",
              "name",
              "target_resource_id",
              "authentication.type",
              "authentication",
              "timeouts"
            ],
            "azurerm_app_service_custom_hostname_binding": [
              "id",
              "ssl_state",
              "thumbprint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_name",
              "hostname",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_app_service_environment": [
              "allowed_user_ip_cidrs",
              "front_end_scale_factor",
              "id",
              "internal_load_balancing_mode",
              "pricing_tier",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "subnet_id",
              "cluster_setting.name",
              "cluster_setting.value",
              "cluster_setting",
              "timeouts"
            ],
            "azurerm_app_service_environment_v3": [
              "allow_new_private_endpoint_connections",
              "dedicated_host_count",
              "id",
              "internal_load_balancing_mode",
              "tags",
              "zone_redundant",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "subnet_id",
              "cluster_setting.name",
              "cluster_setting.value",
              "cluster_setting",
              "timeouts"
            ],
            "azurerm_app_service_hybrid_connection": [
              "id",
              "send_key_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_name",
              "hostname",
              "port",
              "relay_id",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_app_service_managed_certificate": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "custom_hostname_binding_id",
              "timeouts"
            ],
            "azurerm_app_service_plan": [
              "app_service_environment_id",
              "id",
              "is_xenon",
              "kind",
              "maximum_elastic_worker_count",
              "per_site_scaling",
              "reserved",
              "tags",
              "zone_redundant",
              "sku.capacity",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku.size",
              "sku.tier",
              "sku",
              "timeouts"
            ],
            "azurerm_app_service_public_certificate": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_name",
              "blob",
              "certificate_location",
              "certificate_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_app_service_slot": [
              "app_settings",
              "client_affinity_enabled",
              "enabled",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "tags",
              "auth_settings.additional_login_params",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.oauth_scopes",
              "identity.identity_ids",
              "logs.detailed_error_messages_enabled",
              "logs.failed_request_tracing_enabled",
              "logs.application_logs.file_system_level",
              "site_config.acr_use_managed_identity_credentials",
              "site_config.acr_user_managed_identity_client_id",
              "site_config.always_on",
              "site_config.app_command_line",
              "site_config.auto_swap_slot_name",
              "site_config.default_documents",
              "site_config.dotnet_framework_version",
              "site_config.ftps_state",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.java_container",
              "site_config.java_container_version",
              "site_config.java_version",
              "site_config.linux_fx_version",
              "site_config.local_mysql_enabled",
              "site_config.managed_pipeline_mode",
              "site_config.min_tls_version",
              "site_config.number_of_workers",
              "site_config.php_version",
              "site_config.python_version",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.scm_ip_restriction",
              "site_config.scm_type",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker_process",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.windows_fx_version",
              "site_config.cors.support_credentials",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_name",
              "app_service_plan_id",
              "location",
              "name",
              "resource_group_name",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.facebook.app_secret",
              "auth_settings.google.client_id",
              "auth_settings.google.client_secret",
              "auth_settings.microsoft.client_id",
              "auth_settings.microsoft.client_secret",
              "auth_settings.twitter.consumer_key",
              "auth_settings.twitter.consumer_secret",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "logs.application_logs.azure_blob_storage.level",
              "logs.application_logs.azure_blob_storage.retention_in_days",
              "logs.application_logs.azure_blob_storage.sas_url",
              "logs.http_logs.azure_blob_storage.retention_in_days",
              "logs.http_logs.azure_blob_storage.sas_url",
              "logs.http_logs.file_system.retention_in_days",
              "logs.http_logs.file_system.retention_in_mb",
              "site_config.cors.allowed_origins",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "connection_string",
              "identity",
              "logs",
              "logs.application_logs",
              "logs.application_logs.azure_blob_storage",
              "logs.http_logs",
              "logs.http_logs.azure_blob_storage",
              "logs.http_logs.file_system",
              "site_config",
              "site_config.cors",
              "storage_account",
              "timeouts"
            ],
            "azurerm_app_service_slot_custom_hostname_binding": [
              "id",
              "ssl_state",
              "thumbprint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "app_service_slot_id",
              "hostname",
              "timeouts"
            ],
            "azurerm_app_service_slot_virtual_network_swift_connection": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_id",
              "slot_name",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_app_service_source_control": [
              "branch",
              "id",
              "repo_url",
              "rollback_enabled",
              "use_local_git",
              "use_manual_integration",
              "use_mercurial",
              "github_action_configuration.generate_workflow_file",
              "github_action_configuration.container_configuration.registry_password",
              "github_action_configuration.container_configuration.registry_username",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "app_id",
              "github_action_configuration.code_configuration.runtime_stack",
              "github_action_configuration.code_configuration.runtime_version",
              "github_action_configuration.container_configuration.image_name",
              "github_action_configuration.container_configuration.registry_url",
              "github_action_configuration",
              "github_action_configuration.code_configuration",
              "github_action_configuration.container_configuration",
              "timeouts"
            ],
            "azurerm_app_service_source_control_slot": [
              "branch",
              "id",
              "repo_url",
              "rollback_enabled",
              "use_local_git",
              "use_manual_integration",
              "use_mercurial",
              "github_action_configuration.generate_workflow_file",
              "github_action_configuration.container_configuration.registry_password",
              "github_action_configuration.container_configuration.registry_username",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "slot_id",
              "github_action_configuration.code_configuration.runtime_stack",
              "github_action_configuration.code_configuration.runtime_version",
              "github_action_configuration.container_configuration.image_name",
              "github_action_configuration.container_configuration.registry_url",
              "github_action_configuration",
              "github_action_configuration.code_configuration",
              "github_action_configuration.container_configuration",
              "timeouts"
            ],
            "azurerm_app_service_source_control_token": [
              "id",
              "token_secret",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "token",
              "type",
              "timeouts"
            ],
            "azurerm_app_service_virtual_network_swift_connection": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_id",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_application_gateway": [
              "enable_http2",
              "fips_enabled",
              "firewall_policy_id",
              "force_firewall_policy_association",
              "id",
              "tags",
              "zones",
              "autoscale_configuration.max_capacity",
              "backend_address_pool.fqdns",
              "backend_address_pool.ip_addresses",
              "backend_http_settings.affinity_cookie_name",
              "backend_http_settings.host_name",
              "backend_http_settings.path",
              "backend_http_settings.pick_host_name_from_backend_address",
              "backend_http_settings.probe_name",
              "backend_http_settings.request_timeout",
              "backend_http_settings.trusted_root_certificate_names",
              "frontend_ip_configuration.private_ip_address",
              "frontend_ip_configuration.private_ip_address_allocation",
              "frontend_ip_configuration.private_link_configuration_name",
              "frontend_ip_configuration.public_ip_address_id",
              "frontend_ip_configuration.subnet_id",
              "http_listener.firewall_policy_id",
              "http_listener.host_name",
              "http_listener.host_names",
              "http_listener.require_sni",
              "http_listener.ssl_certificate_name",
              "http_listener.ssl_profile_name",
              "private_link_configuration.ip_configuration.private_ip_address",
              "probe.host",
              "probe.minimum_servers",
              "probe.pick_host_name_from_backend_http_settings",
              "probe.port",
              "probe.match.body",
              "redirect_configuration.include_path",
              "redirect_configuration.include_query_string",
              "redirect_configuration.target_listener_name",
              "redirect_configuration.target_url",
              "request_routing_rule.backend_address_pool_name",
              "request_routing_rule.backend_http_settings_name",
              "request_routing_rule.priority",
              "request_routing_rule.redirect_configuration_name",
              "request_routing_rule.rewrite_rule_set_name",
              "request_routing_rule.url_path_map_name",
              "rewrite_rule_set.rewrite_rule.condition.ignore_case",
              "rewrite_rule_set.rewrite_rule.condition.negate",
              "rewrite_rule_set.rewrite_rule.url.components",
              "rewrite_rule_set.rewrite_rule.url.path",
              "rewrite_rule_set.rewrite_rule.url.query_string",
              "rewrite_rule_set.rewrite_rule.url.reroute",
              "sku.capacity",
              "ssl_certificate.data",
              "ssl_certificate.key_vault_secret_id",
              "ssl_certificate.password",
              "ssl_policy.cipher_suites",
              "ssl_policy.disabled_protocols",
              "ssl_policy.min_protocol_version",
              "ssl_policy.policy_name",
              "ssl_policy.policy_type",
              "ssl_profile.trusted_client_certificate_names",
              "ssl_profile.verify_client_cert_issuer_dn",
              "ssl_profile.ssl_policy.cipher_suites",
              "ssl_profile.ssl_policy.disabled_protocols",
              "ssl_profile.ssl_policy.min_protocol_version",
              "ssl_profile.ssl_policy.policy_name",
              "ssl_profile.ssl_policy.policy_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "trusted_root_certificate.data",
              "trusted_root_certificate.key_vault_secret_id",
              "url_path_map.default_backend_address_pool_name",
              "url_path_map.default_backend_http_settings_name",
              "url_path_map.default_redirect_configuration_name",
              "url_path_map.default_rewrite_rule_set_name",
              "url_path_map.path_rule.backend_address_pool_name",
              "url_path_map.path_rule.backend_http_settings_name",
              "url_path_map.path_rule.firewall_policy_id",
              "url_path_map.path_rule.redirect_configuration_name",
              "url_path_map.path_rule.rewrite_rule_set_name",
              "waf_configuration.file_upload_limit_mb",
              "waf_configuration.max_request_body_size_kb",
              "waf_configuration.request_body_check",
              "waf_configuration.rule_set_type",
              "waf_configuration.disabled_rule_group.rules",
              "waf_configuration.exclusion.selector",
              "waf_configuration.exclusion.selector_match_operator",
              "location",
              "name",
              "resource_group_name",
              "authentication_certificate.data",
              "authentication_certificate.name",
              "autoscale_configuration.min_capacity",
              "backend_address_pool.name",
              "backend_http_settings.cookie_based_affinity",
              "backend_http_settings.name",
              "backend_http_settings.port",
              "backend_http_settings.protocol",
              "backend_http_settings.authentication_certificate.name",
              "backend_http_settings.connection_draining.drain_timeout_sec",
              "backend_http_settings.connection_draining.enabled",
              "custom_error_configuration.custom_error_page_url",
              "custom_error_configuration.status_code",
              "frontend_ip_configuration.name",
              "frontend_port.name",
              "frontend_port.port",
              "gateway_ip_configuration.name",
              "gateway_ip_configuration.subnet_id",
              "global.request_buffering_enabled",
              "global.response_buffering_enabled",
              "http_listener.frontend_ip_configuration_name",
              "http_listener.frontend_port_name",
              "http_listener.name",
              "http_listener.protocol",
              "http_listener.custom_error_configuration.custom_error_page_url",
              "http_listener.custom_error_configuration.status_code",
              "identity.identity_ids",
              "identity.type",
              "private_link_configuration.name",
              "private_link_configuration.ip_configuration.name",
              "private_link_configuration.ip_configuration.primary",
              "private_link_configuration.ip_configuration.private_ip_address_allocation",
              "private_link_configuration.ip_configuration.subnet_id",
              "probe.interval",
              "probe.name",
              "probe.path",
              "probe.protocol",
              "probe.timeout",
              "probe.unhealthy_threshold",
              "probe.match.status_code",
              "redirect_configuration.name",
              "redirect_configuration.redirect_type",
              "request_routing_rule.http_listener_name",
              "request_routing_rule.name",
              "request_routing_rule.rule_type",
              "rewrite_rule_set.name",
              "rewrite_rule_set.rewrite_rule.name",
              "rewrite_rule_set.rewrite_rule.rule_sequence",
              "rewrite_rule_set.rewrite_rule.condition.pattern",
              "rewrite_rule_set.rewrite_rule.condition.variable",
              "rewrite_rule_set.rewrite_rule.request_header_configuration.header_name",
              "rewrite_rule_set.rewrite_rule.request_header_configuration.header_value",
              "rewrite_rule_set.rewrite_rule.response_header_configuration.header_name",
              "rewrite_rule_set.rewrite_rule.response_header_configuration.header_value",
              "sku.name",
              "sku.tier",
              "ssl_certificate.name",
              "ssl_profile.name",
              "trusted_client_certificate.data",
              "trusted_client_certificate.name",
              "trusted_root_certificate.name",
              "url_path_map.name",
              "url_path_map.path_rule.name",
              "url_path_map.path_rule.paths",
              "waf_configuration.enabled",
              "waf_configuration.firewall_mode",
              "waf_configuration.rule_set_version",
              "waf_configuration.disabled_rule_group.rule_group_name",
              "waf_configuration.exclusion.match_variable",
              "authentication_certificate",
              "autoscale_configuration",
              "backend_address_pool",
              "backend_http_settings",
              "backend_http_settings.authentication_certificate",
              "backend_http_settings.connection_draining",
              "custom_error_configuration",
              "frontend_ip_configuration",
              "frontend_port",
              "gateway_ip_configuration",
              "global",
              "http_listener",
              "http_listener.custom_error_configuration",
              "identity",
              "private_link_configuration",
              "private_link_configuration.ip_configuration",
              "probe",
              "probe.match",
              "redirect_configuration",
              "request_routing_rule",
              "rewrite_rule_set",
              "rewrite_rule_set.rewrite_rule",
              "rewrite_rule_set.rewrite_rule.condition",
              "rewrite_rule_set.rewrite_rule.request_header_configuration",
              "rewrite_rule_set.rewrite_rule.response_header_configuration",
              "rewrite_rule_set.rewrite_rule.url",
              "sku",
              "ssl_certificate",
              "ssl_policy",
              "ssl_profile",
              "ssl_profile.ssl_policy",
              "timeouts",
              "trusted_client_certificate",
              "trusted_root_certificate",
              "url_path_map",
              "url_path_map.path_rule",
              "waf_configuration",
              "waf_configuration.disabled_rule_group",
              "waf_configuration.exclusion",
              "private_endpoint_connection.id",
              "private_endpoint_connection.name"
            ],
            "azurerm_application_insights": [
              "daily_data_cap_in_gb",
              "daily_data_cap_notifications_disabled",
              "disable_ip_masking",
              "force_customer_storage_for_profiler",
              "id",
              "internet_ingestion_enabled",
              "internet_query_enabled",
              "local_authentication_disabled",
              "retention_in_days",
              "sampling_percentage",
              "tags",
              "workspace_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_type",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_application_insights_analytics_item": [
              "function_alias",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_insights_id",
              "content",
              "name",
              "scope",
              "type",
              "timeouts"
            ],
            "azurerm_application_insights_api_key": [
              "id",
              "read_permissions",
              "write_permissions",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_insights_id",
              "name",
              "timeouts"
            ],
            "azurerm_application_insights_smart_detection_rule": [
              "additional_email_recipients",
              "enabled",
              "id",
              "send_emails_to_subscription_owners",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_insights_id",
              "name",
              "timeouts"
            ],
            "azurerm_application_insights_web_test": [
              "description",
              "enabled",
              "frequency",
              "id",
              "retry_enabled",
              "tags",
              "timeout",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_insights_id",
              "configuration",
              "geo_locations",
              "kind",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_application_insights_workbook": [
              "category",
              "description",
              "id",
              "source_id",
              "storage_container_id",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_json",
              "display_name",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_application_insights_workbook_template": [
              "author",
              "id",
              "localized",
              "priority",
              "tags",
              "galleries.order",
              "galleries.resource_type",
              "galleries.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "template_data",
              "galleries.category",
              "galleries.name",
              "galleries",
              "timeouts"
            ],
            "azurerm_application_security_group": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_attestation_provider": [
              "id",
              "policy_signing_certificate_data",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_account": [
              "id",
              "local_authentication_enabled",
              "public_network_access_enabled",
              "tags",
              "encryption.key_source",
              "encryption.user_assigned_identity_id",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "encryption.key_vault_key_id",
              "identity.type",
              "encryption",
              "identity",
              "timeouts"
            ],
            "azurerm_automation_certificate": [
              "description",
              "exportable",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "base64",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_connection": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "name",
              "resource_group_name",
              "type",
              "values",
              "timeouts"
            ],
            "azurerm_automation_connection_certificate": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "automation_certificate_name",
              "name",
              "resource_group_name",
              "subscription_id",
              "timeouts"
            ],
            "azurerm_automation_connection_classic_certificate": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "certificate_asset_name",
              "name",
              "resource_group_name",
              "subscription_id",
              "subscription_name",
              "timeouts"
            ],
            "azurerm_automation_connection_service_principal": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_id",
              "automation_account_name",
              "certificate_thumbprint",
              "name",
              "resource_group_name",
              "subscription_id",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_automation_connection_type": [
              "id",
              "is_global",
              "field.is_encrypted",
              "field.is_optional",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "automation_account_name",
              "name",
              "resource_group_name",
              "field.name",
              "field.type",
              "field",
              "timeouts"
            ],
            "azurerm_automation_credential": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "name",
              "password",
              "resource_group_name",
              "username",
              "timeouts"
            ],
            "azurerm_automation_dsc_configuration": [
              "description",
              "id",
              "log_verbose",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "content_embedded",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_dsc_nodeconfiguration": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "content_embedded",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_hybrid_runbook_worker": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "automation_account_name",
              "resource_group_name",
              "vm_resource_id",
              "worker_group_name",
              "worker_id",
              "timeouts"
            ],
            "azurerm_automation_hybrid_runbook_worker_group": [
              "credential_name",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_job_schedule": [
              "id",
              "job_schedule_id",
              "parameters",
              "run_on",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "resource_group_name",
              "runbook_name",
              "schedule_name",
              "timeouts"
            ],
            "azurerm_automation_module": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "name",
              "resource_group_name",
              "module_link.uri",
              "module_link.hash.algorithm",
              "module_link.hash.value",
              "module_link",
              "module_link.hash",
              "timeouts"
            ],
            "azurerm_automation_runbook": [
              "content",
              "description",
              "id",
              "job_schedule",
              "log_activity_trace_level",
              "tags",
              "draft.edit_mode_enabled",
              "draft.output_types",
              "draft.content_link.version",
              "draft.parameters.default_value",
              "draft.parameters.mandatory",
              "draft.parameters.position",
              "publish_content_link.version",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "location",
              "log_progress",
              "log_verbose",
              "name",
              "resource_group_name",
              "runbook_type",
              "draft.content_link.uri",
              "draft.content_link.hash.algorithm",
              "draft.content_link.hash.value",
              "draft.parameters.key",
              "draft.parameters.type",
              "publish_content_link.uri",
              "publish_content_link.hash.algorithm",
              "publish_content_link.hash.value",
              "draft",
              "draft.content_link",
              "draft.content_link.hash",
              "draft.parameters",
              "publish_content_link",
              "publish_content_link.hash",
              "timeouts",
              "job_schedule.job_schedule_id",
              "job_schedule.parameters",
              "job_schedule.run_on",
              "job_schedule.schedule_name"
            ],
            "azurerm_automation_schedule": [
              "description",
              "expiry_time",
              "id",
              "interval",
              "month_days",
              "start_time",
              "timezone",
              "week_days",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "frequency",
              "name",
              "resource_group_name",
              "monthly_occurrence.day",
              "monthly_occurrence.occurrence",
              "monthly_occurrence",
              "timeouts"
            ],
            "azurerm_automation_software_update_configuration": [
              "duration",
              "id",
              "non_azure_computer_names",
              "virtual_machine_ids",
              "linux.classification_included",
              "linux.excluded_packages",
              "linux.included_packages",
              "linux.reboot",
              "post_task.parameters",
              "post_task.source",
              "pre_task.parameters",
              "pre_task.source",
              "schedule.advanced_month_days",
              "schedule.advanced_week_days",
              "schedule.description",
              "schedule.expiry_time",
              "schedule.expiry_time_offset_minutes",
              "schedule.frequency",
              "schedule.interval",
              "schedule.is_enabled",
              "schedule.next_run",
              "schedule.next_run_offset_minutes",
              "schedule.start_time",
              "schedule.start_time_offset_minutes",
              "schedule.time_zone",
              "target.azure_query.locations",
              "target.azure_query.scope",
              "target.azure_query.tag_filter",
              "target.non_azure_query.function_alias",
              "target.non_azure_query.workspace_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "windows.classification_included",
              "windows.classifications_included",
              "windows.excluded_knowledge_base_numbers",
              "windows.included_knowledge_base_numbers",
              "windows.reboot",
              "automation_account_id",
              "name",
              "operating_system",
              "schedule.monthly_occurrence.day",
              "schedule.monthly_occurrence.occurrence",
              "target.azure_query.tags.tag",
              "target.azure_query.tags.values",
              "linux",
              "post_task",
              "pre_task",
              "schedule",
              "schedule.monthly_occurrence",
              "target",
              "target.azure_query",
              "target.azure_query.tags",
              "target.non_azure_query",
              "timeouts",
              "windows"
            ],
            "azurerm_automation_source_control": [
              "automatic_sync",
              "branch",
              "description",
              "id",
              "publish_runbook_enabled",
              "security.refresh_token",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_id",
              "folder_path",
              "name",
              "repository_url",
              "source_control_type",
              "security.token",
              "security.token_type",
              "security",
              "timeouts"
            ],
            "azurerm_automation_variable_bool": [
              "description",
              "encrypted",
              "id",
              "value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_variable_datetime": [
              "description",
              "encrypted",
              "id",
              "value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_variable_int": [
              "description",
              "encrypted",
              "id",
              "value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_variable_string": [
              "description",
              "encrypted",
              "id",
              "value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_automation_watcher": [
              "description",
              "etag",
              "id",
              "script_parameters",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_id",
              "execution_frequency_in_seconds",
              "location",
              "name",
              "script_name",
              "script_run_on",
              "timeouts"
            ],
            "azurerm_automation_webhook": [
              "enabled",
              "id",
              "parameters",
              "run_on_worker_group",
              "uri",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "automation_account_name",
              "expiry_time",
              "name",
              "resource_group_name",
              "runbook_name",
              "timeouts"
            ],
            "azurerm_availability_set": [
              "id",
              "managed",
              "platform_fault_domain_count",
              "platform_update_domain_count",
              "proximity_placement_group_id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_backup_container_storage_account": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "recovery_vault_name",
              "resource_group_name",
              "storage_account_id",
              "timeouts"
            ],
            "azurerm_backup_policy_file_share": [
              "id",
              "timezone",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recovery_vault_name",
              "resource_group_name",
              "backup.frequency",
              "backup.time",
              "retention_daily.count",
              "retention_monthly.count",
              "retention_monthly.weekdays",
              "retention_monthly.weeks",
              "retention_weekly.count",
              "retention_weekly.weekdays",
              "retention_yearly.count",
              "retention_yearly.months",
              "retention_yearly.weekdays",
              "retention_yearly.weeks",
              "backup",
              "retention_daily",
              "retention_monthly",
              "retention_weekly",
              "retention_yearly",
              "timeouts"
            ],
            "azurerm_backup_policy_vm": [
              "id",
              "instant_restore_retention_days",
              "policy_type",
              "timezone",
              "backup.hour_duration",
              "backup.hour_interval",
              "backup.weekdays",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recovery_vault_name",
              "resource_group_name",
              "backup.frequency",
              "backup.time",
              "retention_daily.count",
              "retention_monthly.count",
              "retention_monthly.weekdays",
              "retention_monthly.weeks",
              "retention_weekly.count",
              "retention_weekly.weekdays",
              "retention_yearly.count",
              "retention_yearly.months",
              "retention_yearly.weekdays",
              "retention_yearly.weeks",
              "backup",
              "retention_daily",
              "retention_monthly",
              "retention_weekly",
              "retention_yearly",
              "timeouts"
            ],
            "azurerm_backup_policy_vm_workload": [
              "id",
              "protection_policy.backup.frequency",
              "protection_policy.backup.frequency_in_minutes",
              "protection_policy.backup.time",
              "protection_policy.backup.weekdays",
              "protection_policy.retention_monthly.monthdays",
              "protection_policy.retention_monthly.weekdays",
              "protection_policy.retention_monthly.weeks",
              "protection_policy.retention_yearly.monthdays",
              "protection_policy.retention_yearly.weekdays",
              "protection_policy.retention_yearly.weeks",
              "settings.compression_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recovery_vault_name",
              "resource_group_name",
              "workload_type",
              "protection_policy.policy_type",
              "protection_policy.retention_daily.count",
              "protection_policy.retention_monthly.count",
              "protection_policy.retention_monthly.format_type",
              "protection_policy.retention_weekly.count",
              "protection_policy.retention_weekly.weekdays",
              "protection_policy.retention_yearly.count",
              "protection_policy.retention_yearly.format_type",
              "protection_policy.retention_yearly.months",
              "protection_policy.simple_retention.count",
              "settings.time_zone",
              "protection_policy",
              "protection_policy.backup",
              "protection_policy.retention_daily",
              "protection_policy.retention_monthly",
              "protection_policy.retention_weekly",
              "protection_policy.retention_yearly",
              "protection_policy.simple_retention",
              "settings",
              "timeouts"
            ],
            "azurerm_backup_protected_file_share": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backup_policy_id",
              "recovery_vault_name",
              "resource_group_name",
              "source_file_share_name",
              "source_storage_account_id",
              "timeouts"
            ],
            "azurerm_backup_protected_vm": [
              "exclude_disk_luns",
              "id",
              "include_disk_luns",
              "source_vm_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backup_policy_id",
              "recovery_vault_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_bastion_host": [
              "copy_paste_enabled",
              "file_copy_enabled",
              "id",
              "ip_connect_enabled",
              "scale_units",
              "shareable_link_enabled",
              "sku",
              "tags",
              "tunneling_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "ip_configuration.name",
              "ip_configuration.public_ip_address_id",
              "ip_configuration.subnet_id",
              "ip_configuration",
              "timeouts"
            ],
            "azurerm_batch_account": [
              "allowed_authentication_modes",
              "encryption",
              "id",
              "pool_allocation_mode",
              "public_network_access_enabled",
              "storage_account_authentication_mode",
              "storage_account_id",
              "storage_account_node_identity",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "key_vault_reference.id",
              "key_vault_reference.url",
              "identity",
              "key_vault_reference",
              "timeouts"
            ],
            "azurerm_batch_application": [
              "allow_updates",
              "default_version",
              "display_name",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_batch_certificate": [
              "id",
              "password",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "certificate",
              "format",
              "resource_group_name",
              "thumbprint",
              "thumbprint_algorithm",
              "timeouts"
            ],
            "azurerm_batch_job": [
              "common_environment_properties",
              "display_name",
              "id",
              "priority",
              "task_retry_maximum",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "batch_pool_id",
              "name",
              "timeouts"
            ],
            "azurerm_batch_pool": [
              "display_name",
              "id",
              "inter_node_communication",
              "license_type",
              "max_tasks_per_node",
              "metadata",
              "os_disk_placement",
              "stop_pending_resize_operation",
              "auto_scale.evaluation_interval",
              "certificate.store_name",
              "certificate.visibility",
              "container_configuration.container_image_names",
              "container_configuration.container_registries",
              "container_configuration.type",
              "data_disks.caching",
              "data_disks.storage_account_type",
              "extensions.auto_upgrade_minor_version",
              "extensions.protected_settings",
              "extensions.provision_after_extensions",
              "extensions.settings_json",
              "extensions.type_handler_version",
              "fixed_scale.node_deallocation_method",
              "fixed_scale.resize_timeout",
              "fixed_scale.target_dedicated_nodes",
              "fixed_scale.target_low_priority_nodes",
              "mount.azure_blob_file_system.account_key",
              "mount.azure_blob_file_system.blobfuse_options",
              "mount.azure_blob_file_system.identity_id",
              "mount.azure_blob_file_system.sas_key",
              "mount.azure_file_share.mount_options",
              "mount.cifs_mount.mount_options",
              "mount.nfs_mount.mount_options",
              "network_configuration.dynamic_vnet_assignment_scope",
              "network_configuration.public_address_provisioning_type",
              "network_configuration.public_ips",
              "network_configuration.endpoint_configuration.network_security_group_rules.source_port_ranges",
              "node_placement.policy",
              "start_task.common_environment_properties",
              "start_task.task_retry_maximum",
              "start_task.wait_for_success",
              "start_task.container.run_options",
              "start_task.container.working_directory",
              "start_task.container.registry.password",
              "start_task.container.registry.user_assigned_identity_id",
              "start_task.container.registry.user_name",
              "start_task.resource_file.auto_storage_container_name",
              "start_task.resource_file.blob_prefix",
              "start_task.resource_file.file_mode",
              "start_task.resource_file.file_path",
              "start_task.resource_file.http_url",
              "start_task.resource_file.storage_container_url",
              "start_task.resource_file.user_assigned_identity_id",
              "start_task.user_identity.user_name",
              "start_task.user_identity.auto_user.elevation_level",
              "start_task.user_identity.auto_user.scope",
              "storage_image_reference.id",
              "storage_image_reference.offer",
              "storage_image_reference.publisher",
              "storage_image_reference.sku",
              "storage_image_reference.version",
              "task_scheduling_policy.node_fill_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "user_accounts.linux_user_configuration.gid",
              "user_accounts.linux_user_configuration.ssh_private_key",
              "user_accounts.linux_user_configuration.uid",
              "windows.enable_automatic_updates",
              "account_name",
              "name",
              "node_agent_sku_id",
              "resource_group_name",
              "vm_size",
              "auto_scale.formula",
              "certificate.id",
              "certificate.store_location",
              "data_disks.disk_size_gb",
              "data_disks.lun",
              "disk_encryption.disk_encryption_target",
              "extensions.name",
              "extensions.publisher",
              "extensions.type",
              "identity.identity_ids",
              "identity.type",
              "mount.azure_blob_file_system.account_name",
              "mount.azure_blob_file_system.container_name",
              "mount.azure_blob_file_system.relative_mount_path",
              "mount.azure_file_share.account_key",
              "mount.azure_file_share.account_name",
              "mount.azure_file_share.azure_file_url",
              "mount.azure_file_share.relative_mount_path",
              "mount.cifs_mount.password",
              "mount.cifs_mount.relative_mount_path",
              "mount.cifs_mount.source",
              "mount.cifs_mount.user_name",
              "mount.nfs_mount.relative_mount_path",
              "mount.nfs_mount.source",
              "network_configuration.subnet_id",
              "network_configuration.endpoint_configuration.backend_port",
              "network_configuration.endpoint_configuration.frontend_port_range",
              "network_configuration.endpoint_configuration.name",
              "network_configuration.endpoint_configuration.protocol",
              "network_configuration.endpoint_configuration.network_security_group_rules.access",
              "network_configuration.endpoint_configuration.network_security_group_rules.priority",
              "network_configuration.endpoint_configuration.network_security_group_rules.source_address_prefix",
              "start_task.command_line",
              "start_task.container.image_name",
              "start_task.container.registry.registry_server",
              "user_accounts.elevation_level",
              "user_accounts.name",
              "user_accounts.password",
              "user_accounts.windows_user_configuration.login_mode",
              "auto_scale",
              "certificate",
              "container_configuration",
              "data_disks",
              "disk_encryption",
              "extensions",
              "fixed_scale",
              "identity",
              "mount",
              "mount.azure_blob_file_system",
              "mount.azure_file_share",
              "mount.cifs_mount",
              "mount.nfs_mount",
              "network_configuration",
              "network_configuration.endpoint_configuration",
              "network_configuration.endpoint_configuration.network_security_group_rules",
              "node_placement",
              "start_task",
              "start_task.container",
              "start_task.container.registry",
              "start_task.resource_file",
              "start_task.user_identity",
              "start_task.user_identity.auto_user",
              "storage_image_reference",
              "task_scheduling_policy",
              "timeouts",
              "user_accounts",
              "user_accounts.linux_user_configuration",
              "user_accounts.windows_user_configuration",
              "windows"
            ],
            "azurerm_billing_account_cost_management_export": [
              "active",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "billing_account_id",
              "name",
              "recurrence_period_end_date",
              "recurrence_period_start_date",
              "recurrence_type",
              "export_data_options.time_frame",
              "export_data_options.type",
              "export_data_storage_location.container_id",
              "export_data_storage_location.root_folder_path",
              "export_data_options",
              "export_data_storage_location",
              "timeouts"
            ],
            "azurerm_blueprint_assignment": [
              "id",
              "lock_exclude_actions",
              "lock_exclude_principals",
              "lock_mode",
              "parameter_values",
              "resource_groups",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "target_subscription_id",
              "version_id",
              "identity.identity_ids",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_bot_channel_alexa": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "location",
              "resource_group_name",
              "skill_id",
              "timeouts"
            ],
            "azurerm_bot_channel_direct_line_speech": [
              "custom_speech_model_id",
              "custom_voice_deployment_id",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "cognitive_service_access_key",
              "cognitive_service_location",
              "location",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_bot_channel_directline": [
              "id",
              "site.enabled",
              "site.enhanced_authentication_enabled",
              "site.trusted_origins",
              "site.v1_allowed",
              "site.v3_allowed",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "location",
              "resource_group_name",
              "site.name",
              "site",
              "timeouts"
            ],
            "azurerm_bot_channel_email": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "email_address",
              "email_password",
              "location",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_bot_channel_facebook": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "facebook_application_id",
              "facebook_application_secret",
              "location",
              "resource_group_name",
              "page.access_token",
              "page.id",
              "page",
              "timeouts"
            ],
            "azurerm_bot_channel_line": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "location",
              "resource_group_name",
              "line_channel.access_token",
              "line_channel.secret",
              "line_channel",
              "timeouts"
            ],
            "azurerm_bot_channel_ms_teams": [
              "calling_web_hook",
              "enable_calling",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "location",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_bot_channel_slack": [
              "id",
              "landing_page_url",
              "signing_secret",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "client_id",
              "client_secret",
              "location",
              "resource_group_name",
              "verification_token",
              "timeouts"
            ],
            "azurerm_bot_channel_sms": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "location",
              "phone_number",
              "resource_group_name",
              "sms_channel_account_security_id",
              "sms_channel_auth_token",
              "timeouts"
            ],
            "azurerm_bot_channel_web_chat": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "location",
              "resource_group_name",
              "site_names",
              "timeouts"
            ],
            "azurerm_bot_channels_registration": [
              "cmk_key_vault_url",
              "description",
              "developer_app_insights_api_key",
              "developer_app_insights_application_id",
              "developer_app_insights_key",
              "display_name",
              "endpoint",
              "icon_url",
              "id",
              "isolated_network_enabled",
              "public_network_access_enabled",
              "streaming_endpoint_enabled",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "microsoft_app_id",
              "name",
              "resource_group_name",
              "sku",
              "timeouts"
            ],
            "azurerm_bot_connection": [
              "id",
              "parameters",
              "scopes",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bot_name",
              "client_id",
              "client_secret",
              "location",
              "name",
              "resource_group_name",
              "service_provider_name",
              "timeouts"
            ],
            "azurerm_bot_service_azure_bot": [
              "developer_app_insights_api_key",
              "developer_app_insights_application_id",
              "developer_app_insights_key",
              "display_name",
              "endpoint",
              "id",
              "luis_app_ids",
              "luis_key",
              "microsoft_app_msi_id",
              "microsoft_app_tenant_id",
              "microsoft_app_type",
              "streaming_endpoint_enabled",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "microsoft_app_id",
              "name",
              "resource_group_name",
              "sku",
              "timeouts"
            ],
            "azurerm_bot_web_app": [
              "developer_app_insights_api_key",
              "developer_app_insights_application_id",
              "developer_app_insights_key",
              "display_name",
              "endpoint",
              "id",
              "luis_app_ids",
              "luis_key",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "microsoft_app_id",
              "name",
              "resource_group_name",
              "sku",
              "timeouts"
            ],
            "azurerm_capacity_reservation": [
              "id",
              "tags",
              "zone",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "capacity_reservation_group_id",
              "name",
              "sku.capacity",
              "sku.name",
              "sku",
              "timeouts"
            ],
            "azurerm_capacity_reservation_group": [
              "id",
              "tags",
              "zones",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_cdn_endpoint": [
              "content_types_to_compress",
              "id",
              "is_compression_enabled",
              "is_http_allowed",
              "is_https_allowed",
              "optimization_type",
              "origin_host_header",
              "origin_path",
              "probe_path",
              "querystring_caching_behaviour",
              "tags",
              "delivery_rule.cache_expiration_action.duration",
              "delivery_rule.cache_key_query_string_action.parameters",
              "delivery_rule.cookies_condition.match_values",
              "delivery_rule.cookies_condition.negate_condition",
              "delivery_rule.cookies_condition.transforms",
              "delivery_rule.device_condition.negate_condition",
              "delivery_rule.device_condition.operator",
              "delivery_rule.http_version_condition.negate_condition",
              "delivery_rule.http_version_condition.operator",
              "delivery_rule.modify_request_header_action.value",
              "delivery_rule.modify_response_header_action.value",
              "delivery_rule.post_arg_condition.match_values",
              "delivery_rule.post_arg_condition.negate_condition",
              "delivery_rule.post_arg_condition.transforms",
              "delivery_rule.query_string_condition.match_values",
              "delivery_rule.query_string_condition.negate_condition",
              "delivery_rule.query_string_condition.transforms",
              "delivery_rule.remote_address_condition.match_values",
              "delivery_rule.remote_address_condition.negate_condition",
              "delivery_rule.request_body_condition.match_values",
              "delivery_rule.request_body_condition.negate_condition",
              "delivery_rule.request_body_condition.transforms",
              "delivery_rule.request_header_condition.match_values",
              "delivery_rule.request_header_condition.negate_condition",
              "delivery_rule.request_header_condition.transforms",
              "delivery_rule.request_method_condition.negate_condition",
              "delivery_rule.request_method_condition.operator",
              "delivery_rule.request_scheme_condition.negate_condition",
              "delivery_rule.request_scheme_condition.operator",
              "delivery_rule.request_uri_condition.match_values",
              "delivery_rule.request_uri_condition.negate_condition",
              "delivery_rule.request_uri_condition.transforms",
              "delivery_rule.url_file_extension_condition.match_values",
              "delivery_rule.url_file_extension_condition.negate_condition",
              "delivery_rule.url_file_extension_condition.transforms",
              "delivery_rule.url_file_name_condition.match_values",
              "delivery_rule.url_file_name_condition.negate_condition",
              "delivery_rule.url_file_name_condition.transforms",
              "delivery_rule.url_path_condition.match_values",
              "delivery_rule.url_path_condition.negate_condition",
              "delivery_rule.url_path_condition.transforms",
              "delivery_rule.url_redirect_action.fragment",
              "delivery_rule.url_redirect_action.hostname",
              "delivery_rule.url_redirect_action.path",
              "delivery_rule.url_redirect_action.protocol",
              "delivery_rule.url_redirect_action.query_string",
              "delivery_rule.url_rewrite_action.preserve_unmatched_path",
              "global_delivery_rule.cache_expiration_action.duration",
              "global_delivery_rule.cache_key_query_string_action.parameters",
              "global_delivery_rule.modify_request_header_action.value",
              "global_delivery_rule.modify_response_header_action.value",
              "global_delivery_rule.url_redirect_action.fragment",
              "global_delivery_rule.url_redirect_action.hostname",
              "global_delivery_rule.url_redirect_action.path",
              "global_delivery_rule.url_redirect_action.protocol",
              "global_delivery_rule.url_redirect_action.query_string",
              "global_delivery_rule.url_rewrite_action.preserve_unmatched_path",
              "origin.http_port",
              "origin.https_port",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "profile_name",
              "resource_group_name",
              "delivery_rule.name",
              "delivery_rule.order",
              "delivery_rule.cache_expiration_action.behavior",
              "delivery_rule.cache_key_query_string_action.behavior",
              "delivery_rule.cookies_condition.operator",
              "delivery_rule.cookies_condition.selector",
              "delivery_rule.device_condition.match_values",
              "delivery_rule.http_version_condition.match_values",
              "delivery_rule.modify_request_header_action.action",
              "delivery_rule.modify_request_header_action.name",
              "delivery_rule.modify_response_header_action.action",
              "delivery_rule.modify_response_header_action.name",
              "delivery_rule.post_arg_condition.operator",
              "delivery_rule.post_arg_condition.selector",
              "delivery_rule.query_string_condition.operator",
              "delivery_rule.remote_address_condition.operator",
              "delivery_rule.request_body_condition.operator",
              "delivery_rule.request_header_condition.operator",
              "delivery_rule.request_header_condition.selector",
              "delivery_rule.request_method_condition.match_values",
              "delivery_rule.request_scheme_condition.match_values",
              "delivery_rule.request_uri_condition.operator",
              "delivery_rule.url_file_extension_condition.operator",
              "delivery_rule.url_file_name_condition.operator",
              "delivery_rule.url_path_condition.operator",
              "delivery_rule.url_redirect_action.redirect_type",
              "delivery_rule.url_rewrite_action.destination",
              "delivery_rule.url_rewrite_action.source_pattern",
              "geo_filter.action",
              "geo_filter.country_codes",
              "geo_filter.relative_path",
              "global_delivery_rule.cache_expiration_action.behavior",
              "global_delivery_rule.cache_key_query_string_action.behavior",
              "global_delivery_rule.modify_request_header_action.action",
              "global_delivery_rule.modify_request_header_action.name",
              "global_delivery_rule.modify_response_header_action.action",
              "global_delivery_rule.modify_response_header_action.name",
              "global_delivery_rule.url_redirect_action.redirect_type",
              "global_delivery_rule.url_rewrite_action.destination",
              "global_delivery_rule.url_rewrite_action.source_pattern",
              "origin.host_name",
              "origin.name",
              "delivery_rule",
              "delivery_rule.cache_expiration_action",
              "delivery_rule.cache_key_query_string_action",
              "delivery_rule.cookies_condition",
              "delivery_rule.device_condition",
              "delivery_rule.http_version_condition",
              "delivery_rule.modify_request_header_action",
              "delivery_rule.modify_response_header_action",
              "delivery_rule.post_arg_condition",
              "delivery_rule.query_string_condition",
              "delivery_rule.remote_address_condition",
              "delivery_rule.request_body_condition",
              "delivery_rule.request_header_condition",
              "delivery_rule.request_method_condition",
              "delivery_rule.request_scheme_condition",
              "delivery_rule.request_uri_condition",
              "delivery_rule.url_file_extension_condition",
              "delivery_rule.url_file_name_condition",
              "delivery_rule.url_path_condition",
              "delivery_rule.url_redirect_action",
              "delivery_rule.url_rewrite_action",
              "geo_filter",
              "global_delivery_rule",
              "global_delivery_rule.cache_expiration_action",
              "global_delivery_rule.cache_key_query_string_action",
              "global_delivery_rule.modify_request_header_action",
              "global_delivery_rule.modify_response_header_action",
              "global_delivery_rule.url_redirect_action",
              "global_delivery_rule.url_rewrite_action",
              "origin",
              "timeouts"
            ],
            "azurerm_cdn_endpoint_custom_domain": [
              "id",
              "cdn_managed_https.tls_version",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "user_managed_https.key_vault_certificate_id",
              "user_managed_https.key_vault_secret_id",
              "user_managed_https.tls_version",
              "cdn_endpoint_id",
              "host_name",
              "name",
              "cdn_managed_https.certificate_type",
              "cdn_managed_https.protocol_type",
              "cdn_managed_https",
              "timeouts",
              "user_managed_https"
            ],
            "azurerm_cdn_frontdoor_custom_domain": [
              "dns_zone_id",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "tls.cdn_frontdoor_secret_id",
              "tls.certificate_type",
              "tls.minimum_tls_version",
              "cdn_frontdoor_profile_id",
              "host_name",
              "name",
              "timeouts",
              "tls"
            ],
            "azurerm_cdn_frontdoor_custom_domain_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cdn_frontdoor_custom_domain_id",
              "cdn_frontdoor_route_ids",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_endpoint": [
              "enabled",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cdn_frontdoor_profile_id",
              "name",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_firewall_policy": [
              "custom_block_response_body",
              "custom_block_response_status_code",
              "enabled",
              "id",
              "redirect_url",
              "tags",
              "custom_rule.enabled",
              "custom_rule.priority",
              "custom_rule.rate_limit_duration_in_minutes",
              "custom_rule.rate_limit_threshold",
              "custom_rule.match_condition.negation_condition",
              "custom_rule.match_condition.selector",
              "custom_rule.match_condition.transforms",
              "managed_rule.override.rule.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "mode",
              "name",
              "resource_group_name",
              "sku_name",
              "custom_rule.action",
              "custom_rule.name",
              "custom_rule.type",
              "custom_rule.match_condition.match_values",
              "custom_rule.match_condition.match_variable",
              "custom_rule.match_condition.operator",
              "managed_rule.action",
              "managed_rule.type",
              "managed_rule.version",
              "managed_rule.exclusion.match_variable",
              "managed_rule.exclusion.operator",
              "managed_rule.exclusion.selector",
              "managed_rule.override.rule_group_name",
              "managed_rule.override.exclusion.match_variable",
              "managed_rule.override.exclusion.operator",
              "managed_rule.override.exclusion.selector",
              "managed_rule.override.rule.action",
              "managed_rule.override.rule.rule_id",
              "managed_rule.override.rule.exclusion.match_variable",
              "managed_rule.override.rule.exclusion.operator",
              "managed_rule.override.rule.exclusion.selector",
              "custom_rule",
              "custom_rule.match_condition",
              "managed_rule",
              "managed_rule.exclusion",
              "managed_rule.override",
              "managed_rule.override.exclusion",
              "managed_rule.override.rule",
              "managed_rule.override.rule.exclusion",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_origin": [
              "enabled",
              "health_probes_enabled",
              "http_port",
              "https_port",
              "id",
              "origin_host_header",
              "priority",
              "weight",
              "private_link.request_message",
              "private_link.target_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cdn_frontdoor_origin_group_id",
              "certificate_name_check_enabled",
              "host_name",
              "name",
              "private_link.location",
              "private_link.private_link_target_id",
              "private_link",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_origin_group": [
              "id",
              "restore_traffic_time_to_healed_or_new_endpoint_in_minutes",
              "session_affinity_enabled",
              "health_probe.path",
              "health_probe.request_type",
              "load_balancing.additional_latency_in_milliseconds",
              "load_balancing.sample_size",
              "load_balancing.successful_samples_required",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cdn_frontdoor_profile_id",
              "name",
              "health_probe.interval_in_seconds",
              "health_probe.protocol",
              "health_probe",
              "load_balancing",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_profile": [
              "id",
              "response_timeout_seconds",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_route": [
              "cdn_frontdoor_custom_domain_ids",
              "cdn_frontdoor_origin_path",
              "cdn_frontdoor_rule_set_ids",
              "enabled",
              "forwarding_protocol",
              "https_redirect_enabled",
              "id",
              "link_to_default_domain",
              "cache.compression_enabled",
              "cache.content_types_to_compress",
              "cache.query_string_caching_behavior",
              "cache.query_strings",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cdn_frontdoor_endpoint_id",
              "cdn_frontdoor_origin_group_id",
              "cdn_frontdoor_origin_ids",
              "name",
              "patterns_to_match",
              "supported_protocols",
              "cache",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_route_disable_link_to_default_domain": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cdn_frontdoor_custom_domain_ids",
              "cdn_frontdoor_route_id",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_rule": [
              "behavior_on_match",
              "id",
              "actions.request_header_action.value",
              "actions.response_header_action.value",
              "actions.route_configuration_override_action.cache_behavior",
              "actions.route_configuration_override_action.cache_duration",
              "actions.route_configuration_override_action.cdn_frontdoor_origin_group_id",
              "actions.route_configuration_override_action.compression_enabled",
              "actions.route_configuration_override_action.forwarding_protocol",
              "actions.route_configuration_override_action.query_string_caching_behavior",
              "actions.route_configuration_override_action.query_string_parameters",
              "actions.url_redirect_action.destination_fragment",
              "actions.url_redirect_action.destination_path",
              "actions.url_redirect_action.query_string",
              "actions.url_redirect_action.redirect_protocol",
              "actions.url_rewrite_action.preserve_unmatched_path",
              "conditions.client_port_condition.match_values",
              "conditions.client_port_condition.negate_condition",
              "conditions.cookies_condition.match_values",
              "conditions.cookies_condition.negate_condition",
              "conditions.cookies_condition.transforms",
              "conditions.host_name_condition.match_values",
              "conditions.host_name_condition.negate_condition",
              "conditions.host_name_condition.transforms",
              "conditions.http_version_condition.negate_condition",
              "conditions.http_version_condition.operator",
              "conditions.is_device_condition.match_values",
              "conditions.is_device_condition.negate_condition",
              "conditions.is_device_condition.operator",
              "conditions.post_args_condition.match_values",
              "conditions.post_args_condition.negate_condition",
              "conditions.post_args_condition.transforms",
              "conditions.query_string_condition.match_values",
              "conditions.query_string_condition.negate_condition",
              "conditions.query_string_condition.transforms",
              "conditions.remote_address_condition.match_values",
              "conditions.remote_address_condition.negate_condition",
              "conditions.remote_address_condition.operator",
              "conditions.request_body_condition.negate_condition",
              "conditions.request_body_condition.transforms",
              "conditions.request_header_condition.match_values",
              "conditions.request_header_condition.negate_condition",
              "conditions.request_header_condition.transforms",
              "conditions.request_method_condition.negate_condition",
              "conditions.request_method_condition.operator",
              "conditions.request_scheme_condition.match_values",
              "conditions.request_scheme_condition.negate_condition",
              "conditions.request_scheme_condition.operator",
              "conditions.request_uri_condition.match_values",
              "conditions.request_uri_condition.negate_condition",
              "conditions.request_uri_condition.transforms",
              "conditions.server_port_condition.negate_condition",
              "conditions.socket_address_condition.match_values",
              "conditions.socket_address_condition.negate_condition",
              "conditions.socket_address_condition.operator",
              "conditions.ssl_protocol_condition.negate_condition",
              "conditions.ssl_protocol_condition.operator",
              "conditions.url_file_extension_condition.negate_condition",
              "conditions.url_file_extension_condition.transforms",
              "conditions.url_filename_condition.negate_condition",
              "conditions.url_filename_condition.transforms",
              "conditions.url_path_condition.match_values",
              "conditions.url_path_condition.negate_condition",
              "conditions.url_path_condition.transforms",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cdn_frontdoor_rule_set_id",
              "name",
              "order",
              "actions.request_header_action.header_action",
              "actions.request_header_action.header_name",
              "actions.response_header_action.header_action",
              "actions.response_header_action.header_name",
              "actions.url_redirect_action.destination_hostname",
              "actions.url_redirect_action.redirect_type",
              "actions.url_rewrite_action.destination",
              "actions.url_rewrite_action.source_pattern",
              "conditions.client_port_condition.operator",
              "conditions.cookies_condition.cookie_name",
              "conditions.cookies_condition.operator",
              "conditions.host_name_condition.operator",
              "conditions.http_version_condition.match_values",
              "conditions.post_args_condition.operator",
              "conditions.post_args_condition.post_args_name",
              "conditions.query_string_condition.operator",
              "conditions.request_body_condition.match_values",
              "conditions.request_body_condition.operator",
              "conditions.request_header_condition.header_name",
              "conditions.request_header_condition.operator",
              "conditions.request_method_condition.match_values",
              "conditions.request_uri_condition.operator",
              "conditions.server_port_condition.match_values",
              "conditions.server_port_condition.operator",
              "conditions.ssl_protocol_condition.match_values",
              "conditions.url_file_extension_condition.match_values",
              "conditions.url_file_extension_condition.operator",
              "conditions.url_filename_condition.match_values",
              "conditions.url_filename_condition.operator",
              "conditions.url_path_condition.operator",
              "actions",
              "actions.request_header_action",
              "actions.response_header_action",
              "actions.route_configuration_override_action",
              "actions.url_redirect_action",
              "actions.url_rewrite_action",
              "conditions",
              "conditions.client_port_condition",
              "conditions.cookies_condition",
              "conditions.host_name_condition",
              "conditions.http_version_condition",
              "conditions.is_device_condition",
              "conditions.post_args_condition",
              "conditions.query_string_condition",
              "conditions.remote_address_condition",
              "conditions.request_body_condition",
              "conditions.request_header_condition",
              "conditions.request_method_condition",
              "conditions.request_scheme_condition",
              "conditions.request_uri_condition",
              "conditions.server_port_condition",
              "conditions.socket_address_condition",
              "conditions.ssl_protocol_condition",
              "conditions.url_file_extension_condition",
              "conditions.url_filename_condition",
              "conditions.url_path_condition",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_rule_set": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cdn_frontdoor_profile_id",
              "name",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_secret": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "cdn_frontdoor_profile_id",
              "name",
              "secret.customer_certificate.key_vault_certificate_id",
              "secret",
              "secret.customer_certificate",
              "timeouts"
            ],
            "azurerm_cdn_frontdoor_security_policy": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "cdn_frontdoor_profile_id",
              "name",
              "security_policies.firewall.cdn_frontdoor_firewall_policy_id",
              "security_policies.firewall.association.patterns_to_match",
              "security_policies.firewall.association.domain.cdn_frontdoor_domain_id",
              "security_policies",
              "security_policies.firewall",
              "security_policies.firewall.association",
              "security_policies.firewall.association.domain",
              "timeouts"
            ],
            "azurerm_cdn_profile": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "timeouts"
            ],
            "azurerm_cognitive_account": [
              "custom_question_answering_search_service_id",
              "custom_question_answering_search_service_key",
              "custom_subdomain_name",
              "dynamic_throttling_enabled",
              "fqdns",
              "id",
              "local_auth_enabled",
              "metrics_advisor_aad_client_id",
              "metrics_advisor_aad_tenant_id",
              "metrics_advisor_super_user_name",
              "metrics_advisor_website_name",
              "outbound_network_access_restricted",
              "public_network_access_enabled",
              "qna_runtime_endpoint",
              "tags",
              "customer_managed_key.identity_client_id",
              "identity.identity_ids",
              "network_acls.ip_rules",
              "network_acls.virtual_network_rules.ignore_missing_vnet_service_endpoint",
              "storage.identity_client_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "kind",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "customer_managed_key.key_vault_key_id",
              "identity.type",
              "network_acls.default_action",
              "network_acls.virtual_network_rules.subnet_id",
              "storage.storage_account_id",
              "customer_managed_key",
              "identity",
              "network_acls",
              "network_acls.virtual_network_rules",
              "storage",
              "timeouts"
            ],
            "azurerm_cognitive_account_customer_managed_key": [
              "id",
              "identity_client_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cognitive_account_id",
              "key_vault_key_id",
              "timeouts"
            ],
            "azurerm_cognitive_deployment": [
              "id",
              "rai_policy_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "cognitive_account_id",
              "name",
              "model.format",
              "model.name",
              "model.version",
              "scale.type",
              "model",
              "scale",
              "timeouts"
            ],
            "azurerm_communication_service": [
              "data_location",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_confidential_ledger": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "ledger_type",
              "location",
              "name",
              "resource_group_name",
              "azuread_based_service_principal.ledger_role_name",
              "azuread_based_service_principal.principal_id",
              "azuread_based_service_principal.tenant_id",
              "certificate_based_security_principal.ledger_role_name",
              "certificate_based_security_principal.pem_public_key",
              "azuread_based_service_principal",
              "certificate_based_security_principal",
              "timeouts"
            ],
            "azurerm_consumption_budget_management_group": [
              "etag",
              "id",
              "time_grain",
              "filter.dimension.operator",
              "filter.not.dimension.operator",
              "filter.not.tag.operator",
              "filter.tag.operator",
              "notification.enabled",
              "notification.threshold_type",
              "time_period.end_date",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "amount",
              "management_group_id",
              "name",
              "filter.dimension.name",
              "filter.dimension.values",
              "filter.not.dimension.name",
              "filter.not.dimension.values",
              "filter.not.tag.name",
              "filter.not.tag.values",
              "filter.tag.name",
              "filter.tag.values",
              "notification.contact_emails",
              "notification.operator",
              "notification.threshold",
              "time_period.start_date",
              "filter",
              "filter.dimension",
              "filter.not",
              "filter.not.dimension",
              "filter.not.tag",
              "filter.tag",
              "notification",
              "time_period",
              "timeouts"
            ],
            "azurerm_consumption_budget_resource_group": [
              "etag",
              "id",
              "time_grain",
              "filter.dimension.operator",
              "filter.not.dimension.operator",
              "filter.not.tag.operator",
              "filter.tag.operator",
              "notification.contact_emails",
              "notification.contact_groups",
              "notification.contact_roles",
              "notification.enabled",
              "notification.threshold_type",
              "time_period.end_date",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "amount",
              "name",
              "resource_group_id",
              "filter.dimension.name",
              "filter.dimension.values",
              "filter.not.dimension.name",
              "filter.not.dimension.values",
              "filter.not.tag.name",
              "filter.not.tag.values",
              "filter.tag.name",
              "filter.tag.values",
              "notification.operator",
              "notification.threshold",
              "time_period.start_date",
              "filter",
              "filter.dimension",
              "filter.not",
              "filter.not.dimension",
              "filter.not.tag",
              "filter.tag",
              "notification",
              "time_period",
              "timeouts"
            ],
            "azurerm_consumption_budget_subscription": [
              "etag",
              "id",
              "time_grain",
              "filter.dimension.operator",
              "filter.not.dimension.operator",
              "filter.not.tag.operator",
              "filter.tag.operator",
              "notification.contact_emails",
              "notification.contact_groups",
              "notification.contact_roles",
              "notification.enabled",
              "notification.threshold_type",
              "time_period.end_date",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "amount",
              "name",
              "subscription_id",
              "filter.dimension.name",
              "filter.dimension.values",
              "filter.not.dimension.name",
              "filter.not.dimension.values",
              "filter.not.tag.name",
              "filter.not.tag.values",
              "filter.tag.name",
              "filter.tag.values",
              "notification.operator",
              "notification.threshold",
              "time_period.start_date",
              "filter",
              "filter.dimension",
              "filter.not",
              "filter.not.dimension",
              "filter.not.tag",
              "filter.tag",
              "notification",
              "time_period",
              "timeouts"
            ],
            "azurerm_container_connected_registry": [
              "audit_log_enabled",
              "client_token_ids",
              "id",
              "log_level",
              "mode",
              "parent_registry_id",
              "sync_message_ttl",
              "sync_schedule",
              "sync_window",
              "notification.digest",
              "notification.tag",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "container_registry_id",
              "name",
              "sync_token_id",
              "notification.action",
              "notification.name",
              "notification",
              "timeouts"
            ],
            "azurerm_container_group": [
              "dns_name_label",
              "dns_name_label_reuse_policy",
              "exposed_port",
              "id",
              "ip_address_type",
              "key_vault_key_id",
              "network_profile_id",
              "restart_policy",
              "subnet_ids",
              "tags",
              "zones",
              "container.commands",
              "container.cpu_limit",
              "container.environment_variables",
              "container.memory_limit",
              "container.secure_environment_variables",
              "container.gpu.count",
              "container.gpu.sku",
              "container.gpu_limit.count",
              "container.gpu_limit.sku",
              "container.liveness_probe.exec",
              "container.liveness_probe.failure_threshold",
              "container.liveness_probe.initial_delay_seconds",
              "container.liveness_probe.period_seconds",
              "container.liveness_probe.success_threshold",
              "container.liveness_probe.timeout_seconds",
              "container.liveness_probe.http_get.http_headers",
              "container.liveness_probe.http_get.path",
              "container.liveness_probe.http_get.port",
              "container.liveness_probe.http_get.scheme",
              "container.ports.port",
              "container.ports.protocol",
              "container.readiness_probe.exec",
              "container.readiness_probe.failure_threshold",
              "container.readiness_probe.initial_delay_seconds",
              "container.readiness_probe.period_seconds",
              "container.readiness_probe.success_threshold",
              "container.readiness_probe.timeout_seconds",
              "container.readiness_probe.http_get.http_headers",
              "container.readiness_probe.http_get.path",
              "container.readiness_probe.http_get.port",
              "container.readiness_probe.http_get.scheme",
              "container.volume.empty_dir",
              "container.volume.read_only",
              "container.volume.secret",
              "container.volume.share_name",
              "container.volume.storage_account_key",
              "container.volume.storage_account_name",
              "container.volume.git_repo.directory",
              "container.volume.git_repo.revision",
              "diagnostics.log_analytics.log_type",
              "diagnostics.log_analytics.metadata",
              "dns_config.options",
              "dns_config.search_domains",
              "identity.identity_ids",
              "image_registry_credential.password",
              "image_registry_credential.user_assigned_identity_id",
              "image_registry_credential.username",
              "init_container.commands",
              "init_container.environment_variables",
              "init_container.secure_environment_variables",
              "init_container.volume.empty_dir",
              "init_container.volume.read_only",
              "init_container.volume.secret",
              "init_container.volume.share_name",
              "init_container.volume.storage_account_key",
              "init_container.volume.storage_account_name",
              "init_container.volume.git_repo.directory",
              "init_container.volume.git_repo.revision",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "os_type",
              "resource_group_name",
              "container.cpu",
              "container.image",
              "container.memory",
              "container.name",
              "container.volume.mount_path",
              "container.volume.name",
              "container.volume.git_repo.url",
              "diagnostics.log_analytics.workspace_id",
              "diagnostics.log_analytics.workspace_key",
              "dns_config.nameservers",
              "identity.type",
              "image_registry_credential.server",
              "init_container.image",
              "init_container.name",
              "init_container.volume.mount_path",
              "init_container.volume.name",
              "init_container.volume.git_repo.url",
              "container",
              "container.gpu",
              "container.gpu_limit",
              "container.liveness_probe",
              "container.liveness_probe.http_get",
              "container.ports",
              "container.readiness_probe",
              "container.readiness_probe.http_get",
              "container.volume",
              "container.volume.git_repo",
              "diagnostics",
              "diagnostics.log_analytics",
              "dns_config",
              "identity",
              "image_registry_credential",
              "init_container",
              "init_container.volume",
              "init_container.volume.git_repo",
              "timeouts",
              "exposed_port.port",
              "exposed_port.protocol"
            ],
            "azurerm_container_registry": [
              "admin_enabled",
              "anonymous_pull_enabled",
              "data_endpoint_enabled",
              "encryption",
              "export_policy_enabled",
              "id",
              "network_rule_bypass_option",
              "network_rule_set",
              "public_network_access_enabled",
              "quarantine_policy_enabled",
              "retention_policy",
              "tags",
              "trust_policy",
              "zone_redundancy_enabled",
              "georeplications.regional_endpoint_enabled",
              "georeplications.tags",
              "georeplications.zone_redundancy_enabled",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "georeplications.location",
              "identity.type",
              "georeplications",
              "identity",
              "timeouts"
            ],
            "azurerm_container_registry_agent_pool": [
              "id",
              "instance_count",
              "tags",
              "tier",
              "virtual_network_subnet_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "container_registry_name",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_container_registry_scope_map": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "actions",
              "container_registry_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_container_registry_task": [
              "agent_pool_name",
              "enabled",
              "id",
              "is_system_task",
              "log_template",
              "tags",
              "timeout_in_seconds",
              "base_image_trigger.enabled",
              "base_image_trigger.update_trigger_endpoint",
              "base_image_trigger.update_trigger_payload_type",
              "docker_step.arguments",
              "docker_step.cache_enabled",
              "docker_step.image_names",
              "docker_step.push_enabled",
              "docker_step.secret_arguments",
              "docker_step.target",
              "encoded_step.context_access_token",
              "encoded_step.context_path",
              "encoded_step.secret_values",
              "encoded_step.value_content",
              "encoded_step.values",
              "file_step.context_access_token",
              "file_step.context_path",
              "file_step.secret_values",
              "file_step.value_file_path",
              "file_step.values",
              "identity.identity_ids",
              "platform.architecture",
              "platform.variant",
              "registry_credential.custom.identity",
              "registry_credential.custom.password",
              "registry_credential.custom.username",
              "source_trigger.branch",
              "source_trigger.enabled",
              "source_trigger.authentication.expire_in_seconds",
              "source_trigger.authentication.refresh_token",
              "source_trigger.authentication.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "timer_trigger.enabled",
              "container_registry_id",
              "name",
              "agent_setting.cpu",
              "base_image_trigger.name",
              "base_image_trigger.type",
              "docker_step.context_access_token",
              "docker_step.context_path",
              "docker_step.dockerfile_path",
              "encoded_step.task_content",
              "file_step.task_file_path",
              "identity.type",
              "platform.os",
              "registry_credential.custom.login_server",
              "registry_credential.source.login_mode",
              "source_trigger.events",
              "source_trigger.name",
              "source_trigger.repository_url",
              "source_trigger.source_type",
              "source_trigger.authentication.token",
              "source_trigger.authentication.token_type",
              "timer_trigger.name",
              "timer_trigger.schedule",
              "agent_setting",
              "base_image_trigger",
              "docker_step",
              "encoded_step",
              "file_step",
              "identity",
              "platform",
              "registry_credential",
              "registry_credential.custom",
              "registry_credential.source",
              "source_trigger",
              "source_trigger.authentication",
              "timeouts",
              "timer_trigger"
            ],
            "azurerm_container_registry_task_schedule_run_now": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "container_registry_task_id",
              "timeouts"
            ],
            "azurerm_container_registry_token": [
              "enabled",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "container_registry_name",
              "name",
              "resource_group_name",
              "scope_map_id",
              "timeouts"
            ],
            "azurerm_container_registry_token_password": [
              "id",
              "password1.expiry",
              "password2.expiry",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "container_registry_token_id",
              "password1",
              "password2",
              "timeouts"
            ],
            "azurerm_container_registry_webhook": [
              "custom_headers",
              "id",
              "scope",
              "status",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "actions",
              "location",
              "name",
              "registry_name",
              "resource_group_name",
              "service_uri",
              "timeouts"
            ],
            "azurerm_cosmosdb_account": [
              "access_key_metadata_writes_enabled",
              "analytical_storage_enabled",
              "create_mode",
              "default_identity_type",
              "enable_automatic_failover",
              "enable_free_tier",
              "enable_multiple_write_locations",
              "id",
              "ip_range_filter",
              "is_virtual_network_filter_enabled",
              "key_vault_key_id",
              "kind",
              "local_authentication_disabled",
              "mongo_server_version",
              "network_acl_bypass_for_azure_services",
              "network_acl_bypass_ids",
              "public_network_access_enabled",
              "tags",
              "backup.interval_in_minutes",
              "backup.retention_in_hours",
              "backup.storage_redundancy",
              "consistency_policy.max_interval_in_seconds",
              "consistency_policy.max_staleness_prefix",
              "geo_location.zone_redundant",
              "identity.identity_ids",
              "restore.database.collection_names",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "virtual_network_rule.ignore_missing_vnet_service_endpoint",
              "location",
              "name",
              "offer_type",
              "resource_group_name",
              "analytical_storage.schema_type",
              "backup.type",
              "capabilities.name",
              "capacity.total_throughput_limit",
              "consistency_policy.consistency_level",
              "cors_rule.allowed_headers",
              "cors_rule.allowed_methods",
              "cors_rule.allowed_origins",
              "cors_rule.exposed_headers",
              "cors_rule.max_age_in_seconds",
              "geo_location.failover_priority",
              "geo_location.location",
              "identity.type",
              "restore.restore_timestamp_in_utc",
              "restore.source_cosmosdb_account_id",
              "restore.database.name",
              "virtual_network_rule.id",
              "analytical_storage",
              "backup",
              "capabilities",
              "capacity",
              "consistency_policy",
              "cors_rule",
              "geo_location",
              "identity",
              "restore",
              "restore.database",
              "timeouts",
              "virtual_network_rule"
            ],
            "azurerm_cosmosdb_cassandra_cluster": [
              "authentication_method",
              "client_certificate_pems",
              "external_gossip_certificate_pems",
              "external_seed_node_ip_addresses",
              "hours_between_backups",
              "id",
              "repair_enabled",
              "tags",
              "version",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "default_admin_password",
              "delegated_management_subnet_id",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_cosmosdb_cassandra_datacenter": [
              "availability_zones_enabled",
              "backup_storage_customer_key_uri",
              "base64_encoded_yaml_fragment",
              "disk_count",
              "disk_sku",
              "id",
              "managed_disk_customer_key_uri",
              "node_count",
              "sku_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cassandra_cluster_id",
              "delegated_management_subnet_id",
              "location",
              "name",
              "timeouts"
            ],
            "azurerm_cosmosdb_cassandra_keyspace": [
              "id",
              "throughput",
              "autoscale_settings.max_throughput",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "name",
              "resource_group_name",
              "autoscale_settings",
              "timeouts"
            ],
            "azurerm_cosmosdb_cassandra_table": [
              "analytical_storage_ttl",
              "default_ttl",
              "id",
              "throughput",
              "autoscale_settings.max_throughput",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cassandra_keyspace_id",
              "name",
              "schema.cluster_key.name",
              "schema.cluster_key.order_by",
              "schema.column.name",
              "schema.column.type",
              "schema.partition_key.name",
              "autoscale_settings",
              "schema",
              "schema.cluster_key",
              "schema.column",
              "schema.partition_key",
              "timeouts"
            ],
            "azurerm_cosmosdb_gremlin_database": [
              "id",
              "throughput",
              "autoscale_settings.max_throughput",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "name",
              "resource_group_name",
              "autoscale_settings",
              "timeouts"
            ],
            "azurerm_cosmosdb_gremlin_graph": [
              "default_ttl",
              "id",
              "partition_key_version",
              "throughput",
              "autoscale_settings.max_throughput",
              "conflict_resolution_policy.conflict_resolution_path",
              "conflict_resolution_policy.conflict_resolution_procedure",
              "index_policy.automatic",
              "index_policy.excluded_paths",
              "index_policy.included_paths",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "database_name",
              "name",
              "partition_key_path",
              "resource_group_name",
              "conflict_resolution_policy.mode",
              "index_policy.indexing_mode",
              "index_policy.composite_index.index.order",
              "index_policy.composite_index.index.path",
              "index_policy.spatial_index.path",
              "unique_key.paths",
              "autoscale_settings",
              "conflict_resolution_policy",
              "index_policy",
              "index_policy.composite_index",
              "index_policy.composite_index.index",
              "index_policy.spatial_index",
              "timeouts",
              "unique_key"
            ],
            "azurerm_cosmosdb_mongo_collection": [
              "analytical_storage_ttl",
              "default_ttl_seconds",
              "id",
              "shard_key",
              "throughput",
              "autoscale_settings.max_throughput",
              "index.unique",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "database_name",
              "name",
              "resource_group_name",
              "index.keys",
              "autoscale_settings",
              "index",
              "timeouts"
            ],
            "azurerm_cosmosdb_mongo_database": [
              "id",
              "throughput",
              "autoscale_settings.max_throughput",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "name",
              "resource_group_name",
              "autoscale_settings",
              "timeouts"
            ],
            "azurerm_cosmosdb_notebook_workspace": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_cosmosdb_sql_container": [
              "analytical_storage_ttl",
              "default_ttl",
              "id",
              "partition_key_version",
              "throughput",
              "autoscale_settings.max_throughput",
              "conflict_resolution_policy.conflict_resolution_path",
              "conflict_resolution_policy.conflict_resolution_procedure",
              "indexing_policy.indexing_mode",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "database_name",
              "name",
              "partition_key_path",
              "resource_group_name",
              "conflict_resolution_policy.mode",
              "indexing_policy.composite_index.index.order",
              "indexing_policy.composite_index.index.path",
              "indexing_policy.excluded_path.path",
              "indexing_policy.included_path.path",
              "indexing_policy.spatial_index.path",
              "unique_key.paths",
              "autoscale_settings",
              "conflict_resolution_policy",
              "indexing_policy",
              "indexing_policy.composite_index",
              "indexing_policy.composite_index.index",
              "indexing_policy.excluded_path",
              "indexing_policy.included_path",
              "indexing_policy.spatial_index",
              "timeouts",
              "unique_key"
            ],
            "azurerm_cosmosdb_sql_database": [
              "id",
              "throughput",
              "autoscale_settings.max_throughput",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "name",
              "resource_group_name",
              "autoscale_settings",
              "timeouts"
            ],
            "azurerm_cosmosdb_sql_dedicated_gateway": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cosmosdb_account_id",
              "instance_count",
              "instance_size",
              "timeouts"
            ],
            "azurerm_cosmosdb_sql_function": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "body",
              "container_id",
              "name",
              "timeouts"
            ],
            "azurerm_cosmosdb_sql_role_assignment": [
              "id",
              "name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "principal_id",
              "resource_group_name",
              "role_definition_id",
              "scope",
              "timeouts"
            ],
            "azurerm_cosmosdb_sql_role_definition": [
              "id",
              "role_definition_id",
              "type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "assignable_scopes",
              "name",
              "resource_group_name",
              "permissions.data_actions",
              "permissions",
              "timeouts"
            ],
            "azurerm_cosmosdb_sql_stored_procedure": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "body",
              "container_name",
              "database_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_cosmosdb_sql_trigger": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "body",
              "container_id",
              "name",
              "operation",
              "type",
              "timeouts"
            ],
            "azurerm_cosmosdb_table": [
              "id",
              "throughput",
              "autoscale_settings.max_throughput",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "name",
              "resource_group_name",
              "autoscale_settings",
              "timeouts"
            ],
            "azurerm_custom_provider": [
              "id",
              "tags",
              "resource_type.routing_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "action.endpoint",
              "action.name",
              "resource_type.endpoint",
              "resource_type.name",
              "validation.specification",
              "action",
              "resource_type",
              "timeouts",
              "validation"
            ],
            "azurerm_dashboard": [
              "dashboard_properties",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_dashboard_grafana": [
              "api_key_enabled",
              "auto_generated_domain_name_label_scope",
              "deterministic_outbound_ip_enabled",
              "id",
              "public_network_access_enabled",
              "sku",
              "tags",
              "zone_redundancy_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_data_factory": [
              "customer_managed_key_id",
              "customer_managed_key_identity_id",
              "id",
              "managed_virtual_network_enabled",
              "public_network_enabled",
              "purview_id",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "github_configuration.account_name",
              "github_configuration.branch_name",
              "github_configuration.git_url",
              "github_configuration.repository_name",
              "github_configuration.root_folder",
              "global_parameter.name",
              "global_parameter.type",
              "global_parameter.value",
              "identity.type",
              "vsts_configuration.account_name",
              "vsts_configuration.branch_name",
              "vsts_configuration.project_name",
              "vsts_configuration.repository_name",
              "vsts_configuration.root_folder",
              "vsts_configuration.tenant_id",
              "github_configuration",
              "global_parameter",
              "identity",
              "timeouts",
              "vsts_configuration"
            ],
            "azurerm_data_factory_custom_dataset": [
              "additional_properties",
              "annotations",
              "description",
              "folder",
              "id",
              "parameters",
              "schema_json",
              "linked_service.parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "type",
              "type_properties_json",
              "linked_service.name",
              "linked_service",
              "timeouts"
            ],
            "azurerm_data_factory_data_flow": [
              "annotations",
              "description",
              "folder",
              "id",
              "script",
              "script_lines",
              "sink.description",
              "sink.dataset.parameters",
              "sink.flowlet.dataset_parameters",
              "sink.flowlet.parameters",
              "sink.linked_service.parameters",
              "sink.rejected_linked_service.parameters",
              "sink.schema_linked_service.parameters",
              "source.description",
              "source.dataset.parameters",
              "source.flowlet.dataset_parameters",
              "source.flowlet.parameters",
              "source.linked_service.parameters",
              "source.rejected_linked_service.parameters",
              "source.schema_linked_service.parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "transformation.description",
              "transformation.dataset.parameters",
              "transformation.flowlet.dataset_parameters",
              "transformation.flowlet.parameters",
              "transformation.linked_service.parameters",
              "data_factory_id",
              "name",
              "sink.name",
              "sink.dataset.name",
              "sink.flowlet.name",
              "sink.linked_service.name",
              "sink.rejected_linked_service.name",
              "sink.schema_linked_service.name",
              "source.name",
              "source.dataset.name",
              "source.flowlet.name",
              "source.linked_service.name",
              "source.rejected_linked_service.name",
              "source.schema_linked_service.name",
              "transformation.name",
              "transformation.dataset.name",
              "transformation.flowlet.name",
              "transformation.linked_service.name",
              "sink",
              "sink.dataset",
              "sink.flowlet",
              "sink.linked_service",
              "sink.rejected_linked_service",
              "sink.schema_linked_service",
              "source",
              "source.dataset",
              "source.flowlet",
              "source.linked_service",
              "source.rejected_linked_service",
              "source.schema_linked_service",
              "timeouts",
              "transformation",
              "transformation.dataset",
              "transformation.flowlet",
              "transformation.linked_service"
            ],
            "azurerm_data_factory_dataset_azure_blob": [
              "additional_properties",
              "annotations",
              "description",
              "dynamic_filename_enabled",
              "dynamic_path_enabled",
              "filename",
              "folder",
              "id",
              "parameters",
              "path",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "schema_column.name",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_binary": [
              "additional_properties",
              "annotations",
              "description",
              "folder",
              "id",
              "parameters",
              "azure_blob_storage_location.dynamic_container_enabled",
              "azure_blob_storage_location.dynamic_filename_enabled",
              "azure_blob_storage_location.dynamic_path_enabled",
              "azure_blob_storage_location.filename",
              "azure_blob_storage_location.path",
              "compression.level",
              "http_server_location.dynamic_filename_enabled",
              "http_server_location.dynamic_path_enabled",
              "sftp_server_location.dynamic_filename_enabled",
              "sftp_server_location.dynamic_path_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "azure_blob_storage_location.container",
              "compression.type",
              "http_server_location.filename",
              "http_server_location.path",
              "http_server_location.relative_url",
              "sftp_server_location.filename",
              "sftp_server_location.path",
              "azure_blob_storage_location",
              "compression",
              "http_server_location",
              "sftp_server_location",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_cosmosdb_sqlapi": [
              "additional_properties",
              "annotations",
              "collection_name",
              "description",
              "folder",
              "id",
              "parameters",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "schema_column.name",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_delimited_text": [
              "additional_properties",
              "annotations",
              "column_delimiter",
              "compression_codec",
              "compression_level",
              "description",
              "encoding",
              "escape_character",
              "first_row_as_header",
              "folder",
              "id",
              "null_value",
              "parameters",
              "quote_character",
              "row_delimiter",
              "azure_blob_fs_location.filename",
              "azure_blob_fs_location.path",
              "azure_blob_storage_location.dynamic_container_enabled",
              "azure_blob_storage_location.dynamic_filename_enabled",
              "azure_blob_storage_location.dynamic_path_enabled",
              "azure_blob_storage_location.filename",
              "azure_blob_storage_location.path",
              "http_server_location.dynamic_filename_enabled",
              "http_server_location.dynamic_path_enabled",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "azure_blob_fs_location.file_system",
              "azure_blob_storage_location.container",
              "http_server_location.filename",
              "http_server_location.path",
              "http_server_location.relative_url",
              "schema_column.name",
              "azure_blob_fs_location",
              "azure_blob_storage_location",
              "http_server_location",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_http": [
              "additional_properties",
              "annotations",
              "description",
              "folder",
              "id",
              "parameters",
              "relative_url",
              "request_body",
              "request_method",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "schema_column.name",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_json": [
              "additional_properties",
              "annotations",
              "description",
              "encoding",
              "folder",
              "id",
              "parameters",
              "azure_blob_storage_location.dynamic_container_enabled",
              "azure_blob_storage_location.dynamic_filename_enabled",
              "azure_blob_storage_location.dynamic_path_enabled",
              "http_server_location.dynamic_filename_enabled",
              "http_server_location.dynamic_path_enabled",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "azure_blob_storage_location.container",
              "azure_blob_storage_location.filename",
              "azure_blob_storage_location.path",
              "http_server_location.filename",
              "http_server_location.path",
              "http_server_location.relative_url",
              "schema_column.name",
              "azure_blob_storage_location",
              "http_server_location",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_mysql": [
              "additional_properties",
              "annotations",
              "description",
              "folder",
              "id",
              "parameters",
              "table_name",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "schema_column.name",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_parquet": [
              "additional_properties",
              "annotations",
              "compression_codec",
              "compression_level",
              "description",
              "folder",
              "id",
              "parameters",
              "azure_blob_storage_location.dynamic_container_enabled",
              "azure_blob_storage_location.dynamic_filename_enabled",
              "azure_blob_storage_location.dynamic_path_enabled",
              "azure_blob_storage_location.filename",
              "azure_blob_storage_location.path",
              "http_server_location.dynamic_filename_enabled",
              "http_server_location.dynamic_path_enabled",
              "http_server_location.path",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "azure_blob_storage_location.container",
              "http_server_location.filename",
              "http_server_location.relative_url",
              "schema_column.name",
              "azure_blob_storage_location",
              "http_server_location",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_postgresql": [
              "additional_properties",
              "annotations",
              "description",
              "folder",
              "id",
              "parameters",
              "table_name",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "schema_column.name",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_snowflake": [
              "additional_properties",
              "annotations",
              "description",
              "folder",
              "id",
              "parameters",
              "schema_name",
              "table_name",
              "schema_column.precision",
              "schema_column.scale",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "schema_column.name",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_dataset_sql_server_table": [
              "additional_properties",
              "annotations",
              "description",
              "folder",
              "id",
              "parameters",
              "table_name",
              "schema_column.description",
              "schema_column.type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "linked_service_name",
              "name",
              "schema_column.name",
              "schema_column",
              "timeouts"
            ],
            "azurerm_data_factory_flowlet_data_flow": [
              "annotations",
              "description",
              "folder",
              "id",
              "script",
              "script_lines",
              "sink.description",
              "sink.dataset.parameters",
              "sink.flowlet.dataset_parameters",
              "sink.flowlet.parameters",
              "sink.linked_service.parameters",
              "sink.rejected_linked_service.parameters",
              "sink.schema_linked_service.parameters",
              "source.description",
              "source.dataset.parameters",
              "source.flowlet.dataset_parameters",
              "source.flowlet.parameters",
              "source.linked_service.parameters",
              "source.rejected_linked_service.parameters",
              "source.schema_linked_service.parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "transformation.description",
              "transformation.dataset.parameters",
              "transformation.flowlet.dataset_parameters",
              "transformation.flowlet.parameters",
              "transformation.linked_service.parameters",
              "data_factory_id",
              "name",
              "sink.name",
              "sink.dataset.name",
              "sink.flowlet.name",
              "sink.linked_service.name",
              "sink.rejected_linked_service.name",
              "sink.schema_linked_service.name",
              "source.name",
              "source.dataset.name",
              "source.flowlet.name",
              "source.linked_service.name",
              "source.rejected_linked_service.name",
              "source.schema_linked_service.name",
              "transformation.name",
              "transformation.dataset.name",
              "transformation.flowlet.name",
              "transformation.linked_service.name",
              "sink",
              "sink.dataset",
              "sink.flowlet",
              "sink.linked_service",
              "sink.rejected_linked_service",
              "sink.schema_linked_service",
              "source",
              "source.dataset",
              "source.flowlet",
              "source.linked_service",
              "source.rejected_linked_service",
              "source.schema_linked_service",
              "timeouts",
              "transformation",
              "transformation.dataset",
              "transformation.flowlet",
              "transformation.linked_service"
            ],
            "azurerm_data_factory_integration_runtime_azure": [
              "cleanup_enabled",
              "compute_type",
              "core_count",
              "description",
              "id",
              "time_to_live_min",
              "virtual_network_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "location",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_integration_runtime_azure_ssis": [
              "description",
              "edition",
              "id",
              "license_type",
              "max_parallel_executions_per_node",
              "number_of_nodes",
              "catalog_info.administrator_login",
              "catalog_info.administrator_password",
              "catalog_info.dual_standby_pair_name",
              "catalog_info.elastic_pool_name",
              "catalog_info.pricing_tier",
              "express_custom_setup.environment",
              "express_custom_setup.powershell_version",
              "express_custom_setup.command_key.password",
              "express_custom_setup.command_key.key_vault_password.parameters",
              "express_custom_setup.command_key.key_vault_password.secret_version",
              "express_custom_setup.component.license",
              "express_custom_setup.component.key_vault_license.parameters",
              "express_custom_setup.component.key_vault_license.secret_version",
              "proxy.path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "vnet_integration.public_ips",
              "vnet_integration.subnet_id",
              "vnet_integration.subnet_name",
              "vnet_integration.vnet_id",
              "data_factory_id",
              "location",
              "name",
              "node_size",
              "catalog_info.server_endpoint",
              "custom_setup_script.blob_container_uri",
              "custom_setup_script.sas_token",
              "express_custom_setup.command_key.target_name",
              "express_custom_setup.command_key.user_name",
              "express_custom_setup.command_key.key_vault_password.linked_service_name",
              "express_custom_setup.command_key.key_vault_password.secret_name",
              "express_custom_setup.component.name",
              "express_custom_setup.component.key_vault_license.linked_service_name",
              "express_custom_setup.component.key_vault_license.secret_name",
              "express_vnet_integration.subnet_id",
              "package_store.linked_service_name",
              "package_store.name",
              "proxy.self_hosted_integration_runtime_name",
              "proxy.staging_storage_linked_service_name",
              "catalog_info",
              "custom_setup_script",
              "express_custom_setup",
              "express_custom_setup.command_key",
              "express_custom_setup.command_key.key_vault_password",
              "express_custom_setup.component",
              "express_custom_setup.component.key_vault_license",
              "express_vnet_integration",
              "package_store",
              "proxy",
              "timeouts",
              "vnet_integration"
            ],
            "azurerm_data_factory_integration_runtime_managed": [
              "description",
              "edition",
              "id",
              "license_type",
              "max_parallel_executions_per_node",
              "number_of_nodes",
              "catalog_info.administrator_login",
              "catalog_info.administrator_password",
              "catalog_info.pricing_tier",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "location",
              "name",
              "node_size",
              "catalog_info.server_endpoint",
              "custom_setup_script.blob_container_uri",
              "custom_setup_script.sas_token",
              "vnet_integration.subnet_name",
              "vnet_integration.vnet_id",
              "catalog_info",
              "custom_setup_script",
              "timeouts",
              "vnet_integration"
            ],
            "azurerm_data_factory_integration_runtime_self_hosted": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "rbac_authorization.resource_id",
              "rbac_authorization",
              "timeouts"
            ],
            "azurerm_data_factory_linked_custom_service": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "parameters",
              "integration_runtime.parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "type",
              "type_properties_json",
              "integration_runtime.name",
              "integration_runtime",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_azure_blob_storage": [
              "additional_properties",
              "annotations",
              "connection_string",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "sas_uri",
              "service_endpoint",
              "service_principal_id",
              "service_principal_key",
              "storage_kind",
              "tenant_id",
              "use_managed_identity",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "key_vault_sas_token.linked_service_name",
              "key_vault_sas_token.secret_name",
              "service_principal_linked_key_vault_key.linked_service_name",
              "service_principal_linked_key_vault_key.secret_name",
              "key_vault_sas_token",
              "service_principal_linked_key_vault_key",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_azure_databricks": [
              "access_token",
              "additional_properties",
              "annotations",
              "description",
              "existing_cluster_id",
              "id",
              "integration_runtime_name",
              "msi_work_space_resource_id",
              "parameters",
              "instance_pool.max_number_of_workers",
              "instance_pool.min_number_of_workers",
              "new_cluster_config.custom_tags",
              "new_cluster_config.driver_node_type",
              "new_cluster_config.init_scripts",
              "new_cluster_config.log_destination",
              "new_cluster_config.max_number_of_workers",
              "new_cluster_config.min_number_of_workers",
              "new_cluster_config.spark_config",
              "new_cluster_config.spark_environment_variables",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "adb_domain",
              "data_factory_id",
              "name",
              "instance_pool.cluster_version",
              "instance_pool.instance_pool_id",
              "key_vault_password.linked_service_name",
              "key_vault_password.secret_name",
              "new_cluster_config.cluster_version",
              "new_cluster_config.node_type",
              "instance_pool",
              "key_vault_password",
              "new_cluster_config",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_azure_file_storage": [
              "additional_properties",
              "annotations",
              "description",
              "file_share",
              "host",
              "id",
              "integration_runtime_name",
              "parameters",
              "password",
              "user_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "connection_string",
              "data_factory_id",
              "name",
              "key_vault_password.linked_service_name",
              "key_vault_password.secret_name",
              "key_vault_password",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_azure_function": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "key",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "url",
              "key_vault_key.linked_service_name",
              "key_vault_key.secret_name",
              "key_vault_key",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_azure_search": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "search_service_key",
              "url",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_azure_sql_database": [
              "additional_properties",
              "annotations",
              "connection_string",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "service_principal_id",
              "service_principal_key",
              "tenant_id",
              "use_managed_identity",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "key_vault_connection_string.linked_service_name",
              "key_vault_connection_string.secret_name",
              "key_vault_password.linked_service_name",
              "key_vault_password.secret_name",
              "key_vault_connection_string",
              "key_vault_password",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_azure_table_storage": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "connection_string",
              "data_factory_id",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_cosmosdb": [
              "account_endpoint",
              "account_key",
              "additional_properties",
              "annotations",
              "connection_string",
              "database",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_cosmosdb_mongoapi": [
              "additional_properties",
              "annotations",
              "connection_string",
              "database",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "server_version_is_32_or_higher",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_data_lake_storage_gen2": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "service_principal_id",
              "service_principal_key",
              "storage_account_key",
              "tenant",
              "use_managed_identity",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "url",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_key_vault": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "key_vault_id",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_kusto": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "service_principal_id",
              "service_principal_key",
              "tenant",
              "use_managed_identity",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "kusto_database_name",
              "kusto_endpoint",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_mysql": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "connection_string",
              "data_factory_id",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_odata": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "url",
              "basic_authentication.password",
              "basic_authentication.username",
              "basic_authentication",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_odbc": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "connection_string",
              "data_factory_id",
              "name",
              "basic_authentication.password",
              "basic_authentication.username",
              "basic_authentication",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_postgresql": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "connection_string",
              "data_factory_id",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_sftp": [
              "additional_properties",
              "annotations",
              "description",
              "host_key_fingerprint",
              "id",
              "integration_runtime_name",
              "parameters",
              "skip_host_key_validation",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "authentication_type",
              "data_factory_id",
              "host",
              "name",
              "password",
              "port",
              "username",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_snowflake": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "connection_string",
              "data_factory_id",
              "name",
              "key_vault_password.linked_service_name",
              "key_vault_password.secret_name",
              "key_vault_password",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_sql_server": [
              "additional_properties",
              "annotations",
              "connection_string",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "user_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "key_vault_connection_string.linked_service_name",
              "key_vault_connection_string.secret_name",
              "key_vault_password.linked_service_name",
              "key_vault_password.secret_name",
              "key_vault_connection_string",
              "key_vault_password",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_synapse": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "connection_string",
              "data_factory_id",
              "name",
              "key_vault_password.linked_service_name",
              "key_vault_password.secret_name",
              "key_vault_password",
              "timeouts"
            ],
            "azurerm_data_factory_linked_service_web": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "integration_runtime_name",
              "parameters",
              "password",
              "username",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "authentication_type",
              "data_factory_id",
              "name",
              "url",
              "timeouts"
            ],
            "azurerm_data_factory_managed_private_endpoint": [
              "fqdns",
              "id",
              "subresource_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "data_factory_id",
              "name",
              "target_resource_id",
              "timeouts"
            ],
            "azurerm_data_factory_pipeline": [
              "activities_json",
              "annotations",
              "concurrency",
              "description",
              "folder",
              "id",
              "moniter_metrics_after_duration",
              "parameters",
              "variables",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "timeouts"
            ],
            "azurerm_data_factory_trigger_blob_event": [
              "activated",
              "additional_properties",
              "annotations",
              "blob_path_begins_with",
              "blob_path_ends_with",
              "description",
              "id",
              "ignore_empty_blobs",
              "pipeline.parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "events",
              "name",
              "storage_account_id",
              "pipeline.name",
              "pipeline",
              "timeouts"
            ],
            "azurerm_data_factory_trigger_custom_event": [
              "activated",
              "additional_properties",
              "annotations",
              "description",
              "id",
              "subject_begins_with",
              "subject_ends_with",
              "pipeline.parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "eventgrid_topic_id",
              "events",
              "name",
              "pipeline.name",
              "pipeline",
              "timeouts"
            ],
            "azurerm_data_factory_trigger_schedule": [
              "activated",
              "annotations",
              "description",
              "end_time",
              "frequency",
              "id",
              "interval",
              "pipeline_name",
              "pipeline_parameters",
              "start_time",
              "time_zone",
              "pipeline.parameters",
              "schedule.days_of_month",
              "schedule.days_of_week",
              "schedule.hours",
              "schedule.minutes",
              "schedule.monthly.week",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_factory_id",
              "name",
              "pipeline.name",
              "schedule.monthly.weekday",
              "pipeline",
              "schedule",
              "schedule.monthly",
              "timeouts"
            ],
            "azurerm_data_factory_trigger_tumbling_window": [
              "activated",
              "additional_properties",
              "annotations",
              "delay",
              "description",
              "end_time",
              "id",
              "max_concurrency",
              "pipeline.parameters",
              "retry.interval",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "trigger_dependency.offset",
              "trigger_dependency.size",
              "trigger_dependency.trigger_name",
              "data_factory_id",
              "frequency",
              "interval",
              "name",
              "start_time",
              "pipeline.name",
              "retry.count",
              "pipeline",
              "retry",
              "timeouts",
              "trigger_dependency"
            ],
            "azurerm_data_protection_backup_instance_blob_storage": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backup_policy_id",
              "location",
              "name",
              "storage_account_id",
              "vault_id",
              "timeouts"
            ],
            "azurerm_data_protection_backup_instance_disk": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backup_policy_id",
              "disk_id",
              "location",
              "name",
              "snapshot_resource_group_name",
              "vault_id",
              "timeouts"
            ],
            "azurerm_data_protection_backup_instance_postgresql": [
              "database_credential_key_vault_secret_id",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backup_policy_id",
              "database_id",
              "location",
              "name",
              "vault_id",
              "timeouts"
            ],
            "azurerm_data_protection_backup_policy_blob_storage": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "retention_duration",
              "vault_id",
              "timeouts"
            ],
            "azurerm_data_protection_backup_policy_disk": [
              "id",
              "retention_rule.criteria.absolute_criteria",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backup_repeating_time_intervals",
              "default_retention_duration",
              "name",
              "vault_id",
              "retention_rule.duration",
              "retention_rule.name",
              "retention_rule.priority",
              "retention_rule",
              "retention_rule.criteria",
              "timeouts"
            ],
            "azurerm_data_protection_backup_policy_postgresql": [
              "id",
              "retention_rule.criteria.absolute_criteria",
              "retention_rule.criteria.days_of_week",
              "retention_rule.criteria.months_of_year",
              "retention_rule.criteria.scheduled_backup_times",
              "retention_rule.criteria.weeks_of_month",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backup_repeating_time_intervals",
              "default_retention_duration",
              "name",
              "resource_group_name",
              "vault_name",
              "retention_rule.duration",
              "retention_rule.name",
              "retention_rule.priority",
              "retention_rule",
              "retention_rule.criteria",
              "timeouts"
            ],
            "azurerm_data_protection_backup_vault": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "datastore_type",
              "location",
              "name",
              "redundancy",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_data_protection_resource_guard": [
              "id",
              "tags",
              "vault_critical_operation_exclusion_list",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_data_share": [
              "description",
              "id",
              "terms",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_id",
              "kind",
              "name",
              "snapshot_schedule.name",
              "snapshot_schedule.recurrence",
              "snapshot_schedule.start_time",
              "snapshot_schedule",
              "timeouts"
            ],
            "azurerm_data_share_account": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_data_share_dataset_blob_storage": [
              "file_path",
              "folder_path",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "container_name",
              "data_share_id",
              "name",
              "storage_account.name",
              "storage_account.resource_group_name",
              "storage_account.subscription_id",
              "storage_account",
              "timeouts"
            ],
            "azurerm_data_share_dataset_data_lake_gen2": [
              "file_path",
              "folder_path",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "file_system_name",
              "name",
              "share_id",
              "storage_account_id",
              "timeouts"
            ],
            "azurerm_data_share_dataset_kusto_cluster": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "kusto_cluster_id",
              "name",
              "share_id",
              "timeouts"
            ],
            "azurerm_data_share_dataset_kusto_database": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "kusto_database_id",
              "name",
              "share_id",
              "timeouts"
            ],
            "azurerm_database_migration_project": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "service_name",
              "source_platform",
              "target_platform",
              "timeouts"
            ],
            "azurerm_database_migration_service": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_databox_edge_device": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_databox_edge_order": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "device_name",
              "resource_group_name",
              "contact.company_name",
              "contact.emails",
              "contact.name",
              "contact.phone_number",
              "shipment_address.address",
              "shipment_address.city",
              "shipment_address.country",
              "shipment_address.postal_code",
              "shipment_address.state",
              "contact",
              "shipment_address",
              "timeouts",
              "return_tracking.carrier_name",
              "return_tracking.serial_number",
              "return_tracking.tracking_id",
              "return_tracking.tracking_url",
              "shipment_history.additional_details",
              "shipment_history.comments",
              "shipment_history.last_update",
              "shipment_tracking.carrier_name",
              "shipment_tracking.serial_number",
              "shipment_tracking.tracking_id",
              "shipment_tracking.tracking_url"
            ],
            "azurerm_databricks_access_connector": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_databricks_workspace": [
              "customer_managed_key_enabled",
              "id",
              "infrastructure_encryption_enabled",
              "load_balancer_backend_address_pool_id",
              "managed_resource_group_name",
              "managed_services_cmk_key_vault_key_id",
              "network_security_group_rules_required",
              "public_network_access_enabled",
              "tags",
              "custom_parameters.machine_learning_workspace_id",
              "custom_parameters.nat_gateway_name",
              "custom_parameters.no_public_ip",
              "custom_parameters.private_subnet_name",
              "custom_parameters.private_subnet_network_security_group_association_id",
              "custom_parameters.public_ip_name",
              "custom_parameters.public_subnet_name",
              "custom_parameters.public_subnet_network_security_group_association_id",
              "custom_parameters.storage_account_name",
              "custom_parameters.storage_account_sku_name",
              "custom_parameters.virtual_network_id",
              "custom_parameters.vnet_address_prefix",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "custom_parameters",
              "timeouts"
            ],
            "azurerm_databricks_workspace_customer_managed_key": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_key_id",
              "workspace_id",
              "timeouts"
            ],
            "azurerm_datadog_monitor": [
              "id",
              "monitoring_enabled",
              "tags",
              "datadog_organization.enterprise_app_id",
              "datadog_organization.linking_auth_code",
              "datadog_organization.linking_client_id",
              "datadog_organization.redirect_uri",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "user.phone_number",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "datadog_organization.api_key",
              "datadog_organization.application_key",
              "identity.type",
              "user.email",
              "user.name",
              "datadog_organization",
              "identity",
              "timeouts",
              "user"
            ],
            "azurerm_datadog_monitor_sso_configuration": [
              "id",
              "name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "datadog_monitor_id",
              "enterprise_application_id",
              "single_sign_on_enabled",
              "timeouts"
            ],
            "azurerm_datadog_monitor_tag_rule": [
              "id",
              "name",
              "log.aad_log_enabled",
              "log.resource_log_enabled",
              "log.subscription_log_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "datadog_monitor_id",
              "log.filter.action",
              "log.filter.name",
              "log.filter.value",
              "metric.filter.action",
              "metric.filter.name",
              "metric.filter.value",
              "log",
              "log.filter",
              "metric",
              "metric.filter",
              "timeouts"
            ],
            "azurerm_dedicated_hardware_security_module": [
              "id",
              "stamp_id",
              "tags",
              "zones",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "management_network_profile.network_interface_private_ip_addresses",
              "management_network_profile.subnet_id",
              "network_profile.network_interface_private_ip_addresses",
              "network_profile.subnet_id",
              "management_network_profile",
              "network_profile",
              "timeouts"
            ],
            "azurerm_dedicated_host": [
              "auto_replace_on_failure",
              "id",
              "license_type",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "dedicated_host_group_id",
              "location",
              "name",
              "platform_fault_domain",
              "sku_name",
              "timeouts"
            ],
            "azurerm_dedicated_host_group": [
              "automatic_placement_enabled",
              "id",
              "tags",
              "zone",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "platform_fault_domain_count",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_dev_test_global_vm_shutdown_schedule": [
              "enabled",
              "id",
              "tags",
              "notification_settings.email",
              "notification_settings.time_in_minutes",
              "notification_settings.webhook_url",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "daily_recurrence_time",
              "location",
              "timezone",
              "virtual_machine_id",
              "notification_settings.enabled",
              "notification_settings",
              "timeouts"
            ],
            "azurerm_dev_test_lab": [
              "id",
              "storage_type",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_dev_test_linux_virtual_machine": [
              "allow_claim",
              "disallow_public_ip_address",
              "id",
              "notes",
              "password",
              "ssh_key",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "lab_name",
              "lab_subnet_name",
              "lab_virtual_network_id",
              "location",
              "name",
              "resource_group_name",
              "size",
              "storage_type",
              "username",
              "gallery_image_reference.offer",
              "gallery_image_reference.publisher",
              "gallery_image_reference.sku",
              "gallery_image_reference.version",
              "inbound_nat_rule.backend_port",
              "inbound_nat_rule.protocol",
              "gallery_image_reference",
              "inbound_nat_rule",
              "timeouts"
            ],
            "azurerm_dev_test_policy": [
              "description",
              "fact_data",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "evaluator_type",
              "lab_name",
              "name",
              "policy_set_name",
              "resource_group_name",
              "threshold",
              "timeouts"
            ],
            "azurerm_dev_test_schedule": [
              "id",
              "status",
              "tags",
              "notification_settings.status",
              "notification_settings.time_in_minutes",
              "notification_settings.webhook_url",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "weekly_recurrence.week_days",
              "lab_name",
              "location",
              "name",
              "resource_group_name",
              "task_type",
              "time_zone_id",
              "daily_recurrence.time",
              "hourly_recurrence.minute",
              "weekly_recurrence.time",
              "daily_recurrence",
              "hourly_recurrence",
              "notification_settings",
              "timeouts",
              "weekly_recurrence"
            ],
            "azurerm_dev_test_virtual_network": [
              "description",
              "id",
              "tags",
              "subnet.use_in_virtual_machine_creation",
              "subnet.use_public_ip_address",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "lab_name",
              "name",
              "resource_group_name",
              "subnet",
              "timeouts"
            ],
            "azurerm_dev_test_windows_virtual_machine": [
              "allow_claim",
              "disallow_public_ip_address",
              "id",
              "notes",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "lab_name",
              "lab_subnet_name",
              "lab_virtual_network_id",
              "location",
              "name",
              "password",
              "resource_group_name",
              "size",
              "storage_type",
              "username",
              "gallery_image_reference.offer",
              "gallery_image_reference.publisher",
              "gallery_image_reference.sku",
              "gallery_image_reference.version",
              "inbound_nat_rule.backend_port",
              "inbound_nat_rule.protocol",
              "gallery_image_reference",
              "inbound_nat_rule",
              "timeouts"
            ],
            "azurerm_digital_twins_endpoint_eventgrid": [
              "dead_letter_storage_secret",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "digital_twins_id",
              "eventgrid_topic_endpoint",
              "eventgrid_topic_primary_access_key",
              "eventgrid_topic_secondary_access_key",
              "name",
              "timeouts"
            ],
            "azurerm_digital_twins_endpoint_eventhub": [
              "dead_letter_storage_secret",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "digital_twins_id",
              "eventhub_primary_connection_string",
              "eventhub_secondary_connection_string",
              "name",
              "timeouts"
            ],
            "azurerm_digital_twins_endpoint_servicebus": [
              "dead_letter_storage_secret",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "digital_twins_id",
              "name",
              "servicebus_primary_connection_string",
              "servicebus_secondary_connection_string",
              "timeouts"
            ],
            "azurerm_digital_twins_instance": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_digital_twins_time_series_database_connection": [
              "eventhub_consumer_group_name",
              "id",
              "kusto_table_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "digital_twins_id",
              "eventhub_name",
              "eventhub_namespace_endpoint_uri",
              "eventhub_namespace_id",
              "kusto_cluster_id",
              "kusto_cluster_uri",
              "kusto_database_name",
              "name",
              "timeouts"
            ],
            "azurerm_disk_access": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_disk_encryption_set": [
              "auto_key_rotation_enabled",
              "encryption_type",
              "federated_client_id",
              "id",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_key_id",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_disk_pool": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "subnet_id",
              "zones",
              "timeouts"
            ],
            "azurerm_disk_pool_iscsi_target": [
              "id",
              "target_iqn",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "acl_mode",
              "disks_pool_id",
              "name",
              "timeouts"
            ],
            "azurerm_disk_pool_iscsi_target_lun": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "disk_pool_managed_disk_attachment_id",
              "iscsi_target_id",
              "name",
              "timeouts"
            ],
            "azurerm_disk_pool_managed_disk_attachment": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "disk_pool_id",
              "managed_disk_id",
              "timeouts"
            ],
            "azurerm_dns_a_record": [
              "id",
              "records",
              "tags",
              "target_resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_dns_aaaa_record": [
              "id",
              "records",
              "tags",
              "target_resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_dns_caa_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "ttl",
              "zone_name",
              "record.flags",
              "record.tag",
              "record.value",
              "record",
              "timeouts"
            ],
            "azurerm_dns_cname_record": [
              "id",
              "record",
              "tags",
              "target_resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_dns_mx_record": [
              "id",
              "name",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "resource_group_name",
              "ttl",
              "zone_name",
              "record.exchange",
              "record.preference",
              "record",
              "timeouts"
            ],
            "azurerm_dns_ns_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "records",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_dns_ptr_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "records",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_dns_srv_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "ttl",
              "zone_name",
              "record.port",
              "record.priority",
              "record.target",
              "record.weight",
              "record",
              "timeouts"
            ],
            "azurerm_dns_txt_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "ttl",
              "zone_name",
              "record.value",
              "record",
              "timeouts"
            ],
            "azurerm_dns_zone": [
              "id",
              "tags",
              "soa_record.expire_time",
              "soa_record.minimum_ttl",
              "soa_record.refresh_time",
              "soa_record.retry_time",
              "soa_record.serial_number",
              "soa_record.tags",
              "soa_record.ttl",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "soa_record.email",
              "soa_record.host_name",
              "soa_record",
              "timeouts"
            ],
            "azurerm_elastic_cloud_elasticsearch": [
              "id",
              "monitoring_enabled",
              "tags",
              "logs.send_activity_logs",
              "logs.send_azuread_logs",
              "logs.send_subscription_logs",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "elastic_cloud_email_address",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "logs.filtering_tag.action",
              "logs.filtering_tag.name",
              "logs.filtering_tag.value",
              "logs",
              "logs.filtering_tag",
              "timeouts"
            ],
            "azurerm_eventgrid_domain": [
              "auto_create_topic_with_first_subscription",
              "auto_delete_topic_with_last_subscription",
              "id",
              "inbound_ip_rule",
              "input_schema",
              "local_auth_enabled",
              "public_network_access_enabled",
              "tags",
              "identity.identity_ids",
              "input_mapping_default_values.data_version",
              "input_mapping_default_values.event_type",
              "input_mapping_default_values.subject",
              "input_mapping_fields.data_version",
              "input_mapping_fields.event_time",
              "input_mapping_fields.event_type",
              "input_mapping_fields.id",
              "input_mapping_fields.subject",
              "input_mapping_fields.topic",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "input_mapping_default_values",
              "input_mapping_fields",
              "timeouts"
            ],
            "azurerm_eventgrid_domain_topic": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "domain_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_eventgrid_event_subscription": [
              "advanced_filtering_on_arrays_enabled",
              "event_delivery_schema",
              "eventhub_endpoint_id",
              "expiration_time_utc",
              "hybrid_connection_endpoint_id",
              "id",
              "included_event_types",
              "labels",
              "service_bus_queue_endpoint_id",
              "service_bus_topic_endpoint_id",
              "azure_function_endpoint.max_events_per_batch",
              "azure_function_endpoint.preferred_batch_size_in_kilobytes",
              "dead_letter_identity.user_assigned_identity",
              "delivery_identity.user_assigned_identity",
              "delivery_property.secret",
              "delivery_property.source_field",
              "delivery_property.value",
              "storage_queue_endpoint.queue_message_time_to_live_in_seconds",
              "subject_filter.case_sensitive",
              "subject_filter.subject_begins_with",
              "subject_filter.subject_ends_with",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "webhook_endpoint.active_directory_app_id_or_uri",
              "webhook_endpoint.active_directory_tenant_id",
              "webhook_endpoint.max_events_per_batch",
              "webhook_endpoint.preferred_batch_size_in_kilobytes",
              "name",
              "scope",
              "advanced_filter.bool_equals.key",
              "advanced_filter.bool_equals.value",
              "advanced_filter.is_not_null.key",
              "advanced_filter.is_null_or_undefined.key",
              "advanced_filter.number_greater_than.key",
              "advanced_filter.number_greater_than.value",
              "advanced_filter.number_greater_than_or_equals.key",
              "advanced_filter.number_greater_than_or_equals.value",
              "advanced_filter.number_in.key",
              "advanced_filter.number_in.values",
              "advanced_filter.number_in_range.key",
              "advanced_filter.number_in_range.values",
              "advanced_filter.number_less_than.key",
              "advanced_filter.number_less_than.value",
              "advanced_filter.number_less_than_or_equals.key",
              "advanced_filter.number_less_than_or_equals.value",
              "advanced_filter.number_not_in.key",
              "advanced_filter.number_not_in.values",
              "advanced_filter.number_not_in_range.key",
              "advanced_filter.number_not_in_range.values",
              "advanced_filter.string_begins_with.key",
              "advanced_filter.string_begins_with.values",
              "advanced_filter.string_contains.key",
              "advanced_filter.string_contains.values",
              "advanced_filter.string_ends_with.key",
              "advanced_filter.string_ends_with.values",
              "advanced_filter.string_in.key",
              "advanced_filter.string_in.values",
              "advanced_filter.string_not_begins_with.key",
              "advanced_filter.string_not_begins_with.values",
              "advanced_filter.string_not_contains.key",
              "advanced_filter.string_not_contains.values",
              "advanced_filter.string_not_ends_with.key",
              "advanced_filter.string_not_ends_with.values",
              "advanced_filter.string_not_in.key",
              "advanced_filter.string_not_in.values",
              "azure_function_endpoint.function_id",
              "dead_letter_identity.type",
              "delivery_identity.type",
              "delivery_property.header_name",
              "delivery_property.type",
              "retry_policy.event_time_to_live",
              "retry_policy.max_delivery_attempts",
              "storage_blob_dead_letter_destination.storage_account_id",
              "storage_blob_dead_letter_destination.storage_blob_container_name",
              "storage_queue_endpoint.queue_name",
              "storage_queue_endpoint.storage_account_id",
              "webhook_endpoint.url",
              "advanced_filter",
              "advanced_filter.bool_equals",
              "advanced_filter.is_not_null",
              "advanced_filter.is_null_or_undefined",
              "advanced_filter.number_greater_than",
              "advanced_filter.number_greater_than_or_equals",
              "advanced_filter.number_in",
              "advanced_filter.number_in_range",
              "advanced_filter.number_less_than",
              "advanced_filter.number_less_than_or_equals",
              "advanced_filter.number_not_in",
              "advanced_filter.number_not_in_range",
              "advanced_filter.string_begins_with",
              "advanced_filter.string_contains",
              "advanced_filter.string_ends_with",
              "advanced_filter.string_in",
              "advanced_filter.string_not_begins_with",
              "advanced_filter.string_not_contains",
              "advanced_filter.string_not_ends_with",
              "advanced_filter.string_not_in",
              "azure_function_endpoint",
              "dead_letter_identity",
              "delivery_identity",
              "delivery_property",
              "retry_policy",
              "storage_blob_dead_letter_destination",
              "storage_queue_endpoint",
              "subject_filter",
              "timeouts",
              "webhook_endpoint"
            ],
            "azurerm_eventgrid_system_topic": [
              "id",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "source_arm_resource_id",
              "topic_type",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_eventgrid_system_topic_event_subscription": [
              "advanced_filtering_on_arrays_enabled",
              "event_delivery_schema",
              "eventhub_endpoint_id",
              "expiration_time_utc",
              "hybrid_connection_endpoint_id",
              "id",
              "included_event_types",
              "labels",
              "service_bus_queue_endpoint_id",
              "service_bus_topic_endpoint_id",
              "azure_function_endpoint.max_events_per_batch",
              "azure_function_endpoint.preferred_batch_size_in_kilobytes",
              "dead_letter_identity.user_assigned_identity",
              "delivery_identity.user_assigned_identity",
              "delivery_property.secret",
              "delivery_property.source_field",
              "delivery_property.value",
              "storage_queue_endpoint.queue_message_time_to_live_in_seconds",
              "subject_filter.case_sensitive",
              "subject_filter.subject_begins_with",
              "subject_filter.subject_ends_with",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "webhook_endpoint.active_directory_app_id_or_uri",
              "webhook_endpoint.active_directory_tenant_id",
              "webhook_endpoint.max_events_per_batch",
              "webhook_endpoint.preferred_batch_size_in_kilobytes",
              "name",
              "resource_group_name",
              "system_topic",
              "advanced_filter.bool_equals.key",
              "advanced_filter.bool_equals.value",
              "advanced_filter.is_not_null.key",
              "advanced_filter.is_null_or_undefined.key",
              "advanced_filter.number_greater_than.key",
              "advanced_filter.number_greater_than.value",
              "advanced_filter.number_greater_than_or_equals.key",
              "advanced_filter.number_greater_than_or_equals.value",
              "advanced_filter.number_in.key",
              "advanced_filter.number_in.values",
              "advanced_filter.number_in_range.key",
              "advanced_filter.number_in_range.values",
              "advanced_filter.number_less_than.key",
              "advanced_filter.number_less_than.value",
              "advanced_filter.number_less_than_or_equals.key",
              "advanced_filter.number_less_than_or_equals.value",
              "advanced_filter.number_not_in.key",
              "advanced_filter.number_not_in.values",
              "advanced_filter.number_not_in_range.key",
              "advanced_filter.number_not_in_range.values",
              "advanced_filter.string_begins_with.key",
              "advanced_filter.string_begins_with.values",
              "advanced_filter.string_contains.key",
              "advanced_filter.string_contains.values",
              "advanced_filter.string_ends_with.key",
              "advanced_filter.string_ends_with.values",
              "advanced_filter.string_in.key",
              "advanced_filter.string_in.values",
              "advanced_filter.string_not_begins_with.key",
              "advanced_filter.string_not_begins_with.values",
              "advanced_filter.string_not_contains.key",
              "advanced_filter.string_not_contains.values",
              "advanced_filter.string_not_ends_with.key",
              "advanced_filter.string_not_ends_with.values",
              "advanced_filter.string_not_in.key",
              "advanced_filter.string_not_in.values",
              "azure_function_endpoint.function_id",
              "dead_letter_identity.type",
              "delivery_identity.type",
              "delivery_property.header_name",
              "delivery_property.type",
              "retry_policy.event_time_to_live",
              "retry_policy.max_delivery_attempts",
              "storage_blob_dead_letter_destination.storage_account_id",
              "storage_blob_dead_letter_destination.storage_blob_container_name",
              "storage_queue_endpoint.queue_name",
              "storage_queue_endpoint.storage_account_id",
              "webhook_endpoint.url",
              "advanced_filter",
              "advanced_filter.bool_equals",
              "advanced_filter.is_not_null",
              "advanced_filter.is_null_or_undefined",
              "advanced_filter.number_greater_than",
              "advanced_filter.number_greater_than_or_equals",
              "advanced_filter.number_in",
              "advanced_filter.number_in_range",
              "advanced_filter.number_less_than",
              "advanced_filter.number_less_than_or_equals",
              "advanced_filter.number_not_in",
              "advanced_filter.number_not_in_range",
              "advanced_filter.string_begins_with",
              "advanced_filter.string_contains",
              "advanced_filter.string_ends_with",
              "advanced_filter.string_in",
              "advanced_filter.string_not_begins_with",
              "advanced_filter.string_not_contains",
              "advanced_filter.string_not_ends_with",
              "advanced_filter.string_not_in",
              "azure_function_endpoint",
              "dead_letter_identity",
              "delivery_identity",
              "delivery_property",
              "retry_policy",
              "storage_blob_dead_letter_destination",
              "storage_queue_endpoint",
              "subject_filter",
              "timeouts",
              "webhook_endpoint"
            ],
            "azurerm_eventgrid_topic": [
              "id",
              "inbound_ip_rule",
              "input_schema",
              "local_auth_enabled",
              "public_network_access_enabled",
              "tags",
              "identity.identity_ids",
              "input_mapping_default_values.data_version",
              "input_mapping_default_values.event_type",
              "input_mapping_default_values.subject",
              "input_mapping_fields.data_version",
              "input_mapping_fields.event_time",
              "input_mapping_fields.event_type",
              "input_mapping_fields.id",
              "input_mapping_fields.subject",
              "input_mapping_fields.topic",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "input_mapping_default_values",
              "input_mapping_fields",
              "timeouts"
            ],
            "azurerm_eventhub": [
              "id",
              "status",
              "capture_description.interval_in_seconds",
              "capture_description.size_limit_in_bytes",
              "capture_description.skip_empty_archives",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "message_retention",
              "name",
              "namespace_name",
              "partition_count",
              "resource_group_name",
              "capture_description.enabled",
              "capture_description.encoding",
              "capture_description.destination.archive_name_format",
              "capture_description.destination.blob_container_name",
              "capture_description.destination.name",
              "capture_description.destination.storage_account_id",
              "capture_description",
              "capture_description.destination",
              "timeouts"
            ],
            "azurerm_eventhub_authorization_rule": [
              "id",
              "listen",
              "manage",
              "send",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "eventhub_name",
              "name",
              "namespace_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_eventhub_cluster": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_eventhub_consumer_group": [
              "id",
              "user_metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "eventhub_name",
              "name",
              "namespace_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_eventhub_namespace": [
              "auto_inflate_enabled",
              "capacity",
              "dedicated_cluster_id",
              "id",
              "local_authentication_enabled",
              "maximum_throughput_units",
              "minimum_tls_version",
              "network_rulesets",
              "public_network_access_enabled",
              "tags",
              "zone_redundant",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_eventhub_namespace_authorization_rule": [
              "id",
              "listen",
              "manage",
              "send",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "namespace_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_eventhub_namespace_customer_managed_key": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "eventhub_namespace_id",
              "key_vault_key_ids",
              "timeouts"
            ],
            "azurerm_eventhub_namespace_disaster_recovery_config": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "namespace_name",
              "partner_namespace_id",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_eventhub_namespace_schema_group": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "namespace_id",
              "schema_compatibility",
              "schema_type",
              "timeouts"
            ],
            "azurerm_express_route_circuit": [
              "allow_classic_operations",
              "bandwidth_in_gbps",
              "bandwidth_in_mbps",
              "express_route_port_id",
              "id",
              "peering_location",
              "service_provider_name",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku.family",
              "sku.tier",
              "sku",
              "timeouts"
            ],
            "azurerm_express_route_circuit_authorization": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "express_route_circuit_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_express_route_circuit_connection": [
              "address_prefix_ipv6",
              "authorization_key",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "address_prefix_ipv4",
              "name",
              "peer_peering_id",
              "peering_id",
              "timeouts"
            ],
            "azurerm_express_route_circuit_peering": [
              "id",
              "ipv4_enabled",
              "peer_asn",
              "primary_peer_address_prefix",
              "route_filter_id",
              "secondary_peer_address_prefix",
              "shared_key",
              "ipv6.enabled",
              "ipv6.route_filter_id",
              "ipv6.microsoft_peering.advertised_public_prefixes",
              "ipv6.microsoft_peering.customer_asn",
              "ipv6.microsoft_peering.routing_registry_name",
              "microsoft_peering_config.customer_asn",
              "microsoft_peering_config.routing_registry_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "express_route_circuit_name",
              "peering_type",
              "resource_group_name",
              "vlan_id",
              "ipv6.primary_peer_address_prefix",
              "ipv6.secondary_peer_address_prefix",
              "microsoft_peering_config.advertised_public_prefixes",
              "ipv6",
              "ipv6.microsoft_peering",
              "microsoft_peering_config",
              "timeouts"
            ],
            "azurerm_express_route_connection": [
              "authorization_key",
              "enable_internet_security",
              "id",
              "routing_weight",
              "routing.associated_route_table_id",
              "routing.propagated_route_table.labels",
              "routing.propagated_route_table.route_table_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "express_route_circuit_peering_id",
              "express_route_gateway_id",
              "name",
              "routing",
              "routing.propagated_route_table",
              "timeouts"
            ],
            "azurerm_express_route_gateway": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "scale_units",
              "virtual_hub_id",
              "timeouts"
            ],
            "azurerm_express_route_port": [
              "id",
              "tags",
              "link1.admin_enabled",
              "link1.macsec_cak_keyvault_secret_id",
              "link1.macsec_cipher",
              "link1.macsec_ckn_keyvault_secret_id",
              "link2.admin_enabled",
              "link2.macsec_cak_keyvault_secret_id",
              "link2.macsec_cipher",
              "link2.macsec_ckn_keyvault_secret_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "bandwidth_in_gbps",
              "encapsulation",
              "location",
              "name",
              "peering_location",
              "resource_group_name",
              "identity.identity_ids",
              "identity.type",
              "identity",
              "link1",
              "link2",
              "timeouts"
            ],
            "azurerm_federated_identity_credential": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "audience",
              "issuer",
              "name",
              "parent_id",
              "resource_group_name",
              "subject",
              "timeouts"
            ],
            "azurerm_firewall": [
              "dns_servers",
              "firewall_policy_id",
              "id",
              "private_ip_ranges",
              "tags",
              "threat_intel_mode",
              "zones",
              "ip_configuration.subnet_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "virtual_hub.public_ip_count",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "sku_tier",
              "ip_configuration.name",
              "ip_configuration.public_ip_address_id",
              "management_ip_configuration.name",
              "management_ip_configuration.public_ip_address_id",
              "management_ip_configuration.subnet_id",
              "virtual_hub.virtual_hub_id",
              "ip_configuration",
              "management_ip_configuration",
              "timeouts",
              "virtual_hub"
            ],
            "azurerm_firewall_application_rule_collection": [
              "id",
              "rule.description",
              "rule.fqdn_tags",
              "rule.source_addresses",
              "rule.source_ip_groups",
              "rule.target_fqdns",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "action",
              "azure_firewall_name",
              "name",
              "priority",
              "resource_group_name",
              "rule.name",
              "rule.protocol.port",
              "rule.protocol.type",
              "rule",
              "rule.protocol",
              "timeouts"
            ],
            "azurerm_firewall_nat_rule_collection": [
              "id",
              "rule.description",
              "rule.source_addresses",
              "rule.source_ip_groups",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "action",
              "azure_firewall_name",
              "name",
              "priority",
              "resource_group_name",
              "rule.destination_addresses",
              "rule.destination_ports",
              "rule.name",
              "rule.protocols",
              "rule.translated_address",
              "rule.translated_port",
              "rule",
              "timeouts"
            ],
            "azurerm_firewall_network_rule_collection": [
              "id",
              "rule.description",
              "rule.destination_addresses",
              "rule.destination_fqdns",
              "rule.destination_ip_groups",
              "rule.source_addresses",
              "rule.source_ip_groups",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "action",
              "azure_firewall_name",
              "name",
              "priority",
              "resource_group_name",
              "rule.destination_ports",
              "rule.name",
              "rule.protocols",
              "rule",
              "timeouts"
            ],
            "azurerm_firewall_policy": [
              "auto_learn_private_ranges_enabled",
              "base_policy_id",
              "id",
              "private_ip_ranges",
              "sku",
              "sql_redirect_allowed",
              "tags",
              "threat_intelligence_mode",
              "dns.proxy_enabled",
              "dns.servers",
              "explicit_proxy.enable_pac_file",
              "explicit_proxy.enabled",
              "explicit_proxy.http_port",
              "explicit_proxy.https_port",
              "explicit_proxy.pac_file",
              "explicit_proxy.pac_file_port",
              "insights.retention_in_days",
              "intrusion_detection.mode",
              "intrusion_detection.private_ranges",
              "intrusion_detection.signature_overrides.id",
              "intrusion_detection.signature_overrides.state",
              "intrusion_detection.traffic_bypass.description",
              "intrusion_detection.traffic_bypass.destination_addresses",
              "intrusion_detection.traffic_bypass.destination_ip_groups",
              "intrusion_detection.traffic_bypass.destination_ports",
              "intrusion_detection.traffic_bypass.source_addresses",
              "intrusion_detection.traffic_bypass.source_ip_groups",
              "threat_intelligence_allowlist.fqdns",
              "threat_intelligence_allowlist.ip_addresses",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.identity_ids",
              "identity.type",
              "insights.default_log_analytics_workspace_id",
              "insights.enabled",
              "insights.log_analytics_workspace.firewall_location",
              "insights.log_analytics_workspace.id",
              "intrusion_detection.traffic_bypass.name",
              "intrusion_detection.traffic_bypass.protocol",
              "tls_certificate.key_vault_secret_id",
              "tls_certificate.name",
              "dns",
              "explicit_proxy",
              "identity",
              "insights",
              "insights.log_analytics_workspace",
              "intrusion_detection",
              "intrusion_detection.signature_overrides",
              "intrusion_detection.traffic_bypass",
              "threat_intelligence_allowlist",
              "timeouts",
              "tls_certificate"
            ],
            "azurerm_firewall_policy_rule_collection_group": [
              "id",
              "application_rule_collection.rule.description",
              "application_rule_collection.rule.destination_addresses",
              "application_rule_collection.rule.destination_fqdn_tags",
              "application_rule_collection.rule.destination_fqdns",
              "application_rule_collection.rule.destination_urls",
              "application_rule_collection.rule.source_addresses",
              "application_rule_collection.rule.source_ip_groups",
              "application_rule_collection.rule.terminate_tls",
              "application_rule_collection.rule.web_categories",
              "nat_rule_collection.rule.destination_address",
              "nat_rule_collection.rule.destination_ports",
              "nat_rule_collection.rule.source_addresses",
              "nat_rule_collection.rule.source_ip_groups",
              "nat_rule_collection.rule.translated_address",
              "nat_rule_collection.rule.translated_fqdn",
              "network_rule_collection.rule.destination_addresses",
              "network_rule_collection.rule.destination_fqdns",
              "network_rule_collection.rule.destination_ip_groups",
              "network_rule_collection.rule.source_addresses",
              "network_rule_collection.rule.source_ip_groups",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "firewall_policy_id",
              "name",
              "priority",
              "application_rule_collection.action",
              "application_rule_collection.name",
              "application_rule_collection.priority",
              "application_rule_collection.rule.name",
              "application_rule_collection.rule.protocols.port",
              "application_rule_collection.rule.protocols.type",
              "nat_rule_collection.action",
              "nat_rule_collection.name",
              "nat_rule_collection.priority",
              "nat_rule_collection.rule.name",
              "nat_rule_collection.rule.protocols",
              "nat_rule_collection.rule.translated_port",
              "network_rule_collection.action",
              "network_rule_collection.name",
              "network_rule_collection.priority",
              "network_rule_collection.rule.destination_ports",
              "network_rule_collection.rule.name",
              "network_rule_collection.rule.protocols",
              "application_rule_collection",
              "application_rule_collection.rule",
              "application_rule_collection.rule.protocols",
              "nat_rule_collection",
              "nat_rule_collection.rule",
              "network_rule_collection",
              "network_rule_collection.rule",
              "timeouts"
            ],
            "azurerm_fluid_relay_server": [
              "id",
              "storage_sku",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_frontdoor": [
              "friendly_name",
              "id",
              "load_balancer_enabled",
              "tags",
              "backend_pool.backend.enabled",
              "backend_pool.backend.priority",
              "backend_pool.backend.weight",
              "backend_pool_health_probe.enabled",
              "backend_pool_health_probe.interval_in_seconds",
              "backend_pool_health_probe.path",
              "backend_pool_health_probe.probe_method",
              "backend_pool_health_probe.protocol",
              "backend_pool_load_balancing.additional_latency_milliseconds",
              "backend_pool_load_balancing.sample_size",
              "backend_pool_load_balancing.successful_samples_required",
              "backend_pool_settings.backend_pools_send_receive_timeout_seconds",
              "frontend_endpoint.session_affinity_enabled",
              "frontend_endpoint.session_affinity_ttl_seconds",
              "frontend_endpoint.web_application_firewall_policy_link_id",
              "routing_rule.enabled",
              "routing_rule.forwarding_configuration.cache_duration",
              "routing_rule.forwarding_configuration.cache_enabled",
              "routing_rule.forwarding_configuration.cache_query_parameter_strip_directive",
              "routing_rule.forwarding_configuration.cache_query_parameters",
              "routing_rule.forwarding_configuration.cache_use_dynamic_compression",
              "routing_rule.forwarding_configuration.custom_forwarding_path",
              "routing_rule.forwarding_configuration.forwarding_protocol",
              "routing_rule.redirect_configuration.custom_fragment",
              "routing_rule.redirect_configuration.custom_host",
              "routing_rule.redirect_configuration.custom_path",
              "routing_rule.redirect_configuration.custom_query_string",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "backend_pool.health_probe_name",
              "backend_pool.load_balancing_name",
              "backend_pool.name",
              "backend_pool.backend.address",
              "backend_pool.backend.host_header",
              "backend_pool.backend.http_port",
              "backend_pool.backend.https_port",
              "backend_pool_health_probe.name",
              "backend_pool_load_balancing.name",
              "backend_pool_settings.enforce_backend_pools_certificate_name_check",
              "frontend_endpoint.host_name",
              "frontend_endpoint.name",
              "routing_rule.accepted_protocols",
              "routing_rule.frontend_endpoints",
              "routing_rule.name",
              "routing_rule.patterns_to_match",
              "routing_rule.forwarding_configuration.backend_pool_name",
              "routing_rule.redirect_configuration.redirect_protocol",
              "routing_rule.redirect_configuration.redirect_type",
              "backend_pool",
              "backend_pool.backend",
              "backend_pool_health_probe",
              "backend_pool_load_balancing",
              "backend_pool_settings",
              "frontend_endpoint",
              "routing_rule",
              "routing_rule.forwarding_configuration",
              "routing_rule.redirect_configuration",
              "timeouts"
            ],
            "azurerm_frontdoor_custom_https_configuration": [
              "id",
              "custom_https_configuration.azure_key_vault_certificate_secret_name",
              "custom_https_configuration.azure_key_vault_certificate_secret_version",
              "custom_https_configuration.azure_key_vault_certificate_vault_id",
              "custom_https_configuration.certificate_source",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "custom_https_provisioning_enabled",
              "frontend_endpoint_id",
              "custom_https_configuration",
              "timeouts"
            ],
            "azurerm_frontdoor_firewall_policy": [
              "custom_block_response_body",
              "custom_block_response_status_code",
              "enabled",
              "id",
              "mode",
              "redirect_url",
              "tags",
              "custom_rule.enabled",
              "custom_rule.priority",
              "custom_rule.rate_limit_duration_in_minutes",
              "custom_rule.rate_limit_threshold",
              "custom_rule.match_condition.negation_condition",
              "custom_rule.match_condition.selector",
              "custom_rule.match_condition.transforms",
              "managed_rule.override.rule.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "custom_rule.action",
              "custom_rule.name",
              "custom_rule.type",
              "custom_rule.match_condition.match_values",
              "custom_rule.match_condition.match_variable",
              "custom_rule.match_condition.operator",
              "managed_rule.type",
              "managed_rule.version",
              "managed_rule.exclusion.match_variable",
              "managed_rule.exclusion.operator",
              "managed_rule.exclusion.selector",
              "managed_rule.override.rule_group_name",
              "managed_rule.override.exclusion.match_variable",
              "managed_rule.override.exclusion.operator",
              "managed_rule.override.exclusion.selector",
              "managed_rule.override.rule.action",
              "managed_rule.override.rule.rule_id",
              "managed_rule.override.rule.exclusion.match_variable",
              "managed_rule.override.rule.exclusion.operator",
              "managed_rule.override.rule.exclusion.selector",
              "custom_rule",
              "custom_rule.match_condition",
              "managed_rule",
              "managed_rule.exclusion",
              "managed_rule.override",
              "managed_rule.override.exclusion",
              "managed_rule.override.rule",
              "managed_rule.override.rule.exclusion",
              "timeouts"
            ],
            "azurerm_frontdoor_rules_engine": [
              "enabled",
              "id",
              "rule.action.request_header.header_action_type",
              "rule.action.request_header.header_name",
              "rule.action.request_header.value",
              "rule.action.response_header.header_action_type",
              "rule.action.response_header.header_name",
              "rule.action.response_header.value",
              "rule.match_condition.negate_condition",
              "rule.match_condition.selector",
              "rule.match_condition.transform",
              "rule.match_condition.value",
              "rule.match_condition.variable",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "frontdoor_name",
              "name",
              "resource_group_name",
              "rule.name",
              "rule.priority",
              "rule.match_condition.operator",
              "rule",
              "rule.action",
              "rule.action.request_header",
              "rule.action.response_header",
              "rule.match_condition",
              "timeouts"
            ],
            "azurerm_function_app": [
              "app_settings",
              "client_cert_mode",
              "daily_memory_time_quota",
              "enable_builtin_logging",
              "enabled",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "os_type",
              "tags",
              "version",
              "auth_settings.additional_login_params",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.oauth_scopes",
              "identity.identity_ids",
              "site_config.always_on",
              "site_config.app_scale_limit",
              "site_config.auto_swap_slot_name",
              "site_config.dotnet_framework_version",
              "site_config.elastic_instance_minimum",
              "site_config.ftps_state",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.java_version",
              "site_config.linux_fx_version",
              "site_config.min_tls_version",
              "site_config.pre_warmed_instance_count",
              "site_config.runtime_scale_monitoring_enabled",
              "site_config.scm_ip_restriction",
              "site_config.scm_type",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker_process",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.cors.support_credentials",
              "source_control.branch",
              "source_control.manual_integration",
              "source_control.repo_url",
              "source_control.rollback_enabled",
              "source_control.use_mercurial",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_plan_id",
              "location",
              "name",
              "resource_group_name",
              "storage_account_access_key",
              "storage_account_name",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.facebook.app_secret",
              "auth_settings.google.client_id",
              "auth_settings.google.client_secret",
              "auth_settings.microsoft.client_id",
              "auth_settings.microsoft.client_secret",
              "auth_settings.twitter.consumer_key",
              "auth_settings.twitter.consumer_secret",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "site_config.cors.allowed_origins",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "connection_string",
              "identity",
              "site_config",
              "site_config.cors",
              "source_control",
              "timeouts"
            ],
            "azurerm_function_app_active_slot": [
              "id",
              "overwrite_network_config",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "slot_id",
              "timeouts"
            ],
            "azurerm_function_app_function": [
              "enabled",
              "id",
              "language",
              "test_data",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "config_json",
              "function_app_id",
              "name",
              "file.content",
              "file.name",
              "file",
              "timeouts"
            ],
            "azurerm_function_app_hybrid_connection": [
              "id",
              "send_key_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "function_app_id",
              "hostname",
              "port",
              "relay_id",
              "timeouts"
            ],
            "azurerm_function_app_slot": [
              "app_settings",
              "daily_memory_time_quota",
              "enable_builtin_logging",
              "enabled",
              "https_only",
              "id",
              "os_type",
              "tags",
              "version",
              "auth_settings.additional_login_params",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.oauth_scopes",
              "identity.identity_ids",
              "site_config.always_on",
              "site_config.app_scale_limit",
              "site_config.auto_swap_slot_name",
              "site_config.dotnet_framework_version",
              "site_config.elastic_instance_minimum",
              "site_config.ftps_state",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.java_version",
              "site_config.linux_fx_version",
              "site_config.min_tls_version",
              "site_config.pre_warmed_instance_count",
              "site_config.runtime_scale_monitoring_enabled",
              "site_config.scm_ip_restriction",
              "site_config.scm_type",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker_process",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.cors.support_credentials",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_plan_id",
              "function_app_name",
              "location",
              "name",
              "resource_group_name",
              "storage_account_access_key",
              "storage_account_name",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.facebook.app_secret",
              "auth_settings.google.client_id",
              "auth_settings.google.client_secret",
              "auth_settings.microsoft.client_id",
              "auth_settings.microsoft.client_secret",
              "auth_settings.twitter.consumer_key",
              "auth_settings.twitter.consumer_secret",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "site_config.cors.allowed_origins",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "connection_string",
              "identity",
              "site_config",
              "site_config.cors",
              "timeouts"
            ],
            "azurerm_gallery_application": [
              "description",
              "end_of_life_date",
              "eula",
              "id",
              "privacy_statement_uri",
              "release_note_uri",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "gallery_id",
              "location",
              "name",
              "supported_os_type",
              "timeouts"
            ],
            "azurerm_gallery_application_version": [
              "enable_health_check",
              "end_of_life_date",
              "exclude_from_latest",
              "id",
              "tags",
              "manage_action.update",
              "source.default_configuration_link",
              "target_region.storage_account_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "gallery_application_id",
              "location",
              "name",
              "manage_action.install",
              "manage_action.remove",
              "source.media_link",
              "target_region.name",
              "target_region.regional_replica_count",
              "manage_action",
              "source",
              "target_region",
              "timeouts"
            ],
            "azurerm_hdinsight_hadoop_cluster": [
              "id",
              "tags",
              "tls_min_version",
              "compute_isolation.compute_isolation_enabled",
              "compute_isolation.host_sku",
              "disk_encryption.encryption_algorithm",
              "disk_encryption.encryption_at_host_enabled",
              "disk_encryption.key_vault_key_id",
              "disk_encryption.key_vault_managed_identity_id",
              "network.connection_direction",
              "network.private_link_enabled",
              "roles.edge_node.https_endpoints.access_modes",
              "roles.edge_node.https_endpoints.destination_port",
              "roles.edge_node.https_endpoints.disable_gateway_auth",
              "roles.edge_node.https_endpoints.private_ip_address",
              "roles.edge_node.https_endpoints.sub_domain_suffix",
              "roles.edge_node.install_script_action.parameters",
              "roles.edge_node.uninstall_script_actions.parameters",
              "roles.head_node.password",
              "roles.head_node.ssh_keys",
              "roles.head_node.subnet_id",
              "roles.head_node.virtual_network_id",
              "roles.head_node.script_actions.parameters",
              "roles.worker_node.password",
              "roles.worker_node.ssh_keys",
              "roles.worker_node.subnet_id",
              "roles.worker_node.virtual_network_id",
              "roles.worker_node.script_actions.parameters",
              "roles.zookeeper_node.password",
              "roles.zookeeper_node.ssh_keys",
              "roles.zookeeper_node.subnet_id",
              "roles.zookeeper_node.virtual_network_id",
              "roles.zookeeper_node.script_actions.parameters",
              "security_profile.cluster_users_group_dns",
              "storage_account.storage_resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_version",
              "location",
              "name",
              "resource_group_name",
              "tier",
              "component_version.hadoop",
              "extension.log_analytics_workspace_id",
              "extension.primary_key",
              "gateway.password",
              "gateway.username",
              "metastores.ambari.database_name",
              "metastores.ambari.password",
              "metastores.ambari.server",
              "metastores.ambari.username",
              "metastores.hive.database_name",
              "metastores.hive.password",
              "metastores.hive.server",
              "metastores.hive.username",
              "metastores.oozie.database_name",
              "metastores.oozie.password",
              "metastores.oozie.server",
              "metastores.oozie.username",
              "monitor.log_analytics_workspace_id",
              "monitor.primary_key",
              "roles.edge_node.target_instance_count",
              "roles.edge_node.vm_size",
              "roles.edge_node.install_script_action.name",
              "roles.edge_node.install_script_action.uri",
              "roles.edge_node.uninstall_script_actions.name",
              "roles.edge_node.uninstall_script_actions.uri",
              "roles.head_node.username",
              "roles.head_node.vm_size",
              "roles.head_node.script_actions.name",
              "roles.head_node.script_actions.uri",
              "roles.worker_node.target_instance_count",
              "roles.worker_node.username",
              "roles.worker_node.vm_size",
              "roles.worker_node.autoscale.capacity.max_instance_count",
              "roles.worker_node.autoscale.capacity.min_instance_count",
              "roles.worker_node.autoscale.recurrence.timezone",
              "roles.worker_node.autoscale.recurrence.schedule.days",
              "roles.worker_node.autoscale.recurrence.schedule.target_instance_count",
              "roles.worker_node.autoscale.recurrence.schedule.time",
              "roles.worker_node.script_actions.name",
              "roles.worker_node.script_actions.uri",
              "roles.zookeeper_node.username",
              "roles.zookeeper_node.vm_size",
              "roles.zookeeper_node.script_actions.name",
              "roles.zookeeper_node.script_actions.uri",
              "security_profile.aadds_resource_id",
              "security_profile.domain_name",
              "security_profile.domain_user_password",
              "security_profile.domain_username",
              "security_profile.ldaps_urls",
              "security_profile.msi_resource_id",
              "storage_account.is_default",
              "storage_account.storage_account_key",
              "storage_account.storage_container_id",
              "storage_account_gen2.filesystem_id",
              "storage_account_gen2.is_default",
              "storage_account_gen2.managed_identity_resource_id",
              "storage_account_gen2.storage_resource_id",
              "component_version",
              "compute_isolation",
              "disk_encryption",
              "extension",
              "gateway",
              "metastores",
              "metastores.ambari",
              "metastores.hive",
              "metastores.oozie",
              "monitor",
              "network",
              "roles",
              "roles.edge_node",
              "roles.edge_node.https_endpoints",
              "roles.edge_node.install_script_action",
              "roles.edge_node.uninstall_script_actions",
              "roles.head_node",
              "roles.head_node.script_actions",
              "roles.worker_node",
              "roles.worker_node.autoscale",
              "roles.worker_node.autoscale.capacity",
              "roles.worker_node.autoscale.recurrence",
              "roles.worker_node.autoscale.recurrence.schedule",
              "roles.worker_node.script_actions",
              "roles.zookeeper_node",
              "roles.zookeeper_node.script_actions",
              "security_profile",
              "storage_account",
              "storage_account_gen2",
              "timeouts"
            ],
            "azurerm_hdinsight_hbase_cluster": [
              "id",
              "tags",
              "tls_min_version",
              "compute_isolation.compute_isolation_enabled",
              "compute_isolation.host_sku",
              "disk_encryption.encryption_algorithm",
              "disk_encryption.encryption_at_host_enabled",
              "disk_encryption.key_vault_key_id",
              "disk_encryption.key_vault_managed_identity_id",
              "network.connection_direction",
              "network.private_link_enabled",
              "roles.head_node.password",
              "roles.head_node.ssh_keys",
              "roles.head_node.subnet_id",
              "roles.head_node.virtual_network_id",
              "roles.head_node.script_actions.parameters",
              "roles.worker_node.password",
              "roles.worker_node.ssh_keys",
              "roles.worker_node.subnet_id",
              "roles.worker_node.virtual_network_id",
              "roles.worker_node.script_actions.parameters",
              "roles.zookeeper_node.password",
              "roles.zookeeper_node.ssh_keys",
              "roles.zookeeper_node.subnet_id",
              "roles.zookeeper_node.virtual_network_id",
              "roles.zookeeper_node.script_actions.parameters",
              "security_profile.cluster_users_group_dns",
              "storage_account.storage_resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_version",
              "location",
              "name",
              "resource_group_name",
              "tier",
              "component_version.hbase",
              "extension.log_analytics_workspace_id",
              "extension.primary_key",
              "gateway.password",
              "gateway.username",
              "metastores.ambari.database_name",
              "metastores.ambari.password",
              "metastores.ambari.server",
              "metastores.ambari.username",
              "metastores.hive.database_name",
              "metastores.hive.password",
              "metastores.hive.server",
              "metastores.hive.username",
              "metastores.oozie.database_name",
              "metastores.oozie.password",
              "metastores.oozie.server",
              "metastores.oozie.username",
              "monitor.log_analytics_workspace_id",
              "monitor.primary_key",
              "roles.head_node.username",
              "roles.head_node.vm_size",
              "roles.head_node.script_actions.name",
              "roles.head_node.script_actions.uri",
              "roles.worker_node.target_instance_count",
              "roles.worker_node.username",
              "roles.worker_node.vm_size",
              "roles.worker_node.autoscale.recurrence.timezone",
              "roles.worker_node.autoscale.recurrence.schedule.days",
              "roles.worker_node.autoscale.recurrence.schedule.target_instance_count",
              "roles.worker_node.autoscale.recurrence.schedule.time",
              "roles.worker_node.script_actions.name",
              "roles.worker_node.script_actions.uri",
              "roles.zookeeper_node.username",
              "roles.zookeeper_node.vm_size",
              "roles.zookeeper_node.script_actions.name",
              "roles.zookeeper_node.script_actions.uri",
              "security_profile.aadds_resource_id",
              "security_profile.domain_name",
              "security_profile.domain_user_password",
              "security_profile.domain_username",
              "security_profile.ldaps_urls",
              "security_profile.msi_resource_id",
              "storage_account.is_default",
              "storage_account.storage_account_key",
              "storage_account.storage_container_id",
              "storage_account_gen2.filesystem_id",
              "storage_account_gen2.is_default",
              "storage_account_gen2.managed_identity_resource_id",
              "storage_account_gen2.storage_resource_id",
              "component_version",
              "compute_isolation",
              "disk_encryption",
              "extension",
              "gateway",
              "metastores",
              "metastores.ambari",
              "metastores.hive",
              "metastores.oozie",
              "monitor",
              "network",
              "roles",
              "roles.head_node",
              "roles.head_node.script_actions",
              "roles.worker_node",
              "roles.worker_node.autoscale",
              "roles.worker_node.autoscale.recurrence",
              "roles.worker_node.autoscale.recurrence.schedule",
              "roles.worker_node.script_actions",
              "roles.zookeeper_node",
              "roles.zookeeper_node.script_actions",
              "security_profile",
              "storage_account",
              "storage_account_gen2",
              "timeouts"
            ],
            "azurerm_hdinsight_interactive_query_cluster": [
              "encryption_in_transit_enabled",
              "id",
              "tags",
              "tls_min_version",
              "compute_isolation.compute_isolation_enabled",
              "compute_isolation.host_sku",
              "disk_encryption.encryption_algorithm",
              "disk_encryption.encryption_at_host_enabled",
              "disk_encryption.key_vault_key_id",
              "disk_encryption.key_vault_managed_identity_id",
              "network.connection_direction",
              "network.private_link_enabled",
              "roles.head_node.password",
              "roles.head_node.ssh_keys",
              "roles.head_node.subnet_id",
              "roles.head_node.virtual_network_id",
              "roles.head_node.script_actions.parameters",
              "roles.worker_node.password",
              "roles.worker_node.ssh_keys",
              "roles.worker_node.subnet_id",
              "roles.worker_node.virtual_network_id",
              "roles.worker_node.script_actions.parameters",
              "roles.zookeeper_node.password",
              "roles.zookeeper_node.ssh_keys",
              "roles.zookeeper_node.subnet_id",
              "roles.zookeeper_node.virtual_network_id",
              "roles.zookeeper_node.script_actions.parameters",
              "security_profile.cluster_users_group_dns",
              "storage_account.storage_resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_version",
              "location",
              "name",
              "resource_group_name",
              "tier",
              "component_version.interactive_hive",
              "extension.log_analytics_workspace_id",
              "extension.primary_key",
              "gateway.password",
              "gateway.username",
              "metastores.ambari.database_name",
              "metastores.ambari.password",
              "metastores.ambari.server",
              "metastores.ambari.username",
              "metastores.hive.database_name",
              "metastores.hive.password",
              "metastores.hive.server",
              "metastores.hive.username",
              "metastores.oozie.database_name",
              "metastores.oozie.password",
              "metastores.oozie.server",
              "metastores.oozie.username",
              "monitor.log_analytics_workspace_id",
              "monitor.primary_key",
              "roles.head_node.username",
              "roles.head_node.vm_size",
              "roles.head_node.script_actions.name",
              "roles.head_node.script_actions.uri",
              "roles.worker_node.target_instance_count",
              "roles.worker_node.username",
              "roles.worker_node.vm_size",
              "roles.worker_node.autoscale.capacity.max_instance_count",
              "roles.worker_node.autoscale.capacity.min_instance_count",
              "roles.worker_node.autoscale.recurrence.timezone",
              "roles.worker_node.autoscale.recurrence.schedule.days",
              "roles.worker_node.autoscale.recurrence.schedule.target_instance_count",
              "roles.worker_node.autoscale.recurrence.schedule.time",
              "roles.worker_node.script_actions.name",
              "roles.worker_node.script_actions.uri",
              "roles.zookeeper_node.username",
              "roles.zookeeper_node.vm_size",
              "roles.zookeeper_node.script_actions.name",
              "roles.zookeeper_node.script_actions.uri",
              "security_profile.aadds_resource_id",
              "security_profile.domain_name",
              "security_profile.domain_user_password",
              "security_profile.domain_username",
              "security_profile.ldaps_urls",
              "security_profile.msi_resource_id",
              "storage_account.is_default",
              "storage_account.storage_account_key",
              "storage_account.storage_container_id",
              "storage_account_gen2.filesystem_id",
              "storage_account_gen2.is_default",
              "storage_account_gen2.managed_identity_resource_id",
              "storage_account_gen2.storage_resource_id",
              "component_version",
              "compute_isolation",
              "disk_encryption",
              "extension",
              "gateway",
              "metastores",
              "metastores.ambari",
              "metastores.hive",
              "metastores.oozie",
              "monitor",
              "network",
              "roles",
              "roles.head_node",
              "roles.head_node.script_actions",
              "roles.worker_node",
              "roles.worker_node.autoscale",
              "roles.worker_node.autoscale.capacity",
              "roles.worker_node.autoscale.recurrence",
              "roles.worker_node.autoscale.recurrence.schedule",
              "roles.worker_node.script_actions",
              "roles.zookeeper_node",
              "roles.zookeeper_node.script_actions",
              "security_profile",
              "storage_account",
              "storage_account_gen2",
              "timeouts"
            ],
            "azurerm_hdinsight_kafka_cluster": [
              "encryption_in_transit_enabled",
              "id",
              "tags",
              "tls_min_version",
              "compute_isolation.compute_isolation_enabled",
              "compute_isolation.host_sku",
              "disk_encryption.encryption_algorithm",
              "disk_encryption.encryption_at_host_enabled",
              "disk_encryption.key_vault_key_id",
              "disk_encryption.key_vault_managed_identity_id",
              "network.connection_direction",
              "network.private_link_enabled",
              "roles.head_node.password",
              "roles.head_node.ssh_keys",
              "roles.head_node.subnet_id",
              "roles.head_node.virtual_network_id",
              "roles.head_node.script_actions.parameters",
              "roles.kafka_management_node.password",
              "roles.kafka_management_node.ssh_keys",
              "roles.kafka_management_node.subnet_id",
              "roles.kafka_management_node.virtual_network_id",
              "roles.kafka_management_node.script_actions.parameters",
              "roles.worker_node.password",
              "roles.worker_node.ssh_keys",
              "roles.worker_node.subnet_id",
              "roles.worker_node.virtual_network_id",
              "roles.worker_node.script_actions.parameters",
              "roles.zookeeper_node.password",
              "roles.zookeeper_node.ssh_keys",
              "roles.zookeeper_node.subnet_id",
              "roles.zookeeper_node.virtual_network_id",
              "roles.zookeeper_node.script_actions.parameters",
              "security_profile.cluster_users_group_dns",
              "storage_account.storage_resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_version",
              "location",
              "name",
              "resource_group_name",
              "tier",
              "component_version.kafka",
              "extension.log_analytics_workspace_id",
              "extension.primary_key",
              "gateway.password",
              "gateway.username",
              "metastores.ambari.database_name",
              "metastores.ambari.password",
              "metastores.ambari.server",
              "metastores.ambari.username",
              "metastores.hive.database_name",
              "metastores.hive.password",
              "metastores.hive.server",
              "metastores.hive.username",
              "metastores.oozie.database_name",
              "metastores.oozie.password",
              "metastores.oozie.server",
              "metastores.oozie.username",
              "monitor.log_analytics_workspace_id",
              "monitor.primary_key",
              "rest_proxy.security_group_id",
              "rest_proxy.security_group_name",
              "roles.head_node.username",
              "roles.head_node.vm_size",
              "roles.head_node.script_actions.name",
              "roles.head_node.script_actions.uri",
              "roles.kafka_management_node.username",
              "roles.kafka_management_node.vm_size",
              "roles.kafka_management_node.script_actions.name",
              "roles.kafka_management_node.script_actions.uri",
              "roles.worker_node.number_of_disks_per_node",
              "roles.worker_node.target_instance_count",
              "roles.worker_node.username",
              "roles.worker_node.vm_size",
              "roles.worker_node.script_actions.name",
              "roles.worker_node.script_actions.uri",
              "roles.zookeeper_node.username",
              "roles.zookeeper_node.vm_size",
              "roles.zookeeper_node.script_actions.name",
              "roles.zookeeper_node.script_actions.uri",
              "security_profile.aadds_resource_id",
              "security_profile.domain_name",
              "security_profile.domain_user_password",
              "security_profile.domain_username",
              "security_profile.ldaps_urls",
              "security_profile.msi_resource_id",
              "storage_account.is_default",
              "storage_account.storage_account_key",
              "storage_account.storage_container_id",
              "storage_account_gen2.filesystem_id",
              "storage_account_gen2.is_default",
              "storage_account_gen2.managed_identity_resource_id",
              "storage_account_gen2.storage_resource_id",
              "component_version",
              "compute_isolation",
              "disk_encryption",
              "extension",
              "gateway",
              "metastores",
              "metastores.ambari",
              "metastores.hive",
              "metastores.oozie",
              "monitor",
              "network",
              "rest_proxy",
              "roles",
              "roles.head_node",
              "roles.head_node.script_actions",
              "roles.kafka_management_node",
              "roles.kafka_management_node.script_actions",
              "roles.worker_node",
              "roles.worker_node.script_actions",
              "roles.zookeeper_node",
              "roles.zookeeper_node.script_actions",
              "security_profile",
              "storage_account",
              "storage_account_gen2",
              "timeouts"
            ],
            "azurerm_hdinsight_spark_cluster": [
              "encryption_in_transit_enabled",
              "id",
              "tags",
              "tls_min_version",
              "compute_isolation.compute_isolation_enabled",
              "compute_isolation.host_sku",
              "disk_encryption.encryption_algorithm",
              "disk_encryption.encryption_at_host_enabled",
              "disk_encryption.key_vault_key_id",
              "disk_encryption.key_vault_managed_identity_id",
              "network.connection_direction",
              "network.private_link_enabled",
              "roles.head_node.password",
              "roles.head_node.ssh_keys",
              "roles.head_node.subnet_id",
              "roles.head_node.virtual_network_id",
              "roles.head_node.script_actions.parameters",
              "roles.worker_node.password",
              "roles.worker_node.ssh_keys",
              "roles.worker_node.subnet_id",
              "roles.worker_node.virtual_network_id",
              "roles.worker_node.script_actions.parameters",
              "roles.zookeeper_node.password",
              "roles.zookeeper_node.ssh_keys",
              "roles.zookeeper_node.subnet_id",
              "roles.zookeeper_node.virtual_network_id",
              "roles.zookeeper_node.script_actions.parameters",
              "security_profile.cluster_users_group_dns",
              "storage_account.storage_resource_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_version",
              "location",
              "name",
              "resource_group_name",
              "tier",
              "component_version.spark",
              "extension.log_analytics_workspace_id",
              "extension.primary_key",
              "gateway.password",
              "gateway.username",
              "metastores.ambari.database_name",
              "metastores.ambari.password",
              "metastores.ambari.server",
              "metastores.ambari.username",
              "metastores.hive.database_name",
              "metastores.hive.password",
              "metastores.hive.server",
              "metastores.hive.username",
              "metastores.oozie.database_name",
              "metastores.oozie.password",
              "metastores.oozie.server",
              "metastores.oozie.username",
              "monitor.log_analytics_workspace_id",
              "monitor.primary_key",
              "roles.head_node.username",
              "roles.head_node.vm_size",
              "roles.head_node.script_actions.name",
              "roles.head_node.script_actions.uri",
              "roles.worker_node.target_instance_count",
              "roles.worker_node.username",
              "roles.worker_node.vm_size",
              "roles.worker_node.autoscale.capacity.max_instance_count",
              "roles.worker_node.autoscale.capacity.min_instance_count",
              "roles.worker_node.autoscale.recurrence.timezone",
              "roles.worker_node.autoscale.recurrence.schedule.days",
              "roles.worker_node.autoscale.recurrence.schedule.target_instance_count",
              "roles.worker_node.autoscale.recurrence.schedule.time",
              "roles.worker_node.script_actions.name",
              "roles.worker_node.script_actions.uri",
              "roles.zookeeper_node.username",
              "roles.zookeeper_node.vm_size",
              "roles.zookeeper_node.script_actions.name",
              "roles.zookeeper_node.script_actions.uri",
              "security_profile.aadds_resource_id",
              "security_profile.domain_name",
              "security_profile.domain_user_password",
              "security_profile.domain_username",
              "security_profile.ldaps_urls",
              "security_profile.msi_resource_id",
              "storage_account.is_default",
              "storage_account.storage_account_key",
              "storage_account.storage_container_id",
              "storage_account_gen2.filesystem_id",
              "storage_account_gen2.is_default",
              "storage_account_gen2.managed_identity_resource_id",
              "storage_account_gen2.storage_resource_id",
              "component_version",
              "compute_isolation",
              "disk_encryption",
              "extension",
              "gateway",
              "metastores",
              "metastores.ambari",
              "metastores.hive",
              "metastores.oozie",
              "monitor",
              "network",
              "roles",
              "roles.head_node",
              "roles.head_node.script_actions",
              "roles.worker_node",
              "roles.worker_node.autoscale",
              "roles.worker_node.autoscale.capacity",
              "roles.worker_node.autoscale.recurrence",
              "roles.worker_node.autoscale.recurrence.schedule",
              "roles.worker_node.script_actions",
              "roles.zookeeper_node",
              "roles.zookeeper_node.script_actions",
              "security_profile",
              "storage_account",
              "storage_account_gen2",
              "timeouts"
            ],
            "azurerm_healthbot": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_healthcare_dicom_service": [
              "id",
              "public_network_access_enabled",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "workspace_id",
              "identity.type",
              "identity",
              "timeouts",
              "private_endpoint.id",
              "private_endpoint.name"
            ],
            "azurerm_healthcare_fhir_service": [
              "access_policy_object_ids",
              "configuration_export_storage_account_name",
              "container_registry_login_server_url",
              "id",
              "kind",
              "tags",
              "authentication.smart_proxy_enabled",
              "cors.credentials_allowed",
              "cors.max_age_in_seconds",
              "oci_artifact.digest",
              "oci_artifact.image_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "workspace_id",
              "authentication.audience",
              "authentication.authority",
              "cors.allowed_headers",
              "cors.allowed_methods",
              "cors.allowed_origins",
              "identity.type",
              "oci_artifact.login_server",
              "authentication",
              "cors",
              "identity",
              "oci_artifact",
              "timeouts"
            ],
            "azurerm_healthcare_medtech_service": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "device_mapping_json",
              "eventhub_consumer_group_name",
              "eventhub_name",
              "eventhub_namespace_name",
              "location",
              "name",
              "workspace_id",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_healthcare_medtech_service_fhir_destination": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "destination_fhir_mapping_json",
              "destination_fhir_service_id",
              "destination_identity_resolution_type",
              "location",
              "medtech_service_id",
              "name",
              "timeouts"
            ],
            "azurerm_healthcare_service": [
              "access_policy_object_ids",
              "cosmosdb_key_vault_key_versionless_id",
              "cosmosdb_throughput",
              "id",
              "kind",
              "public_network_access_enabled",
              "tags",
              "authentication_configuration.audience",
              "authentication_configuration.authority",
              "authentication_configuration.smart_proxy_enabled",
              "cors_configuration.allow_credentials",
              "cors_configuration.allowed_headers",
              "cors_configuration.allowed_methods",
              "cors_configuration.allowed_origins",
              "cors_configuration.max_age_in_seconds",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "authentication_configuration",
              "cors_configuration",
              "timeouts"
            ],
            "azurerm_healthcare_workspace": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts",
              "private_endpoint_connection.id",
              "private_endpoint_connection.name"
            ],
            "azurerm_hpc_cache": [
              "automatically_rotate_key_to_latest_enabled",
              "id",
              "key_vault_key_id",
              "mtu",
              "ntp_server",
              "tags",
              "default_access_policy.access_rule.anonymous_gid",
              "default_access_policy.access_rule.anonymous_uid",
              "default_access_policy.access_rule.filter",
              "default_access_policy.access_rule.root_squash_enabled",
              "default_access_policy.access_rule.submount_access_enabled",
              "default_access_policy.access_rule.suid_enabled",
              "directory_active_directory.dns_secondary_ip",
              "directory_ldap.certificate_validation_uri",
              "directory_ldap.download_certificate_automatically",
              "directory_ldap.encrypted",
              "dns.search_domain",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cache_size_in_gb",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "subnet_id",
              "default_access_policy.access_rule.access",
              "default_access_policy.access_rule.scope",
              "directory_active_directory.cache_netbios_name",
              "directory_active_directory.dns_primary_ip",
              "directory_active_directory.domain_name",
              "directory_active_directory.domain_netbios_name",
              "directory_active_directory.password",
              "directory_active_directory.username",
              "directory_flat_file.group_file_uri",
              "directory_flat_file.password_file_uri",
              "directory_ldap.base_dn",
              "directory_ldap.server",
              "directory_ldap.bind.dn",
              "directory_ldap.bind.password",
              "dns.servers",
              "identity.identity_ids",
              "identity.type",
              "default_access_policy",
              "default_access_policy.access_rule",
              "directory_active_directory",
              "directory_flat_file",
              "directory_ldap",
              "directory_ldap.bind",
              "dns",
              "identity",
              "timeouts"
            ],
            "azurerm_hpc_cache_access_policy": [
              "id",
              "access_rule.anonymous_gid",
              "access_rule.anonymous_uid",
              "access_rule.filter",
              "access_rule.root_squash_enabled",
              "access_rule.submount_access_enabled",
              "access_rule.suid_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "hpc_cache_id",
              "name",
              "access_rule.access",
              "access_rule.scope",
              "access_rule",
              "timeouts"
            ],
            "azurerm_hpc_cache_blob_nfs_target": [
              "access_policy_name",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cache_name",
              "name",
              "namespace_path",
              "resource_group_name",
              "storage_container_id",
              "usage_model",
              "timeouts"
            ],
            "azurerm_hpc_cache_blob_target": [
              "access_policy_name",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cache_name",
              "name",
              "namespace_path",
              "resource_group_name",
              "storage_container_id",
              "timeouts"
            ],
            "azurerm_hpc_cache_nfs_target": [
              "id",
              "namespace_junction.access_policy_name",
              "namespace_junction.target_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cache_name",
              "name",
              "resource_group_name",
              "target_host_name",
              "usage_model",
              "namespace_junction.namespace_path",
              "namespace_junction.nfs_export",
              "namespace_junction",
              "timeouts"
            ],
            "azurerm_image": [
              "hyper_v_generation",
              "id",
              "source_virtual_machine_id",
              "tags",
              "zone_resilient",
              "data_disk.blob_uri",
              "data_disk.caching",
              "data_disk.lun",
              "data_disk.managed_disk_id",
              "data_disk.size_gb",
              "os_disk.blob_uri",
              "os_disk.caching",
              "os_disk.managed_disk_id",
              "os_disk.os_state",
              "os_disk.os_type",
              "os_disk.size_gb",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "data_disk",
              "os_disk",
              "timeouts"
            ],
            "azurerm_integration_service_environment": [
              "id",
              "sku_name",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "access_endpoint_type",
              "location",
              "name",
              "resource_group_name",
              "virtual_network_subnet_ids",
              "timeouts"
            ],
            "azurerm_iot_security_device_group": [
              "id",
              "allow_rule.connection_from_ips_not_allowed",
              "allow_rule.connection_to_ips_not_allowed",
              "allow_rule.local_users_not_allowed",
              "allow_rule.processes_not_allowed",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "iothub_id",
              "name",
              "range_rule.duration",
              "range_rule.max",
              "range_rule.min",
              "range_rule.type",
              "allow_rule",
              "range_rule",
              "timeouts"
            ],
            "azurerm_iot_security_solution": [
              "disabled_data_sources",
              "enabled",
              "events_to_export",
              "id",
              "log_analytics_workspace_id",
              "log_unmasked_ips_enabled",
              "query_for_resources",
              "query_subscription_ids",
              "tags",
              "recommendations_enabled.acr_authentication",
              "recommendations_enabled.agent_send_unutilized_msg",
              "recommendations_enabled.baseline",
              "recommendations_enabled.edge_hub_mem_optimize",
              "recommendations_enabled.edge_logging_option",
              "recommendations_enabled.inconsistent_module_settings",
              "recommendations_enabled.install_agent",
              "recommendations_enabled.ip_filter_deny_all",
              "recommendations_enabled.ip_filter_permissive_rule",
              "recommendations_enabled.open_ports",
              "recommendations_enabled.permissive_firewall_policy",
              "recommendations_enabled.permissive_input_firewall_rules",
              "recommendations_enabled.permissive_output_firewall_rules",
              "recommendations_enabled.privileged_docker_options",
              "recommendations_enabled.shared_credentials",
              "recommendations_enabled.vulnerable_tls_cipher_suite",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "display_name",
              "iothub_ids",
              "location",
              "name",
              "resource_group_name",
              "additional_workspace.data_types",
              "additional_workspace.workspace_id",
              "additional_workspace",
              "recommendations_enabled",
              "timeouts"
            ],
            "azurerm_iot_time_series_insights_access_policy": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "principal_object_id",
              "roles",
              "time_series_insights_environment_id",
              "timeouts"
            ],
            "azurerm_iot_time_series_insights_event_source_eventhub": [
              "id",
              "tags",
              "timestamp_property_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "consumer_group_name",
              "environment_id",
              "event_source_resource_id",
              "eventhub_name",
              "location",
              "name",
              "namespace_name",
              "shared_access_key",
              "shared_access_key_name",
              "timeouts"
            ],
            "azurerm_iot_time_series_insights_event_source_iothub": [
              "id",
              "tags",
              "timestamp_property_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "consumer_group_name",
              "environment_id",
              "event_source_resource_id",
              "iothub_name",
              "location",
              "name",
              "shared_access_key",
              "shared_access_key_name",
              "timeouts"
            ],
            "azurerm_iot_time_series_insights_gen2_environment": [
              "id",
              "tags",
              "warm_store_data_retention_time",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "id_properties",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "storage.key",
              "storage.name",
              "storage",
              "timeouts"
            ],
            "azurerm_iot_time_series_insights_reference_data_set": [
              "data_string_comparison_behavior",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "time_series_insights_environment_id",
              "key_property.name",
              "key_property.type",
              "key_property",
              "timeouts"
            ],
            "azurerm_iot_time_series_insights_standard_environment": [
              "id",
              "partition_key",
              "storage_limit_exceeded_behavior",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_retention_time",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_iotcentral_application": [
              "display_name",
              "id",
              "public_network_access_enabled",
              "sku",
              "tags",
              "template",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sub_domain",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_iotcentral_application_network_rule_set": [
              "apply_to_device",
              "default_action",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "iotcentral_application_id",
              "ip_rule.ip_mask",
              "ip_rule.name",
              "ip_rule",
              "timeouts"
            ],
            "azurerm_iothub": [
              "endpoint",
              "enrichment",
              "event_hub_partition_count",
              "event_hub_retention_in_days",
              "id",
              "min_tls_version",
              "public_network_access_enabled",
              "route",
              "tags",
              "cloud_to_device.default_ttl",
              "cloud_to_device.max_delivery_count",
              "cloud_to_device.feedback.lock_duration",
              "cloud_to_device.feedback.max_delivery_count",
              "cloud_to_device.feedback.time_to_live",
              "fallback_route.condition",
              "fallback_route.enabled",
              "fallback_route.endpoint_names",
              "fallback_route.source",
              "file_upload.authentication_type",
              "file_upload.default_ttl",
              "file_upload.identity_id",
              "file_upload.lock_duration",
              "file_upload.max_delivery_count",
              "file_upload.notifications",
              "file_upload.sas_ttl",
              "identity.identity_ids",
              "network_rule_set.apply_to_builtin_eventhub_endpoint",
              "network_rule_set.default_action",
              "network_rule_set.ip_rule.action",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "file_upload.connection_string",
              "file_upload.container_name",
              "identity.type",
              "network_rule_set.ip_rule.ip_mask",
              "network_rule_set.ip_rule.name",
              "sku.capacity",
              "sku.name",
              "cloud_to_device",
              "cloud_to_device.feedback",
              "fallback_route",
              "file_upload",
              "identity",
              "network_rule_set",
              "network_rule_set.ip_rule",
              "sku",
              "timeouts"
            ],
            "azurerm_iothub_certificate": [
              "id",
              "is_verified",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "certificate_content",
              "iothub_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_consumer_group": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "eventhub_endpoint_name",
              "iothub_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_device_update_account": [
              "id",
              "public_network_access_enabled",
              "sku",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_iothub_device_update_instance": [
              "diagnostic_enabled",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "device_update_account_id",
              "iothub_id",
              "name",
              "diagnostic_storage_account.connection_string",
              "diagnostic_storage_account.id",
              "diagnostic_storage_account",
              "timeouts"
            ],
            "azurerm_iothub_dps": [
              "allocation_policy",
              "data_residency_enabled",
              "id",
              "public_network_access_enabled",
              "tags",
              "ip_filter_rule.target",
              "linked_hub.allocation_weight",
              "linked_hub.apply_allocation_policy",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "ip_filter_rule.action",
              "ip_filter_rule.ip_mask",
              "ip_filter_rule.name",
              "linked_hub.connection_string",
              "linked_hub.location",
              "sku.capacity",
              "sku.name",
              "ip_filter_rule",
              "linked_hub",
              "sku",
              "timeouts"
            ],
            "azurerm_iothub_dps_certificate": [
              "id",
              "is_verified",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "certificate_content",
              "iot_dps_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_dps_shared_access_policy": [
              "enrollment_read",
              "enrollment_write",
              "id",
              "registration_read",
              "registration_write",
              "service_config",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "iothub_dps_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_endpoint_eventhub": [
              "authentication_type",
              "connection_string",
              "endpoint_uri",
              "entity_path",
              "id",
              "identity_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "iothub_id",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_endpoint_servicebus_queue": [
              "authentication_type",
              "connection_string",
              "endpoint_uri",
              "entity_path",
              "id",
              "identity_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "iothub_id",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_endpoint_servicebus_topic": [
              "authentication_type",
              "connection_string",
              "endpoint_uri",
              "entity_path",
              "id",
              "identity_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "iothub_id",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_endpoint_storage_container": [
              "authentication_type",
              "batch_frequency_in_seconds",
              "connection_string",
              "encoding",
              "endpoint_uri",
              "file_name_format",
              "id",
              "identity_id",
              "max_chunk_size_in_bytes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "container_name",
              "iothub_id",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_enrichment": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "endpoint_names",
              "iothub_name",
              "key",
              "resource_group_name",
              "value",
              "timeouts"
            ],
            "azurerm_iothub_fallback_route": [
              "condition",
              "id",
              "source",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "enabled",
              "endpoint_names",
              "iothub_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_iothub_route": [
              "condition",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "enabled",
              "endpoint_names",
              "iothub_name",
              "name",
              "resource_group_name",
              "source",
              "timeouts"
            ],
            "azurerm_iothub_shared_access_policy": [
              "device_connect",
              "id",
              "registry_read",
              "registry_write",
              "service_connect",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "iothub_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_ip_group": [
              "cidrs",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_key_vault": [
              "access_policy",
              "enable_rbac_authorization",
              "enabled_for_deployment",
              "enabled_for_disk_encryption",
              "enabled_for_template_deployment",
              "id",
              "public_network_access_enabled",
              "purge_protection_enabled",
              "soft_delete_retention_days",
              "tags",
              "contact.name",
              "contact.phone",
              "network_acls.ip_rules",
              "network_acls.virtual_network_subnet_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "tenant_id",
              "contact.email",
              "network_acls.bypass",
              "network_acls.default_action",
              "contact",
              "network_acls",
              "timeouts"
            ],
            "azurerm_key_vault_access_policy": [
              "application_id",
              "certificate_permissions",
              "id",
              "key_permissions",
              "secret_permissions",
              "storage_permissions",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_id",
              "object_id",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_key_vault_certificate": [
              "id",
              "tags",
              "certificate.password",
              "certificate_policy.key_properties.curve",
              "certificate_policy.key_properties.key_size",
              "certificate_policy.lifetime_action.trigger.days_before_expiry",
              "certificate_policy.lifetime_action.trigger.lifetime_percentage",
              "certificate_policy.x509_certificate_properties.extended_key_usage",
              "certificate_policy.x509_certificate_properties.subject_alternative_names.dns_names",
              "certificate_policy.x509_certificate_properties.subject_alternative_names.emails",
              "certificate_policy.x509_certificate_properties.subject_alternative_names.upns",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_id",
              "name",
              "certificate.contents",
              "certificate_policy.issuer_parameters.name",
              "certificate_policy.key_properties.exportable",
              "certificate_policy.key_properties.key_type",
              "certificate_policy.key_properties.reuse_key",
              "certificate_policy.lifetime_action.action.action_type",
              "certificate_policy.secret_properties.content_type",
              "certificate_policy.x509_certificate_properties.key_usage",
              "certificate_policy.x509_certificate_properties.subject",
              "certificate_policy.x509_certificate_properties.validity_in_months",
              "certificate",
              "certificate_policy",
              "certificate_policy.issuer_parameters",
              "certificate_policy.key_properties",
              "certificate_policy.lifetime_action",
              "certificate_policy.lifetime_action.action",
              "certificate_policy.lifetime_action.trigger",
              "certificate_policy.secret_properties",
              "certificate_policy.x509_certificate_properties",
              "certificate_policy.x509_certificate_properties.subject_alternative_names",
              "timeouts"
            ],
            "azurerm_key_vault_certificate_contacts": [
              "id",
              "contact.name",
              "contact.phone",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_id",
              "contact.email",
              "contact",
              "timeouts"
            ],
            "azurerm_key_vault_certificate_issuer": [
              "account_id",
              "id",
              "org_id",
              "password",
              "admin.first_name",
              "admin.last_name",
              "admin.phone",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_id",
              "name",
              "provider_name",
              "admin.email_address",
              "admin",
              "timeouts"
            ],
            "azurerm_key_vault_key": [
              "curve",
              "expiration_date",
              "id",
              "key_size",
              "not_before_date",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_opts",
              "key_type",
              "key_vault_id",
              "name",
              "timeouts"
            ],
            "azurerm_key_vault_managed_hardware_security_module": [
              "id",
              "public_network_access_enabled",
              "purge_protection_enabled",
              "soft_delete_retention_days",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "admin_object_ids",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "tenant_id",
              "network_acls.bypass",
              "network_acls.default_action",
              "network_acls",
              "timeouts"
            ],
            "azurerm_key_vault_managed_storage_account": [
              "id",
              "regenerate_key_automatically",
              "regeneration_period",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_id",
              "name",
              "storage_account_id",
              "storage_account_key",
              "timeouts"
            ],
            "azurerm_key_vault_managed_storage_account_sas_token_definition": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "managed_storage_account_id",
              "name",
              "sas_template_uri",
              "sas_type",
              "validity_period",
              "timeouts"
            ],
            "azurerm_key_vault_secret": [
              "content_type",
              "expiration_date",
              "id",
              "not_before_date",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_id",
              "name",
              "value",
              "timeouts"
            ],
            "azurerm_kubernetes_cluster": [
              "api_server_authorized_ip_ranges",
              "automatic_channel_upgrade",
              "azure_policy_enabled",
              "disk_encryption_set_id",
              "dns_prefix",
              "dns_prefix_private_cluster",
              "edge_zone",
              "enable_pod_security_policy",
              "http_application_routing_enabled",
              "id",
              "image_cleaner_enabled",
              "image_cleaner_interval_hours",
              "kubernetes_version",
              "local_account_disabled",
              "node_resource_group",
              "oidc_issuer_enabled",
              "open_service_mesh_enabled",
              "private_cluster_enabled",
              "private_cluster_public_fqdn_enabled",
              "private_dns_zone_id",
              "public_network_access_enabled",
              "role_based_access_control_enabled",
              "run_command_enabled",
              "sku_tier",
              "tags",
              "workload_identity_enabled",
              "auto_scaler_profile.balance_similar_node_groups",
              "auto_scaler_profile.empty_bulk_delete_max",
              "auto_scaler_profile.expander",
              "auto_scaler_profile.max_graceful_termination_sec",
              "auto_scaler_profile.max_node_provisioning_time",
              "auto_scaler_profile.max_unready_nodes",
              "auto_scaler_profile.max_unready_percentage",
              "auto_scaler_profile.new_pod_scale_up_delay",
              "auto_scaler_profile.scale_down_delay_after_add",
              "auto_scaler_profile.scale_down_delay_after_delete",
              "auto_scaler_profile.scale_down_delay_after_failure",
              "auto_scaler_profile.scale_down_unneeded",
              "auto_scaler_profile.scale_down_unready",
              "auto_scaler_profile.scale_down_utilization_threshold",
              "auto_scaler_profile.scan_interval",
              "auto_scaler_profile.skip_nodes_with_local_storage",
              "auto_scaler_profile.skip_nodes_with_system_pods",
              "azure_active_directory_role_based_access_control.admin_group_object_ids",
              "azure_active_directory_role_based_access_control.azure_rbac_enabled",
              "azure_active_directory_role_based_access_control.client_app_id",
              "azure_active_directory_role_based_access_control.managed",
              "azure_active_directory_role_based_access_control.server_app_id",
              "azure_active_directory_role_based_access_control.server_app_secret",
              "azure_active_directory_role_based_access_control.tenant_id",
              "default_node_pool.capacity_reservation_group_id",
              "default_node_pool.custom_ca_trust_enabled",
              "default_node_pool.enable_auto_scaling",
              "default_node_pool.enable_host_encryption",
              "default_node_pool.enable_node_public_ip",
              "default_node_pool.fips_enabled",
              "default_node_pool.host_group_id",
              "default_node_pool.kubelet_disk_type",
              "default_node_pool.max_count",
              "default_node_pool.max_pods",
              "default_node_pool.message_of_the_day",
              "default_node_pool.min_count",
              "default_node_pool.node_count",
              "default_node_pool.node_labels",
              "default_node_pool.node_public_ip_prefix_id",
              "default_node_pool.node_taints",
              "default_node_pool.only_critical_addons_enabled",
              "default_node_pool.orchestrator_version",
              "default_node_pool.os_disk_size_gb",
              "default_node_pool.os_disk_type",
              "default_node_pool.os_sku",
              "default_node_pool.pod_subnet_id",
              "default_node_pool.proximity_placement_group_id",
              "default_node_pool.scale_down_mode",
              "default_node_pool.tags",
              "default_node_pool.type",
              "default_node_pool.ultra_ssd_enabled",
              "default_node_pool.vnet_subnet_id",
              "default_node_pool.workload_runtime",
              "default_node_pool.zones",
              "default_node_pool.kubelet_config.allowed_unsafe_sysctls",
              "default_node_pool.kubelet_config.container_log_max_line",
              "default_node_pool.kubelet_config.container_log_max_size_mb",
              "default_node_pool.kubelet_config.cpu_cfs_quota_enabled",
              "default_node_pool.kubelet_config.cpu_cfs_quota_period",
              "default_node_pool.kubelet_config.cpu_manager_policy",
              "default_node_pool.kubelet_config.image_gc_high_threshold",
              "default_node_pool.kubelet_config.image_gc_low_threshold",
              "default_node_pool.kubelet_config.pod_max_pid",
              "default_node_pool.kubelet_config.topology_manager_policy",
              "default_node_pool.linux_os_config.swap_file_size_mb",
              "default_node_pool.linux_os_config.transparent_huge_page_defrag",
              "default_node_pool.linux_os_config.transparent_huge_page_enabled",
              "default_node_pool.linux_os_config.sysctl_config.fs_aio_max_nr",
              "default_node_pool.linux_os_config.sysctl_config.fs_file_max",
              "default_node_pool.linux_os_config.sysctl_config.fs_inotify_max_user_watches",
              "default_node_pool.linux_os_config.sysctl_config.fs_nr_open",
              "default_node_pool.linux_os_config.sysctl_config.kernel_threads_max",
              "default_node_pool.linux_os_config.sysctl_config.net_core_netdev_max_backlog",
              "default_node_pool.linux_os_config.sysctl_config.net_core_optmem_max",
              "default_node_pool.linux_os_config.sysctl_config.net_core_rmem_default",
              "default_node_pool.linux_os_config.sysctl_config.net_core_rmem_max",
              "default_node_pool.linux_os_config.sysctl_config.net_core_somaxconn",
              "default_node_pool.linux_os_config.sysctl_config.net_core_wmem_default",
              "default_node_pool.linux_os_config.sysctl_config.net_core_wmem_max",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_ip_local_port_range_max",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_ip_local_port_range_min",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_neigh_default_gc_thresh1",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_neigh_default_gc_thresh2",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_neigh_default_gc_thresh3",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_tcp_fin_timeout",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_tcp_keepalive_intvl",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_tcp_keepalive_probes",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_tcp_keepalive_time",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_tcp_max_syn_backlog",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_tcp_max_tw_buckets",
              "default_node_pool.linux_os_config.sysctl_config.net_ipv4_tcp_tw_reuse",
              "default_node_pool.linux_os_config.sysctl_config.net_netfilter_nf_conntrack_buckets",
              "default_node_pool.linux_os_config.sysctl_config.net_netfilter_nf_conntrack_max",
              "default_node_pool.linux_os_config.sysctl_config.vm_max_map_count",
              "default_node_pool.linux_os_config.sysctl_config.vm_swappiness",
              "default_node_pool.linux_os_config.sysctl_config.vm_vfs_cache_pressure",
              "http_proxy_config.http_proxy",
              "http_proxy_config.https_proxy",
              "http_proxy_config.no_proxy",
              "http_proxy_config.trusted_ca",
              "identity.identity_ids",
              "ingress_application_gateway.gateway_id",
              "ingress_application_gateway.gateway_name",
              "ingress_application_gateway.subnet_cidr",
              "ingress_application_gateway.subnet_id",
              "key_vault_secrets_provider.secret_rotation_enabled",
              "key_vault_secrets_provider.secret_rotation_interval",
              "kubelet_identity.client_id",
              "kubelet_identity.object_id",
              "kubelet_identity.user_assigned_identity_id",
              "monitor_metrics.annotations_allowed",
              "monitor_metrics.labels_allowed",
              "network_profile.dns_service_ip",
              "network_profile.docker_bridge_cidr",
              "network_profile.ebpf_data_plane",
              "network_profile.ip_versions",
              "network_profile.load_balancer_sku",
              "network_profile.network_mode",
              "network_profile.network_plugin_mode",
              "network_profile.network_policy",
              "network_profile.outbound_type",
              "network_profile.pod_cidr",
              "network_profile.pod_cidrs",
              "network_profile.service_cidr",
              "network_profile.service_cidrs",
              "network_profile.load_balancer_profile.idle_timeout_in_minutes",
              "network_profile.load_balancer_profile.managed_outbound_ip_count",
              "network_profile.load_balancer_profile.managed_outbound_ipv6_count",
              "network_profile.load_balancer_profile.outbound_ip_address_ids",
              "network_profile.load_balancer_profile.outbound_ip_prefix_ids",
              "network_profile.load_balancer_profile.outbound_ports_allocated",
              "network_profile.nat_gateway_profile.idle_timeout_in_minutes",
              "network_profile.nat_gateway_profile.managed_outbound_ip_count",
              "storage_profile.blob_driver_enabled",
              "storage_profile.disk_driver_enabled",
              "storage_profile.disk_driver_version",
              "storage_profile.file_driver_enabled",
              "storage_profile.snapshot_controller_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "windows_profile.admin_password",
              "windows_profile.license",
              "workload_autoscaler_profile.keda_enabled",
              "location",
              "name",
              "resource_group_name",
              "aci_connector_linux.subnet_name",
              "default_node_pool.name",
              "default_node_pool.vm_size",
              "default_node_pool.upgrade_settings.max_surge",
              "identity.type",
              "linux_profile.admin_username",
              "linux_profile.ssh_key.key_data",
              "maintenance_window.allowed.day",
              "maintenance_window.allowed.hours",
              "maintenance_window.not_allowed.end",
              "maintenance_window.not_allowed.start",
              "microsoft_defender.log_analytics_workspace_id",
              "network_profile.network_plugin",
              "oms_agent.log_analytics_workspace_id",
              "service_principal.client_id",
              "service_principal.client_secret",
              "web_app_routing.dns_zone_id",
              "windows_profile.admin_username",
              "windows_profile.gmsa.dns_server",
              "windows_profile.gmsa.root_domain",
              "aci_connector_linux",
              "auto_scaler_profile",
              "azure_active_directory_role_based_access_control",
              "default_node_pool",
              "default_node_pool.kubelet_config",
              "default_node_pool.linux_os_config",
              "default_node_pool.linux_os_config.sysctl_config",
              "default_node_pool.upgrade_settings",
              "http_proxy_config",
              "identity",
              "ingress_application_gateway",
              "key_vault_secrets_provider",
              "kubelet_identity",
              "linux_profile",
              "linux_profile.ssh_key",
              "maintenance_window",
              "maintenance_window.allowed",
              "maintenance_window.not_allowed",
              "microsoft_defender",
              "monitor_metrics",
              "network_profile",
              "network_profile.load_balancer_profile",
              "network_profile.nat_gateway_profile",
              "oms_agent",
              "service_principal",
              "storage_profile",
              "timeouts",
              "web_app_routing",
              "windows_profile",
              "windows_profile.gmsa",
              "workload_autoscaler_profile"
            ],
            "azurerm_kubernetes_cluster_node_pool": [
              "capacity_reservation_group_id",
              "custom_ca_trust_enabled",
              "enable_auto_scaling",
              "enable_host_encryption",
              "enable_node_public_ip",
              "eviction_policy",
              "fips_enabled",
              "host_group_id",
              "id",
              "kubelet_disk_type",
              "max_count",
              "max_pods",
              "message_of_the_day",
              "min_count",
              "mode",
              "node_count",
              "node_labels",
              "node_public_ip_prefix_id",
              "node_taints",
              "orchestrator_version",
              "os_disk_size_gb",
              "os_disk_type",
              "os_sku",
              "os_type",
              "pod_subnet_id",
              "priority",
              "proximity_placement_group_id",
              "scale_down_mode",
              "spot_max_price",
              "tags",
              "ultra_ssd_enabled",
              "vnet_subnet_id",
              "workload_runtime",
              "zones",
              "kubelet_config.allowed_unsafe_sysctls",
              "kubelet_config.container_log_max_line",
              "kubelet_config.container_log_max_size_mb",
              "kubelet_config.cpu_cfs_quota_enabled",
              "kubelet_config.cpu_cfs_quota_period",
              "kubelet_config.cpu_manager_policy",
              "kubelet_config.image_gc_high_threshold",
              "kubelet_config.image_gc_low_threshold",
              "kubelet_config.pod_max_pid",
              "kubelet_config.topology_manager_policy",
              "linux_os_config.swap_file_size_mb",
              "linux_os_config.transparent_huge_page_defrag",
              "linux_os_config.transparent_huge_page_enabled",
              "linux_os_config.sysctl_config.fs_aio_max_nr",
              "linux_os_config.sysctl_config.fs_file_max",
              "linux_os_config.sysctl_config.fs_inotify_max_user_watches",
              "linux_os_config.sysctl_config.fs_nr_open",
              "linux_os_config.sysctl_config.kernel_threads_max",
              "linux_os_config.sysctl_config.net_core_netdev_max_backlog",
              "linux_os_config.sysctl_config.net_core_optmem_max",
              "linux_os_config.sysctl_config.net_core_rmem_default",
              "linux_os_config.sysctl_config.net_core_rmem_max",
              "linux_os_config.sysctl_config.net_core_somaxconn",
              "linux_os_config.sysctl_config.net_core_wmem_default",
              "linux_os_config.sysctl_config.net_core_wmem_max",
              "linux_os_config.sysctl_config.net_ipv4_ip_local_port_range_max",
              "linux_os_config.sysctl_config.net_ipv4_ip_local_port_range_min",
              "linux_os_config.sysctl_config.net_ipv4_neigh_default_gc_thresh1",
              "linux_os_config.sysctl_config.net_ipv4_neigh_default_gc_thresh2",
              "linux_os_config.sysctl_config.net_ipv4_neigh_default_gc_thresh3",
              "linux_os_config.sysctl_config.net_ipv4_tcp_fin_timeout",
              "linux_os_config.sysctl_config.net_ipv4_tcp_keepalive_intvl",
              "linux_os_config.sysctl_config.net_ipv4_tcp_keepalive_probes",
              "linux_os_config.sysctl_config.net_ipv4_tcp_keepalive_time",
              "linux_os_config.sysctl_config.net_ipv4_tcp_max_syn_backlog",
              "linux_os_config.sysctl_config.net_ipv4_tcp_max_tw_buckets",
              "linux_os_config.sysctl_config.net_ipv4_tcp_tw_reuse",
              "linux_os_config.sysctl_config.net_netfilter_nf_conntrack_buckets",
              "linux_os_config.sysctl_config.net_netfilter_nf_conntrack_max",
              "linux_os_config.sysctl_config.vm_max_map_count",
              "linux_os_config.sysctl_config.vm_swappiness",
              "linux_os_config.sysctl_config.vm_vfs_cache_pressure",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "windows_profile.outbound_nat_enabled",
              "kubernetes_cluster_id",
              "name",
              "vm_size",
              "upgrade_settings.max_surge",
              "kubelet_config",
              "linux_os_config",
              "linux_os_config.sysctl_config",
              "timeouts",
              "upgrade_settings",
              "windows_profile"
            ],
            "azurerm_kubernetes_fleet_manager": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "hub_profile.dns_prefix",
              "hub_profile",
              "timeouts"
            ],
            "azurerm_kusto_attached_database_configuration": [
              "default_principal_modification_kind",
              "id",
              "sharing.external_tables_to_exclude",
              "sharing.external_tables_to_include",
              "sharing.materialized_views_to_exclude",
              "sharing.materialized_views_to_include",
              "sharing.tables_to_exclude",
              "sharing.tables_to_include",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_name",
              "cluster_resource_id",
              "database_name",
              "location",
              "name",
              "resource_group_name",
              "sharing",
              "timeouts"
            ],
            "azurerm_kusto_cluster": [
              "allowed_fqdns",
              "allowed_ip_ranges",
              "auto_stop_enabled",
              "disk_encryption_enabled",
              "double_encryption_enabled",
              "engine",
              "id",
              "language_extensions",
              "outbound_network_access_restricted",
              "public_ip_type",
              "public_network_access_enabled",
              "purge_enabled",
              "streaming_ingestion_enabled",
              "tags",
              "trusted_external_tenants",
              "zones",
              "identity.identity_ids",
              "sku.capacity",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "optimized_auto_scale.maximum_instances",
              "optimized_auto_scale.minimum_instances",
              "sku.name",
              "virtual_network_configuration.data_management_public_ip_id",
              "virtual_network_configuration.engine_public_ip_id",
              "virtual_network_configuration.subnet_id",
              "identity",
              "optimized_auto_scale",
              "sku",
              "timeouts",
              "virtual_network_configuration"
            ],
            "azurerm_kusto_cluster_customer_managed_key": [
              "id",
              "user_identity",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_id",
              "key_name",
              "key_vault_id",
              "key_version",
              "timeouts"
            ],
            "azurerm_kusto_cluster_managed_private_endpoint": [
              "id",
              "private_link_resource_region",
              "request_message",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_name",
              "group_id",
              "name",
              "private_link_resource_id",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_kusto_cluster_principal_assignment": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_name",
              "name",
              "principal_id",
              "principal_type",
              "resource_group_name",
              "role",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_kusto_database": [
              "hot_cache_period",
              "id",
              "soft_delete_period",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_name",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_kusto_database_principal_assignment": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "cluster_name",
              "database_name",
              "name",
              "principal_id",
              "principal_type",
              "resource_group_name",
              "role",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_kusto_eventgrid_data_connection": [
              "blob_storage_event_type",
              "data_format",
              "database_routing_type",
              "eventgrid_resource_id",
              "id",
              "managed_identity_resource_id",
              "mapping_rule_name",
              "skip_first_record",
              "table_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_name",
              "database_name",
              "eventhub_consumer_group_name",
              "eventhub_id",
              "location",
              "name",
              "resource_group_name",
              "storage_account_id",
              "timeouts"
            ],
            "azurerm_kusto_eventhub_data_connection": [
              "compression",
              "data_format",
              "database_routing_type",
              "event_system_properties",
              "id",
              "identity_id",
              "mapping_rule_name",
              "table_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_name",
              "consumer_group",
              "database_name",
              "eventhub_id",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_kusto_iothub_data_connection": [
              "data_format",
              "database_routing_type",
              "event_system_properties",
              "id",
              "mapping_rule_name",
              "table_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "cluster_name",
              "consumer_group",
              "database_name",
              "iothub_id",
              "location",
              "name",
              "resource_group_name",
              "shared_access_policy_name",
              "timeouts"
            ],
            "azurerm_kusto_script": [
              "continue_on_errors_enabled",
              "force_an_update_when_value_changed",
              "id",
              "sas_token",
              "script_content",
              "url",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "database_id",
              "name",
              "timeouts"
            ],
            "azurerm_lab_service_plan": [
              "default_network_subnet_id",
              "id",
              "shared_gallery_id",
              "tags",
              "default_auto_shutdown.disconnect_delay",
              "default_auto_shutdown.idle_delay",
              "default_auto_shutdown.no_connect_delay",
              "default_auto_shutdown.shutdown_on_idle",
              "default_connection.client_rdp_access",
              "default_connection.client_ssh_access",
              "default_connection.web_rdp_access",
              "default_connection.web_ssh_access",
              "support.email",
              "support.instructions",
              "support.phone",
              "support.url",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "allowed_regions",
              "location",
              "name",
              "resource_group_name",
              "default_auto_shutdown",
              "default_connection",
              "support",
              "timeouts"
            ],
            "azurerm_lb": [
              "edge_zone",
              "id",
              "sku",
              "sku_tier",
              "tags",
              "frontend_ip_configuration.gateway_load_balancer_frontend_ip_configuration_id",
              "frontend_ip_configuration.private_ip_address",
              "frontend_ip_configuration.private_ip_address_allocation",
              "frontend_ip_configuration.private_ip_address_version",
              "frontend_ip_configuration.public_ip_address_id",
              "frontend_ip_configuration.public_ip_prefix_id",
              "frontend_ip_configuration.subnet_id",
              "frontend_ip_configuration.zones",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "frontend_ip_configuration.name",
              "frontend_ip_configuration",
              "timeouts"
            ],
            "azurerm_lb_backend_address_pool": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "loadbalancer_id",
              "name",
              "tunnel_interface.identifier",
              "tunnel_interface.port",
              "tunnel_interface.protocol",
              "tunnel_interface.type",
              "timeouts",
              "tunnel_interface"
            ],
            "azurerm_lb_backend_address_pool_address": [
              "backend_address_ip_configuration_id",
              "id",
              "ip_address",
              "virtual_network_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backend_address_pool_id",
              "name",
              "timeouts"
            ],
            "azurerm_lb_nat_pool": [
              "floating_ip_enabled",
              "id",
              "idle_timeout_in_minutes",
              "tcp_reset_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backend_port",
              "frontend_ip_configuration_name",
              "frontend_port_end",
              "frontend_port_start",
              "loadbalancer_id",
              "name",
              "protocol",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_lb_nat_rule": [
              "backend_address_pool_id",
              "enable_floating_ip",
              "enable_tcp_reset",
              "frontend_port",
              "frontend_port_end",
              "frontend_port_start",
              "id",
              "idle_timeout_in_minutes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backend_port",
              "frontend_ip_configuration_name",
              "loadbalancer_id",
              "name",
              "protocol",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_lb_outbound_rule": [
              "allocated_outbound_ports",
              "enable_tcp_reset",
              "id",
              "idle_timeout_in_minutes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backend_address_pool_id",
              "loadbalancer_id",
              "name",
              "protocol",
              "frontend_ip_configuration.name",
              "frontend_ip_configuration",
              "timeouts"
            ],
            "azurerm_lb_probe": [
              "id",
              "interval_in_seconds",
              "number_of_probes",
              "probe_threshold",
              "protocol",
              "request_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "loadbalancer_id",
              "name",
              "port",
              "timeouts"
            ],
            "azurerm_lb_rule": [
              "backend_address_pool_ids",
              "disable_outbound_snat",
              "enable_floating_ip",
              "enable_tcp_reset",
              "id",
              "idle_timeout_in_minutes",
              "load_distribution",
              "probe_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backend_port",
              "frontend_ip_configuration_name",
              "frontend_port",
              "loadbalancer_id",
              "name",
              "protocol",
              "timeouts"
            ],
            "azurerm_lighthouse_assignment": [
              "id",
              "name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "lighthouse_definition_id",
              "scope",
              "timeouts"
            ],
            "azurerm_lighthouse_definition": [
              "description",
              "id",
              "lighthouse_definition_id",
              "authorization.delegated_role_definition_ids",
              "authorization.principal_display_name",
              "eligible_authorization.principal_display_name",
              "eligible_authorization.just_in_time_access_policy.maximum_activation_duration",
              "eligible_authorization.just_in_time_access_policy.multi_factor_auth_provider",
              "eligible_authorization.just_in_time_access_policy.approver.principal_display_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "managing_tenant_id",
              "name",
              "scope",
              "authorization.principal_id",
              "authorization.role_definition_id",
              "eligible_authorization.principal_id",
              "eligible_authorization.role_definition_id",
              "eligible_authorization.just_in_time_access_policy.approver.principal_id",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "plan.version",
              "authorization",
              "eligible_authorization",
              "eligible_authorization.just_in_time_access_policy",
              "eligible_authorization.just_in_time_access_policy.approver",
              "plan",
              "timeouts"
            ],
            "azurerm_linux_function_app": [
              "app_settings",
              "builtin_logging_enabled",
              "client_certificate_enabled",
              "client_certificate_exclusion_paths",
              "client_certificate_mode",
              "content_share_force_disabled",
              "daily_memory_time_quota",
              "enabled",
              "functions_extension_version",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "storage_account_access_key",
              "storage_account_name",
              "storage_key_vault_secret_id",
              "storage_uses_managed_identity",
              "tags",
              "virtual_network_subnet_id",
              "auth_settings.additional_login_parameters",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.active_directory.client_secret_setting_name",
              "auth_settings.facebook.app_secret",
              "auth_settings.facebook.app_secret_setting_name",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.github.client_secret",
              "auth_settings.github.client_secret_setting_name",
              "auth_settings.github.oauth_scopes",
              "auth_settings.google.client_secret",
              "auth_settings.google.client_secret_setting_name",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.client_secret",
              "auth_settings.microsoft.client_secret_setting_name",
              "auth_settings.microsoft.oauth_scopes",
              "auth_settings.twitter.consumer_secret",
              "auth_settings.twitter.consumer_secret_setting_name",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "site_config.always_on",
              "site_config.api_definition_url",
              "site_config.api_management_api_id",
              "site_config.app_command_line",
              "site_config.app_scale_limit",
              "site_config.application_insights_connection_string",
              "site_config.application_insights_key",
              "site_config.container_registry_managed_identity_client_id",
              "site_config.container_registry_use_managed_identity",
              "site_config.default_documents",
              "site_config.elastic_instance_minimum",
              "site_config.ftps_state",
              "site_config.health_check_eviction_time_in_min",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.load_balancing_mode",
              "site_config.managed_pipeline_mode",
              "site_config.minimum_tls_version",
              "site_config.pre_warmed_instance_count",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.runtime_scale_monitoring_enabled",
              "site_config.scm_ip_restriction",
              "site_config.scm_minimum_tls_version",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.worker_count",
              "site_config.app_service_logs.disk_quota_mb",
              "site_config.app_service_logs.retention_period_days",
              "site_config.application_stack.dotnet_version",
              "site_config.application_stack.java_version",
              "site_config.application_stack.node_version",
              "site_config.application_stack.powershell_core_version",
              "site_config.application_stack.python_version",
              "site_config.application_stack.use_custom_runtime",
              "site_config.application_stack.use_dotnet_isolated_runtime",
              "site_config.application_stack.docker.registry_password",
              "site_config.application_stack.docker.registry_username",
              "site_config.cors.support_credentials",
              "sticky_settings.app_setting_names",
              "sticky_settings.connection_string_names",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "service_plan_id",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.github.client_id",
              "auth_settings.google.client_id",
              "auth_settings.microsoft.client_id",
              "auth_settings.twitter.consumer_key",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "site_config.application_stack.docker.image_name",
              "site_config.application_stack.docker.image_tag",
              "site_config.application_stack.docker.registry_url",
              "site_config.cors.allowed_origins",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.github",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "site_config",
              "site_config.app_service_logs",
              "site_config.application_stack",
              "site_config.application_stack.docker",
              "site_config.cors",
              "sticky_settings",
              "storage_account",
              "timeouts"
            ],
            "azurerm_linux_function_app_slot": [
              "app_settings",
              "builtin_logging_enabled",
              "client_certificate_enabled",
              "client_certificate_exclusion_paths",
              "client_certificate_mode",
              "content_share_force_disabled",
              "daily_memory_time_quota",
              "enabled",
              "functions_extension_version",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "storage_account_access_key",
              "storage_account_name",
              "storage_key_vault_secret_id",
              "storage_uses_managed_identity",
              "tags",
              "virtual_network_subnet_id",
              "auth_settings.additional_login_parameters",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.active_directory.client_secret_setting_name",
              "auth_settings.facebook.app_secret",
              "auth_settings.facebook.app_secret_setting_name",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.github.client_secret",
              "auth_settings.github.client_secret_setting_name",
              "auth_settings.github.oauth_scopes",
              "auth_settings.google.client_secret",
              "auth_settings.google.client_secret_setting_name",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.client_secret",
              "auth_settings.microsoft.client_secret_setting_name",
              "auth_settings.microsoft.oauth_scopes",
              "auth_settings.twitter.consumer_secret",
              "auth_settings.twitter.consumer_secret_setting_name",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "site_config.always_on",
              "site_config.api_definition_url",
              "site_config.api_management_api_id",
              "site_config.app_command_line",
              "site_config.app_scale_limit",
              "site_config.application_insights_connection_string",
              "site_config.application_insights_key",
              "site_config.auto_swap_slot_name",
              "site_config.container_registry_managed_identity_client_id",
              "site_config.container_registry_use_managed_identity",
              "site_config.default_documents",
              "site_config.elastic_instance_minimum",
              "site_config.ftps_state",
              "site_config.health_check_eviction_time_in_min",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.load_balancing_mode",
              "site_config.managed_pipeline_mode",
              "site_config.minimum_tls_version",
              "site_config.pre_warmed_instance_count",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.runtime_scale_monitoring_enabled",
              "site_config.scm_ip_restriction",
              "site_config.scm_minimum_tls_version",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.worker_count",
              "site_config.app_service_logs.disk_quota_mb",
              "site_config.app_service_logs.retention_period_days",
              "site_config.application_stack.dotnet_version",
              "site_config.application_stack.java_version",
              "site_config.application_stack.node_version",
              "site_config.application_stack.powershell_core_version",
              "site_config.application_stack.python_version",
              "site_config.application_stack.use_custom_runtime",
              "site_config.application_stack.use_dotnet_isolated_runtime",
              "site_config.application_stack.docker.registry_password",
              "site_config.application_stack.docker.registry_username",
              "site_config.cors.support_credentials",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "function_app_id",
              "name",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.github.client_id",
              "auth_settings.google.client_id",
              "auth_settings.microsoft.client_id",
              "auth_settings.twitter.consumer_key",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "site_config.application_stack.docker.image_name",
              "site_config.application_stack.docker.image_tag",
              "site_config.application_stack.docker.registry_url",
              "site_config.cors.allowed_origins",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.github",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "site_config",
              "site_config.app_service_logs",
              "site_config.application_stack",
              "site_config.application_stack.docker",
              "site_config.cors",
              "storage_account",
              "timeouts"
            ],
            "azurerm_linux_virtual_machine": [
              "admin_password",
              "allow_extension_operations",
              "availability_set_id",
              "capacity_reservation_group_id",
              "computer_name",
              "custom_data",
              "dedicated_host_group_id",
              "dedicated_host_id",
              "disable_password_authentication",
              "edge_zone",
              "encryption_at_host_enabled",
              "eviction_policy",
              "extensions_time_budget",
              "id",
              "license_type",
              "max_bid_price",
              "patch_assessment_mode",
              "patch_mode",
              "platform_fault_domain",
              "priority",
              "provision_vm_agent",
              "proximity_placement_group_id",
              "secure_boot_enabled",
              "source_image_id",
              "tags",
              "user_data",
              "virtual_machine_scale_set_id",
              "vtpm_enabled",
              "zone",
              "additional_capabilities.ultra_ssd_enabled",
              "boot_diagnostics.storage_account_uri",
              "gallery_application.configuration_blob_uri",
              "gallery_application.order",
              "gallery_application.tag",
              "identity.identity_ids",
              "os_disk.disk_encryption_set_id",
              "os_disk.disk_size_gb",
              "os_disk.name",
              "os_disk.secure_vm_disk_encryption_set_id",
              "os_disk.security_encryption_type",
              "os_disk.write_accelerator_enabled",
              "os_disk.diff_disk_settings.placement",
              "termination_notification.timeout",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "admin_username",
              "location",
              "name",
              "network_interface_ids",
              "resource_group_name",
              "size",
              "admin_ssh_key.public_key",
              "admin_ssh_key.username",
              "gallery_application.version_id",
              "identity.type",
              "os_disk.caching",
              "os_disk.storage_account_type",
              "os_disk.diff_disk_settings.option",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "secret.key_vault_id",
              "secret.certificate.url",
              "source_image_reference.offer",
              "source_image_reference.publisher",
              "source_image_reference.sku",
              "source_image_reference.version",
              "termination_notification.enabled",
              "additional_capabilities",
              "admin_ssh_key",
              "boot_diagnostics",
              "gallery_application",
              "identity",
              "os_disk",
              "os_disk.diff_disk_settings",
              "plan",
              "secret",
              "secret.certificate",
              "source_image_reference",
              "termination_notification",
              "timeouts"
            ],
            "azurerm_linux_virtual_machine_scale_set": [
              "admin_password",
              "capacity_reservation_group_id",
              "computer_name_prefix",
              "custom_data",
              "disable_password_authentication",
              "do_not_run_extensions_on_overprovisioned_machines",
              "edge_zone",
              "encryption_at_host_enabled",
              "eviction_policy",
              "extension_operations_enabled",
              "extensions_time_budget",
              "health_probe_id",
              "host_group_id",
              "id",
              "instances",
              "max_bid_price",
              "overprovision",
              "platform_fault_domain_count",
              "priority",
              "provision_vm_agent",
              "proximity_placement_group_id",
              "scale_in_policy",
              "secure_boot_enabled",
              "single_placement_group",
              "source_image_id",
              "tags",
              "upgrade_mode",
              "user_data",
              "vtpm_enabled",
              "zone_balance",
              "zones",
              "additional_capabilities.ultra_ssd_enabled",
              "automatic_instance_repair.grace_period",
              "boot_diagnostics.storage_account_uri",
              "data_disk.create_option",
              "data_disk.disk_encryption_set_id",
              "data_disk.name",
              "data_disk.ultra_ssd_disk_iops_read_write",
              "data_disk.ultra_ssd_disk_mbps_read_write",
              "data_disk.write_accelerator_enabled",
              "extension.auto_upgrade_minor_version",
              "extension.automatic_upgrade_enabled",
              "extension.force_update_tag",
              "extension.protected_settings",
              "extension.provision_after_extensions",
              "extension.settings",
              "gallery_application.configuration_blob_uri",
              "gallery_application.order",
              "gallery_application.tag",
              "gallery_applications.configuration_reference_blob_uri",
              "gallery_applications.order",
              "gallery_applications.tag",
              "identity.identity_ids",
              "network_interface.dns_servers",
              "network_interface.enable_accelerated_networking",
              "network_interface.enable_ip_forwarding",
              "network_interface.network_security_group_id",
              "network_interface.primary",
              "network_interface.ip_configuration.application_gateway_backend_address_pool_ids",
              "network_interface.ip_configuration.application_security_group_ids",
              "network_interface.ip_configuration.load_balancer_backend_address_pool_ids",
              "network_interface.ip_configuration.load_balancer_inbound_nat_rules_ids",
              "network_interface.ip_configuration.primary",
              "network_interface.ip_configuration.subnet_id",
              "network_interface.ip_configuration.version",
              "network_interface.ip_configuration.public_ip_address.domain_name_label",
              "network_interface.ip_configuration.public_ip_address.idle_timeout_in_minutes",
              "network_interface.ip_configuration.public_ip_address.public_ip_prefix_id",
              "network_interface.ip_configuration.public_ip_address.version",
              "os_disk.disk_encryption_set_id",
              "os_disk.disk_size_gb",
              "os_disk.secure_vm_disk_encryption_set_id",
              "os_disk.security_encryption_type",
              "os_disk.write_accelerator_enabled",
              "os_disk.diff_disk_settings.placement",
              "rolling_upgrade_policy.cross_zone_upgrades_enabled",
              "rolling_upgrade_policy.prioritize_unhealthy_instances_enabled",
              "scale_in.force_deletion_enabled",
              "scale_in.rule",
              "spot_restore.enabled",
              "spot_restore.timeout",
              "terminate_notification.timeout",
              "termination_notification.timeout",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "admin_username",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "admin_ssh_key.public_key",
              "admin_ssh_key.username",
              "automatic_instance_repair.enabled",
              "automatic_os_upgrade_policy.disable_automatic_rollback",
              "automatic_os_upgrade_policy.enable_automatic_os_upgrade",
              "data_disk.caching",
              "data_disk.disk_size_gb",
              "data_disk.lun",
              "data_disk.storage_account_type",
              "extension.name",
              "extension.publisher",
              "extension.type",
              "extension.type_handler_version",
              "extension.protected_settings_from_key_vault.secret_url",
              "extension.protected_settings_from_key_vault.source_vault_id",
              "gallery_application.version_id",
              "gallery_applications.package_reference_id",
              "identity.type",
              "network_interface.name",
              "network_interface.ip_configuration.name",
              "network_interface.ip_configuration.public_ip_address.name",
              "network_interface.ip_configuration.public_ip_address.ip_tag.tag",
              "network_interface.ip_configuration.public_ip_address.ip_tag.type",
              "os_disk.caching",
              "os_disk.storage_account_type",
              "os_disk.diff_disk_settings.option",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "rolling_upgrade_policy.max_batch_instance_percent",
              "rolling_upgrade_policy.max_unhealthy_instance_percent",
              "rolling_upgrade_policy.max_unhealthy_upgraded_instance_percent",
              "rolling_upgrade_policy.pause_time_between_batches",
              "secret.key_vault_id",
              "secret.certificate.url",
              "source_image_reference.offer",
              "source_image_reference.publisher",
              "source_image_reference.sku",
              "source_image_reference.version",
              "terminate_notification.enabled",
              "termination_notification.enabled",
              "additional_capabilities",
              "admin_ssh_key",
              "automatic_instance_repair",
              "automatic_os_upgrade_policy",
              "boot_diagnostics",
              "data_disk",
              "extension",
              "extension.protected_settings_from_key_vault",
              "gallery_application",
              "gallery_applications",
              "identity",
              "network_interface",
              "network_interface.ip_configuration",
              "network_interface.ip_configuration.public_ip_address",
              "network_interface.ip_configuration.public_ip_address.ip_tag",
              "os_disk",
              "os_disk.diff_disk_settings",
              "plan",
              "rolling_upgrade_policy",
              "scale_in",
              "secret",
              "secret.certificate",
              "source_image_reference",
              "spot_restore",
              "terminate_notification",
              "termination_notification",
              "timeouts"
            ],
            "azurerm_linux_web_app": [
              "app_settings",
              "client_affinity_enabled",
              "client_certificate_enabled",
              "client_certificate_exclusion_paths",
              "client_certificate_mode",
              "enabled",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "tags",
              "virtual_network_subnet_id",
              "zip_deploy_file",
              "auth_settings.additional_login_parameters",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.active_directory.client_secret_setting_name",
              "auth_settings.facebook.app_secret",
              "auth_settings.facebook.app_secret_setting_name",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.github.client_secret",
              "auth_settings.github.client_secret_setting_name",
              "auth_settings.github.oauth_scopes",
              "auth_settings.google.client_secret",
              "auth_settings.google.client_secret_setting_name",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.client_secret",
              "auth_settings.microsoft.client_secret_setting_name",
              "auth_settings.microsoft.oauth_scopes",
              "auth_settings.twitter.consumer_secret",
              "auth_settings.twitter.consumer_secret_setting_name",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "logs.detailed_error_messages",
              "logs.failed_request_tracing",
              "logs.http_logs.azure_blob_storage.retention_in_days",
              "site_config.always_on",
              "site_config.api_definition_url",
              "site_config.api_management_api_id",
              "site_config.app_command_line",
              "site_config.auto_heal_enabled",
              "site_config.container_registry_managed_identity_client_id",
              "site_config.container_registry_use_managed_identity",
              "site_config.default_documents",
              "site_config.ftps_state",
              "site_config.health_check_eviction_time_in_min",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.load_balancing_mode",
              "site_config.local_mysql_enabled",
              "site_config.managed_pipeline_mode",
              "site_config.minimum_tls_version",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.scm_ip_restriction",
              "site_config.scm_minimum_tls_version",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.worker_count",
              "site_config.application_stack.docker_image",
              "site_config.application_stack.docker_image_tag",
              "site_config.application_stack.dotnet_version",
              "site_config.application_stack.java_server",
              "site_config.application_stack.java_server_version",
              "site_config.application_stack.java_version",
              "site_config.application_stack.node_version",
              "site_config.application_stack.php_version",
              "site_config.application_stack.python_version",
              "site_config.application_stack.ruby_version",
              "site_config.auto_heal_setting.action.minimum_process_execution_time",
              "site_config.auto_heal_setting.trigger.slow_request.path",
              "site_config.auto_heal_setting.trigger.status_code.path",
              "site_config.auto_heal_setting.trigger.status_code.sub_status",
              "site_config.auto_heal_setting.trigger.status_code.win32_status",
              "site_config.cors.support_credentials",
              "sticky_settings.app_setting_names",
              "sticky_settings.connection_string_names",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "service_plan_id",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.github.client_id",
              "auth_settings.google.client_id",
              "auth_settings.microsoft.client_id",
              "auth_settings.twitter.consumer_key",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "logs.application_logs.file_system_level",
              "logs.application_logs.azure_blob_storage.level",
              "logs.application_logs.azure_blob_storage.retention_in_days",
              "logs.application_logs.azure_blob_storage.sas_url",
              "logs.http_logs.azure_blob_storage.sas_url",
              "logs.http_logs.file_system.retention_in_days",
              "logs.http_logs.file_system.retention_in_mb",
              "site_config.auto_heal_setting.action.action_type",
              "site_config.auto_heal_setting.trigger.requests.count",
              "site_config.auto_heal_setting.trigger.requests.interval",
              "site_config.auto_heal_setting.trigger.slow_request.count",
              "site_config.auto_heal_setting.trigger.slow_request.interval",
              "site_config.auto_heal_setting.trigger.slow_request.time_taken",
              "site_config.auto_heal_setting.trigger.status_code.count",
              "site_config.auto_heal_setting.trigger.status_code.interval",
              "site_config.auto_heal_setting.trigger.status_code.status_code_range",
              "site_config.cors.allowed_origins",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.github",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "logs",
              "logs.application_logs",
              "logs.application_logs.azure_blob_storage",
              "logs.http_logs",
              "logs.http_logs.azure_blob_storage",
              "logs.http_logs.file_system",
              "site_config",
              "site_config.application_stack",
              "site_config.auto_heal_setting",
              "site_config.auto_heal_setting.action",
              "site_config.auto_heal_setting.trigger",
              "site_config.auto_heal_setting.trigger.requests",
              "site_config.auto_heal_setting.trigger.slow_request",
              "site_config.auto_heal_setting.trigger.status_code",
              "site_config.cors",
              "sticky_settings",
              "storage_account",
              "timeouts"
            ],
            "azurerm_linux_web_app_slot": [
              "app_settings",
              "client_affinity_enabled",
              "client_certificate_enabled",
              "client_certificate_exclusion_paths",
              "client_certificate_mode",
              "enabled",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "tags",
              "virtual_network_subnet_id",
              "zip_deploy_file",
              "auth_settings.additional_login_parameters",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.active_directory.client_secret_setting_name",
              "auth_settings.facebook.app_secret",
              "auth_settings.facebook.app_secret_setting_name",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.github.client_secret",
              "auth_settings.github.client_secret_setting_name",
              "auth_settings.github.oauth_scopes",
              "auth_settings.google.client_secret",
              "auth_settings.google.client_secret_setting_name",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.client_secret",
              "auth_settings.microsoft.client_secret_setting_name",
              "auth_settings.microsoft.oauth_scopes",
              "auth_settings.twitter.consumer_secret",
              "auth_settings.twitter.consumer_secret_setting_name",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "logs.detailed_error_messages",
              "logs.failed_request_tracing",
              "logs.http_logs.azure_blob_storage.retention_in_days",
              "site_config.always_on",
              "site_config.api_definition_url",
              "site_config.api_management_api_id",
              "site_config.app_command_line",
              "site_config.auto_heal_enabled",
              "site_config.auto_swap_slot_name",
              "site_config.container_registry_managed_identity_client_id",
              "site_config.container_registry_use_managed_identity",
              "site_config.default_documents",
              "site_config.ftps_state",
              "site_config.health_check_eviction_time_in_min",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.load_balancing_mode",
              "site_config.local_mysql_enabled",
              "site_config.managed_pipeline_mode",
              "site_config.minimum_tls_version",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.scm_ip_restriction",
              "site_config.scm_minimum_tls_version",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.worker_count",
              "site_config.application_stack.docker_image",
              "site_config.application_stack.docker_image_tag",
              "site_config.application_stack.dotnet_version",
              "site_config.application_stack.java_server",
              "site_config.application_stack.java_server_version",
              "site_config.application_stack.java_version",
              "site_config.application_stack.node_version",
              "site_config.application_stack.php_version",
              "site_config.application_stack.python_version",
              "site_config.application_stack.ruby_version",
              "site_config.auto_heal_setting.action.minimum_process_execution_time",
              "site_config.auto_heal_setting.trigger.slow_request.path",
              "site_config.auto_heal_setting.trigger.status_code.path",
              "site_config.auto_heal_setting.trigger.status_code.sub_status",
              "site_config.auto_heal_setting.trigger.status_code.win32_status",
              "site_config.cors.support_credentials",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_id",
              "name",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.github.client_id",
              "auth_settings.google.client_id",
              "auth_settings.microsoft.client_id",
              "auth_settings.twitter.consumer_key",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "logs.application_logs.file_system_level",
              "logs.application_logs.azure_blob_storage.level",
              "logs.application_logs.azure_blob_storage.retention_in_days",
              "logs.application_logs.azure_blob_storage.sas_url",
              "logs.http_logs.azure_blob_storage.sas_url",
              "logs.http_logs.file_system.retention_in_days",
              "logs.http_logs.file_system.retention_in_mb",
              "site_config.auto_heal_setting.action.action_type",
              "site_config.auto_heal_setting.trigger.requests.count",
              "site_config.auto_heal_setting.trigger.requests.interval",
              "site_config.auto_heal_setting.trigger.slow_request.count",
              "site_config.auto_heal_setting.trigger.slow_request.interval",
              "site_config.auto_heal_setting.trigger.slow_request.time_taken",
              "site_config.auto_heal_setting.trigger.status_code.count",
              "site_config.auto_heal_setting.trigger.status_code.interval",
              "site_config.auto_heal_setting.trigger.status_code.status_code_range",
              "site_config.cors.allowed_origins",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.github",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "logs",
              "logs.application_logs",
              "logs.application_logs.azure_blob_storage",
              "logs.http_logs",
              "logs.http_logs.azure_blob_storage",
              "logs.http_logs.file_system",
              "site_config",
              "site_config.application_stack",
              "site_config.auto_heal_setting",
              "site_config.auto_heal_setting.action",
              "site_config.auto_heal_setting.trigger",
              "site_config.auto_heal_setting.trigger.requests",
              "site_config.auto_heal_setting.trigger.slow_request",
              "site_config.auto_heal_setting.trigger.status_code",
              "site_config.cors",
              "storage_account",
              "timeouts"
            ],
            "azurerm_load_test": [
              "description",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_local_network_gateway": [
              "address_space",
              "gateway_address",
              "gateway_fqdn",
              "id",
              "tags",
              "bgp_settings.peer_weight",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "bgp_settings.asn",
              "bgp_settings.bgp_peering_address",
              "bgp_settings",
              "timeouts"
            ],
            "azurerm_log_analytics_cluster": [
              "id",
              "size_gb",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_log_analytics_cluster_customer_managed_key": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_key_id",
              "log_analytics_cluster_id",
              "timeouts"
            ],
            "azurerm_log_analytics_data_export_rule": [
              "enabled",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "destination_resource_id",
              "name",
              "resource_group_name",
              "table_names",
              "workspace_resource_id",
              "timeouts"
            ],
            "azurerm_log_analytics_datasource_windows_event": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "event_log_name",
              "event_types",
              "name",
              "resource_group_name",
              "workspace_name",
              "timeouts"
            ],
            "azurerm_log_analytics_datasource_windows_performance_counter": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "counter_name",
              "instance_name",
              "interval_seconds",
              "name",
              "object_name",
              "resource_group_name",
              "workspace_name",
              "timeouts"
            ],
            "azurerm_log_analytics_linked_service": [
              "id",
              "read_access_id",
              "write_access_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "resource_group_name",
              "workspace_id",
              "timeouts"
            ],
            "azurerm_log_analytics_linked_storage_account": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_source_type",
              "resource_group_name",
              "storage_account_ids",
              "workspace_resource_id",
              "timeouts"
            ],
            "azurerm_log_analytics_query_pack": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_log_analytics_query_pack_query": [
              "additional_settings_json",
              "categories",
              "description",
              "id",
              "name",
              "resource_types",
              "solutions",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "body",
              "display_name",
              "query_pack_id",
              "timeouts"
            ],
            "azurerm_log_analytics_saved_search": [
              "function_alias",
              "function_parameters",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "category",
              "display_name",
              "log_analytics_workspace_id",
              "name",
              "query",
              "timeouts"
            ],
            "azurerm_log_analytics_solution": [
              "id",
              "tags",
              "plan.promotion_code",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "resource_group_name",
              "solution_name",
              "workspace_name",
              "workspace_resource_id",
              "plan.product",
              "plan.publisher",
              "plan",
              "timeouts"
            ],
            "azurerm_log_analytics_storage_insights": [
              "blob_container_names",
              "id",
              "table_names",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "storage_account_id",
              "storage_account_key",
              "workspace_id",
              "timeouts"
            ],
            "azurerm_log_analytics_workspace": [
              "allow_resource_only_permissions",
              "cmk_for_query_forced",
              "daily_quota_gb",
              "id",
              "internet_ingestion_enabled",
              "internet_query_enabled",
              "reservation_capacity_in_gb_per_day",
              "retention_in_days",
              "sku",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_logic_app_action_custom": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "body",
              "logic_app_id",
              "name",
              "timeouts"
            ],
            "azurerm_logic_app_action_http": [
              "body",
              "headers",
              "id",
              "queries",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "logic_app_id",
              "method",
              "name",
              "uri",
              "run_after.action_name",
              "run_after.action_result",
              "run_after",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account": [
              "id",
              "integration_service_environment_id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account_agreement": [
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "agreement_type",
              "content",
              "guest_partner_name",
              "host_partner_name",
              "integration_account_name",
              "name",
              "resource_group_name",
              "guest_identity.qualifier",
              "guest_identity.value",
              "host_identity.qualifier",
              "host_identity.value",
              "guest_identity",
              "host_identity",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account_assembly": [
              "assembly_version",
              "content",
              "content_link_uri",
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "assembly_name",
              "integration_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account_batch_configuration": [
              "id",
              "metadata",
              "release_criteria.batch_size",
              "release_criteria.message_count",
              "release_criteria.recurrence.end_time",
              "release_criteria.recurrence.start_time",
              "release_criteria.recurrence.time_zone",
              "release_criteria.recurrence.schedule.hours",
              "release_criteria.recurrence.schedule.minutes",
              "release_criteria.recurrence.schedule.month_days",
              "release_criteria.recurrence.schedule.week_days",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "batch_group_name",
              "integration_account_name",
              "name",
              "resource_group_name",
              "release_criteria.recurrence.frequency",
              "release_criteria.recurrence.interval",
              "release_criteria.recurrence.schedule.monthly.week",
              "release_criteria.recurrence.schedule.monthly.weekday",
              "release_criteria",
              "release_criteria.recurrence",
              "release_criteria.recurrence.schedule",
              "release_criteria.recurrence.schedule.monthly",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account_certificate": [
              "id",
              "metadata",
              "public_certificate",
              "key_vault_key.key_version",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "integration_account_name",
              "name",
              "resource_group_name",
              "key_vault_key.key_name",
              "key_vault_key.key_vault_id",
              "key_vault_key",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account_map": [
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "content",
              "integration_account_name",
              "map_type",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account_partner": [
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "integration_account_name",
              "name",
              "resource_group_name",
              "business_identity.qualifier",
              "business_identity.value",
              "business_identity",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account_schema": [
              "file_name",
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "content",
              "integration_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_logic_app_integration_account_session": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "content",
              "integration_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_logic_app_standard": [
              "app_settings",
              "bundle_version",
              "client_affinity_enabled",
              "client_certificate_mode",
              "enabled",
              "https_only",
              "id",
              "storage_account_share_name",
              "tags",
              "use_extension_bundle",
              "version",
              "virtual_network_subnet_id",
              "identity.identity_ids",
              "site_config.always_on",
              "site_config.app_scale_limit",
              "site_config.dotnet_framework_version",
              "site_config.elastic_instance_minimum",
              "site_config.ftps_state",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.linux_fx_version",
              "site_config.min_tls_version",
              "site_config.pre_warmed_instance_count",
              "site_config.runtime_scale_monitoring_enabled",
              "site_config.scm_ip_restriction",
              "site_config.scm_min_tls_version",
              "site_config.scm_type",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker_process",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.cors.support_credentials",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_plan_id",
              "location",
              "name",
              "resource_group_name",
              "storage_account_access_key",
              "storage_account_name",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "site_config.cors.allowed_origins",
              "connection_string",
              "identity",
              "site_config",
              "site_config.cors",
              "timeouts"
            ],
            "azurerm_logic_app_trigger_custom": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "body",
              "logic_app_id",
              "name",
              "timeouts"
            ],
            "azurerm_logic_app_trigger_http_request": [
              "id",
              "method",
              "relative_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "logic_app_id",
              "name",
              "schema",
              "timeouts"
            ],
            "azurerm_logic_app_trigger_recurrence": [
              "id",
              "start_time",
              "time_zone",
              "schedule.at_these_hours",
              "schedule.at_these_minutes",
              "schedule.on_these_days",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "frequency",
              "interval",
              "logic_app_id",
              "name",
              "schedule",
              "timeouts"
            ],
            "azurerm_logic_app_workflow": [
              "enabled",
              "id",
              "integration_service_environment_id",
              "logic_app_integration_account_id",
              "parameters",
              "tags",
              "workflow_parameters",
              "workflow_schema",
              "workflow_version",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "access_control.action.allowed_caller_ip_address_range",
              "access_control.content.allowed_caller_ip_address_range",
              "access_control.trigger.allowed_caller_ip_address_range",
              "access_control.trigger.open_authentication_policy.name",
              "access_control.trigger.open_authentication_policy.claim.name",
              "access_control.trigger.open_authentication_policy.claim.value",
              "access_control.workflow_management.allowed_caller_ip_address_range",
              "identity.type",
              "access_control",
              "access_control.action",
              "access_control.content",
              "access_control.trigger",
              "access_control.trigger.open_authentication_policy",
              "access_control.trigger.open_authentication_policy.claim",
              "access_control.workflow_management",
              "identity",
              "timeouts"
            ],
            "azurerm_logz_monitor": [
              "company_name",
              "enabled",
              "enterprise_app_id",
              "id",
              "tags",
              "plan.plan_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "plan.billing_cycle",
              "plan.effective_date",
              "plan.usage_type",
              "user.email",
              "user.first_name",
              "user.last_name",
              "user.phone_number",
              "plan",
              "timeouts",
              "user"
            ],
            "azurerm_logz_sub_account": [
              "enabled",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "logz_monitor_id",
              "name",
              "user.email",
              "user.first_name",
              "user.last_name",
              "user.phone_number",
              "timeouts",
              "user"
            ],
            "azurerm_logz_sub_account_tag_rule": [
              "id",
              "send_aad_logs",
              "send_activity_logs",
              "send_subscription_logs",
              "tag_filter.value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "logz_sub_account_id",
              "tag_filter.action",
              "tag_filter.name",
              "tag_filter",
              "timeouts"
            ],
            "azurerm_logz_tag_rule": [
              "id",
              "send_aad_logs",
              "send_activity_logs",
              "send_subscription_logs",
              "tag_filter.value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "logz_monitor_id",
              "tag_filter.action",
              "tag_filter.name",
              "tag_filter",
              "timeouts"
            ],
            "azurerm_machine_learning_compute_cluster": [
              "description",
              "id",
              "local_auth_enabled",
              "ssh_public_access_enabled",
              "subnet_resource_id",
              "tags",
              "identity.identity_ids",
              "ssh.admin_password",
              "ssh.key_value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "location",
              "machine_learning_workspace_id",
              "name",
              "vm_priority",
              "vm_size",
              "identity.type",
              "scale_settings.max_node_count",
              "scale_settings.min_node_count",
              "scale_settings.scale_down_nodes_after_idle_duration",
              "ssh.admin_username",
              "identity",
              "scale_settings",
              "ssh",
              "timeouts"
            ],
            "azurerm_machine_learning_compute_instance": [
              "authorization_type",
              "description",
              "id",
              "local_auth_enabled",
              "subnet_resource_id",
              "tags",
              "assign_to_user.object_id",
              "assign_to_user.tenant_id",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "location",
              "machine_learning_workspace_id",
              "name",
              "virtual_machine_size",
              "identity.type",
              "ssh.public_key",
              "assign_to_user",
              "identity",
              "ssh",
              "timeouts"
            ],
            "azurerm_machine_learning_inference_cluster": [
              "cluster_purpose",
              "description",
              "id",
              "tags",
              "identity.identity_ids",
              "ssl.cert",
              "ssl.cname",
              "ssl.key",
              "ssl.leaf_domain_label",
              "ssl.overwrite_existing_domain",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "kubernetes_cluster_id",
              "location",
              "machine_learning_workspace_id",
              "name",
              "identity.type",
              "identity",
              "ssl",
              "timeouts"
            ],
            "azurerm_machine_learning_synapse_spark": [
              "description",
              "id",
              "local_auth_enabled",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "location",
              "machine_learning_workspace_id",
              "name",
              "synapse_spark_pool_id",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_machine_learning_workspace": [
              "container_registry_id",
              "description",
              "friendly_name",
              "high_business_impact",
              "id",
              "image_build_compute_name",
              "primary_user_assigned_identity",
              "public_access_behind_virtual_network_enabled",
              "public_network_access_enabled",
              "sku_name",
              "tags",
              "v1_legacy_mode_enabled",
              "encryption.user_assigned_identity_id",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_insights_id",
              "key_vault_id",
              "location",
              "name",
              "resource_group_name",
              "storage_account_id",
              "encryption.key_id",
              "encryption.key_vault_id",
              "identity.type",
              "encryption",
              "identity",
              "timeouts"
            ],
            "azurerm_maintenance_assignment_dedicated_host": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "dedicated_host_id",
              "location",
              "maintenance_configuration_id",
              "timeouts"
            ],
            "azurerm_maintenance_assignment_virtual_machine": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "location",
              "maintenance_configuration_id",
              "virtual_machine_id",
              "timeouts"
            ],
            "azurerm_maintenance_assignment_virtual_machine_scale_set": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "location",
              "maintenance_configuration_id",
              "virtual_machine_scale_set_id",
              "timeouts"
            ],
            "azurerm_maintenance_configuration": [
              "id",
              "properties",
              "tags",
              "visibility",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "window.duration",
              "window.expiration_date_time",
              "window.recur_every",
              "location",
              "name",
              "resource_group_name",
              "scope",
              "window.start_date_time",
              "window.time_zone",
              "timeouts",
              "window"
            ],
            "azurerm_managed_application": [
              "application_definition_id",
              "id",
              "parameter_values",
              "parameters",
              "tags",
              "plan.promotion_code",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "kind",
              "location",
              "managed_resource_group_name",
              "name",
              "resource_group_name",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "plan.version",
              "plan",
              "timeouts"
            ],
            "azurerm_managed_application_definition": [
              "create_ui_definition",
              "description",
              "id",
              "main_template",
              "package_enabled",
              "package_file_uri",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "display_name",
              "location",
              "lock_level",
              "name",
              "resource_group_name",
              "authorization.role_definition_id",
              "authorization.service_principal_id",
              "authorization",
              "timeouts"
            ],
            "azurerm_managed_disk": [
              "disk_access_id",
              "disk_encryption_set_id",
              "disk_iops_read_only",
              "disk_iops_read_write",
              "disk_mbps_read_only",
              "disk_mbps_read_write",
              "disk_size_gb",
              "edge_zone",
              "gallery_image_reference_id",
              "hyper_v_generation",
              "id",
              "image_reference_id",
              "logical_sector_size",
              "max_shares",
              "network_access_policy",
              "on_demand_bursting_enabled",
              "os_type",
              "public_network_access_enabled",
              "secure_vm_disk_encryption_set_id",
              "security_type",
              "source_resource_id",
              "source_uri",
              "storage_account_id",
              "tags",
              "tier",
              "trusted_launch_enabled",
              "upload_size_bytes",
              "zone",
              "encryption_settings.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "create_option",
              "location",
              "name",
              "resource_group_name",
              "storage_account_type",
              "encryption_settings.disk_encryption_key.secret_url",
              "encryption_settings.disk_encryption_key.source_vault_id",
              "encryption_settings.key_encryption_key.key_url",
              "encryption_settings.key_encryption_key.source_vault_id",
              "encryption_settings",
              "encryption_settings.disk_encryption_key",
              "encryption_settings.key_encryption_key",
              "timeouts"
            ],
            "azurerm_managed_disk_sas_token": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "access_level",
              "duration_in_seconds",
              "managed_disk_id",
              "timeouts"
            ],
            "azurerm_management_group": [
              "display_name",
              "id",
              "name",
              "parent_management_group_id",
              "subscription_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "timeouts"
            ],
            "azurerm_management_group_policy_assignment": [
              "description",
              "display_name",
              "enforce",
              "id",
              "location",
              "metadata",
              "not_scopes",
              "parameters",
              "identity.identity_ids",
              "non_compliance_message.policy_definition_reference_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "management_group_id",
              "name",
              "policy_definition_id",
              "identity.type",
              "non_compliance_message.content",
              "identity",
              "non_compliance_message",
              "timeouts"
            ],
            "azurerm_management_group_policy_exemption": [
              "description",
              "display_name",
              "expires_on",
              "id",
              "metadata",
              "policy_definition_reference_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "exemption_category",
              "management_group_id",
              "name",
              "policy_assignment_id",
              "timeouts"
            ],
            "azurerm_management_group_policy_remediation": [
              "failure_percentage",
              "id",
              "location_filters",
              "parallel_deployments",
              "policy_definition_id",
              "policy_definition_reference_id",
              "resource_count",
              "resource_discovery_mode",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "management_group_id",
              "name",
              "policy_assignment_id",
              "timeouts"
            ],
            "azurerm_management_group_subscription_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "management_group_id",
              "subscription_id",
              "timeouts"
            ],
            "azurerm_management_group_template_deployment": [
              "debug_level",
              "id",
              "parameters_content",
              "tags",
              "template_content",
              "template_spec_version_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "management_group_id",
              "name",
              "timeouts"
            ],
            "azurerm_management_lock": [
              "id",
              "notes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "lock_level",
              "name",
              "scope",
              "timeouts"
            ],
            "azurerm_maps_account": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_maps_creator": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "maps_account_id",
              "name",
              "storage_units",
              "timeouts"
            ],
            "azurerm_mariadb_configuration": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "value",
              "timeouts"
            ],
            "azurerm_mariadb_database": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "charset",
              "collation",
              "name",
              "resource_group_name",
              "server_name",
              "timeouts"
            ],
            "azurerm_mariadb_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip_address",
              "name",
              "resource_group_name",
              "server_name",
              "start_ip_address",
              "timeouts"
            ],
            "azurerm_mariadb_server": [
              "administrator_login",
              "administrator_login_password",
              "auto_grow_enabled",
              "backup_retention_days",
              "create_mode",
              "creation_source_server_id",
              "geo_redundant_backup_enabled",
              "id",
              "public_network_access_enabled",
              "restore_point_in_time",
              "storage_mb",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "ssl_enforcement_enabled",
              "version",
              "timeouts"
            ],
            "azurerm_mariadb_virtual_network_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_marketplace_agreement": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "offer",
              "plan",
              "publisher",
              "timeouts"
            ],
            "azurerm_media_asset": [
              "alternate_id",
              "container",
              "description",
              "id",
              "storage_account_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "media_services_account_name",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_media_asset_filter": [
              "first_quality_bitrate",
              "id",
              "presentation_time_range.end_in_units",
              "presentation_time_range.force_end",
              "presentation_time_range.live_backoff_in_units",
              "presentation_time_range.presentation_window_in_units",
              "presentation_time_range.start_in_units",
              "presentation_time_range.unit_timescale_in_miliseconds",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "track_selection.condition.operation",
              "track_selection.condition.property",
              "track_selection.condition.value",
              "asset_id",
              "name",
              "presentation_time_range",
              "timeouts",
              "track_selection",
              "track_selection.condition"
            ],
            "azurerm_media_content_key_policy": [
              "description",
              "id",
              "policy_option.clear_key_configuration_enabled",
              "policy_option.open_restriction_enabled",
              "policy_option.widevine_configuration_template",
              "policy_option.fairplay_configuration.ask",
              "policy_option.fairplay_configuration.pfx",
              "policy_option.fairplay_configuration.pfx_password",
              "policy_option.fairplay_configuration.rental_and_lease_key_type",
              "policy_option.fairplay_configuration.rental_duration_seconds",
              "policy_option.fairplay_configuration.offline_rental_configuration.playback_duration_seconds",
              "policy_option.fairplay_configuration.offline_rental_configuration.storage_duration_seconds",
              "policy_option.playready_configuration_license.allow_test_devices",
              "policy_option.playready_configuration_license.begin_date",
              "policy_option.playready_configuration_license.content_key_location_from_header_enabled",
              "policy_option.playready_configuration_license.content_key_location_from_key_id",
              "policy_option.playready_configuration_license.content_type",
              "policy_option.playready_configuration_license.expiration_date",
              "policy_option.playready_configuration_license.grace_period",
              "policy_option.playready_configuration_license.license_type",
              "policy_option.playready_configuration_license.relative_begin_date",
              "policy_option.playready_configuration_license.relative_expiration_date",
              "policy_option.playready_configuration_license.play_right.agc_and_color_stripe_restriction",
              "policy_option.playready_configuration_license.play_right.allow_passing_video_content_to_unknown_output",
              "policy_option.playready_configuration_license.play_right.analog_video_opl",
              "policy_option.playready_configuration_license.play_right.compressed_digital_audio_opl",
              "policy_option.playready_configuration_license.play_right.digital_video_only_content_restriction",
              "policy_option.playready_configuration_license.play_right.first_play_expiration",
              "policy_option.playready_configuration_license.play_right.image_constraint_for_analog_component_video_restriction",
              "policy_option.playready_configuration_license.play_right.image_constraint_for_analog_computer_monitor_restriction",
              "policy_option.playready_configuration_license.play_right.scms_restriction",
              "policy_option.playready_configuration_license.play_right.uncompressed_digital_audio_opl",
              "policy_option.playready_configuration_license.play_right.uncompressed_digital_video_opl",
              "policy_option.token_restriction.audience",
              "policy_option.token_restriction.issuer",
              "policy_option.token_restriction.open_id_connect_discovery_document",
              "policy_option.token_restriction.primary_rsa_token_key_exponent",
              "policy_option.token_restriction.primary_rsa_token_key_modulus",
              "policy_option.token_restriction.primary_symmetric_token_key",
              "policy_option.token_restriction.primary_x509_token_key_raw",
              "policy_option.token_restriction.token_type",
              "policy_option.token_restriction.required_claim.type",
              "policy_option.token_restriction.required_claim.value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "media_services_account_name",
              "name",
              "resource_group_name",
              "policy_option.name",
              "policy_option",
              "policy_option.fairplay_configuration",
              "policy_option.fairplay_configuration.offline_rental_configuration",
              "policy_option.playready_configuration_license",
              "policy_option.playready_configuration_license.play_right",
              "policy_option.token_restriction",
              "policy_option.token_restriction.required_claim",
              "timeouts"
            ],
            "azurerm_media_job": [
              "description",
              "id",
              "priority",
              "input_asset.label",
              "output_asset.label",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "media_services_account_name",
              "name",
              "resource_group_name",
              "transform_name",
              "input_asset.name",
              "output_asset.name",
              "input_asset",
              "output_asset",
              "timeouts"
            ],
            "azurerm_media_live_event": [
              "auto_start_enabled",
              "description",
              "hostname_prefix",
              "id",
              "tags",
              "transcription_languages",
              "use_static_hostname",
              "cross_site_access_policy.client_access_policy",
              "cross_site_access_policy.cross_domain_policy",
              "encoding.key_frame_interval",
              "encoding.preset_name",
              "encoding.stretch_mode",
              "encoding.type",
              "input.access_token",
              "input.key_frame_interval_duration",
              "input.streaming_protocol",
              "input.ip_access_control_allow.address",
              "input.ip_access_control_allow.name",
              "input.ip_access_control_allow.subnet_prefix_length",
              "preview.alternative_media_id",
              "preview.preview_locator",
              "preview.streaming_policy_name",
              "preview.ip_access_control_allow.address",
              "preview.ip_access_control_allow.name",
              "preview.ip_access_control_allow.subnet_prefix_length",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "media_services_account_name",
              "name",
              "resource_group_name",
              "cross_site_access_policy",
              "encoding",
              "input",
              "input.ip_access_control_allow",
              "preview",
              "preview.ip_access_control_allow",
              "timeouts"
            ],
            "azurerm_media_live_event_output": [
              "description",
              "hls_fragments_per_ts_segment",
              "id",
              "manifest_name",
              "output_snap_time_in_seconds",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "archive_window_duration",
              "asset_name",
              "live_event_id",
              "name",
              "timeouts"
            ],
            "azurerm_media_services_account": [
              "id",
              "storage_authentication_type",
              "tags",
              "identity.identity_ids",
              "key_delivery_access_control.default_action",
              "key_delivery_access_control.ip_allow_list",
              "storage_account.is_primary",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "storage_account.id",
              "identity",
              "key_delivery_access_control",
              "storage_account",
              "timeouts"
            ],
            "azurerm_media_streaming_endpoint": [
              "auto_start_enabled",
              "cdn_enabled",
              "cdn_profile",
              "cdn_provider",
              "custom_host_names",
              "description",
              "id",
              "max_cache_age_seconds",
              "tags",
              "access_control.akamai_signature_header_authentication_key.base64_key",
              "access_control.akamai_signature_header_authentication_key.expiration",
              "access_control.akamai_signature_header_authentication_key.identifier",
              "access_control.ip_allow.address",
              "access_control.ip_allow.name",
              "access_control.ip_allow.subnet_prefix_length",
              "cross_site_access_policy.client_access_policy",
              "cross_site_access_policy.cross_domain_policy",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "media_services_account_name",
              "name",
              "resource_group_name",
              "scale_units",
              "access_control",
              "access_control.akamai_signature_header_authentication_key",
              "access_control.ip_allow",
              "cross_site_access_policy",
              "timeouts"
            ],
            "azurerm_media_streaming_locator": [
              "alternative_media_id",
              "default_content_key_policy_name",
              "end_time",
              "id",
              "start_time",
              "streaming_locator_id",
              "content_key.content_key_id",
              "content_key.label_reference_in_streaming_policy",
              "content_key.policy_name",
              "content_key.type",
              "content_key.value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "asset_name",
              "media_services_account_name",
              "name",
              "resource_group_name",
              "streaming_policy_name",
              "content_key",
              "timeouts"
            ],
            "azurerm_media_streaming_policy": [
              "default_content_key_policy_name",
              "id",
              "common_encryption_cbcs.default_content_key.label",
              "common_encryption_cbcs.default_content_key.policy_name",
              "common_encryption_cbcs.drm_fairplay.allow_persistent_license",
              "common_encryption_cbcs.drm_fairplay.custom_license_acquisition_url_template",
              "common_encryption_cbcs.enabled_protocols.dash",
              "common_encryption_cbcs.enabled_protocols.download",
              "common_encryption_cbcs.enabled_protocols.hls",
              "common_encryption_cbcs.enabled_protocols.smooth_streaming",
              "common_encryption_cenc.drm_widevine_custom_license_acquisition_url_template",
              "common_encryption_cenc.default_content_key.label",
              "common_encryption_cenc.default_content_key.policy_name",
              "common_encryption_cenc.drm_playready.custom_attributes",
              "common_encryption_cenc.drm_playready.custom_license_acquisition_url_template",
              "common_encryption_cenc.enabled_protocols.dash",
              "common_encryption_cenc.enabled_protocols.download",
              "common_encryption_cenc.enabled_protocols.hls",
              "common_encryption_cenc.enabled_protocols.smooth_streaming",
              "no_encryption_enabled_protocols.dash",
              "no_encryption_enabled_protocols.download",
              "no_encryption_enabled_protocols.hls",
              "no_encryption_enabled_protocols.smooth_streaming",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "media_services_account_name",
              "name",
              "resource_group_name",
              "common_encryption_cbcs",
              "common_encryption_cbcs.default_content_key",
              "common_encryption_cbcs.drm_fairplay",
              "common_encryption_cbcs.enabled_protocols",
              "common_encryption_cenc",
              "common_encryption_cenc.default_content_key",
              "common_encryption_cenc.drm_playready",
              "common_encryption_cenc.enabled_protocols",
              "no_encryption_enabled_protocols",
              "timeouts"
            ],
            "azurerm_media_transform": [
              "description",
              "id",
              "output.on_error_action",
              "output.relative_priority",
              "output.audio_analyzer_preset.audio_analysis_mode",
              "output.audio_analyzer_preset.audio_language",
              "output.face_detector_preset.analysis_resolution",
              "output.video_analyzer_preset.audio_analysis_mode",
              "output.video_analyzer_preset.audio_language",
              "output.video_analyzer_preset.insights_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "media_services_account_name",
              "name",
              "resource_group_name",
              "output.builtin_preset.preset_name",
              "output",
              "output.audio_analyzer_preset",
              "output.builtin_preset",
              "output.face_detector_preset",
              "output.video_analyzer_preset",
              "timeouts"
            ],
            "azurerm_monitor_aad_diagnostic_setting": [
              "eventhub_authorization_rule_id",
              "eventhub_name",
              "id",
              "log_analytics_workspace_id",
              "storage_account_id",
              "log.enabled",
              "log.retention_policy.days",
              "log.retention_policy.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "log.category",
              "log",
              "log.retention_policy",
              "timeouts"
            ],
            "azurerm_monitor_action_group": [
              "enabled",
              "id",
              "tags",
              "arm_role_receiver.use_common_alert_schema",
              "automation_runbook_receiver.use_common_alert_schema",
              "azure_function_receiver.use_common_alert_schema",
              "email_receiver.use_common_alert_schema",
              "event_hub_receiver.event_hub_id",
              "event_hub_receiver.event_hub_name",
              "event_hub_receiver.event_hub_namespace",
              "event_hub_receiver.subscription_id",
              "event_hub_receiver.tenant_id",
              "event_hub_receiver.use_common_alert_schema",
              "logic_app_receiver.use_common_alert_schema",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "webhook_receiver.use_common_alert_schema",
              "webhook_receiver.aad_auth.identifier_uri",
              "webhook_receiver.aad_auth.tenant_id",
              "name",
              "resource_group_name",
              "short_name",
              "arm_role_receiver.name",
              "arm_role_receiver.role_id",
              "automation_runbook_receiver.automation_account_id",
              "automation_runbook_receiver.is_global_runbook",
              "automation_runbook_receiver.name",
              "automation_runbook_receiver.runbook_name",
              "automation_runbook_receiver.service_uri",
              "automation_runbook_receiver.webhook_resource_id",
              "azure_app_push_receiver.email_address",
              "azure_app_push_receiver.name",
              "azure_function_receiver.function_app_resource_id",
              "azure_function_receiver.function_name",
              "azure_function_receiver.http_trigger_url",
              "azure_function_receiver.name",
              "email_receiver.email_address",
              "email_receiver.name",
              "event_hub_receiver.name",
              "itsm_receiver.connection_id",
              "itsm_receiver.name",
              "itsm_receiver.region",
              "itsm_receiver.ticket_configuration",
              "itsm_receiver.workspace_id",
              "logic_app_receiver.callback_url",
              "logic_app_receiver.name",
              "logic_app_receiver.resource_id",
              "sms_receiver.country_code",
              "sms_receiver.name",
              "sms_receiver.phone_number",
              "voice_receiver.country_code",
              "voice_receiver.name",
              "voice_receiver.phone_number",
              "webhook_receiver.name",
              "webhook_receiver.service_uri",
              "webhook_receiver.aad_auth.object_id",
              "arm_role_receiver",
              "automation_runbook_receiver",
              "azure_app_push_receiver",
              "azure_function_receiver",
              "email_receiver",
              "event_hub_receiver",
              "itsm_receiver",
              "logic_app_receiver",
              "sms_receiver",
              "timeouts",
              "voice_receiver",
              "webhook_receiver",
              "webhook_receiver.aad_auth"
            ],
            "azurerm_monitor_action_rule_action_group": [
              "description",
              "enabled",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "action_group_id",
              "name",
              "resource_group_name",
              "condition.alert_context.operator",
              "condition.alert_context.values",
              "condition.alert_rule_id.operator",
              "condition.alert_rule_id.values",
              "condition.description.operator",
              "condition.description.values",
              "condition.monitor.operator",
              "condition.monitor.values",
              "condition.monitor_service.operator",
              "condition.monitor_service.values",
              "condition.severity.operator",
              "condition.severity.values",
              "condition.target_resource_type.operator",
              "condition.target_resource_type.values",
              "scope.resource_ids",
              "scope.type",
              "condition",
              "condition.alert_context",
              "condition.alert_rule_id",
              "condition.description",
              "condition.monitor",
              "condition.monitor_service",
              "condition.severity",
              "condition.target_resource_type",
              "scope",
              "timeouts"
            ],
            "azurerm_monitor_action_rule_suppression": [
              "description",
              "enabled",
              "id",
              "tags",
              "suppression.schedule.recurrence_monthly",
              "suppression.schedule.recurrence_weekly",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "condition.alert_context.operator",
              "condition.alert_context.values",
              "condition.alert_rule_id.operator",
              "condition.alert_rule_id.values",
              "condition.description.operator",
              "condition.description.values",
              "condition.monitor.operator",
              "condition.monitor.values",
              "condition.monitor_service.operator",
              "condition.monitor_service.values",
              "condition.severity.operator",
              "condition.severity.values",
              "condition.target_resource_type.operator",
              "condition.target_resource_type.values",
              "scope.resource_ids",
              "scope.type",
              "suppression.recurrence_type",
              "suppression.schedule.end_date_utc",
              "suppression.schedule.start_date_utc",
              "condition",
              "condition.alert_context",
              "condition.alert_rule_id",
              "condition.description",
              "condition.monitor",
              "condition.monitor_service",
              "condition.severity",
              "condition.target_resource_type",
              "scope",
              "suppression",
              "suppression.schedule",
              "timeouts"
            ],
            "azurerm_monitor_activity_log_alert": [
              "description",
              "enabled",
              "id",
              "tags",
              "action.webhook_properties",
              "criteria.caller",
              "criteria.level",
              "criteria.operation_name",
              "criteria.recommendation_category",
              "criteria.recommendation_impact",
              "criteria.recommendation_type",
              "criteria.resource_group",
              "criteria.resource_id",
              "criteria.resource_provider",
              "criteria.resource_type",
              "criteria.status",
              "criteria.sub_status",
              "criteria.resource_health.current",
              "criteria.resource_health.previous",
              "criteria.resource_health.reason",
              "criteria.service_health.events",
              "criteria.service_health.locations",
              "criteria.service_health.services",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "scopes",
              "action.action_group_id",
              "criteria.category",
              "action",
              "criteria",
              "criteria.resource_health",
              "criteria.service_health",
              "timeouts"
            ],
            "azurerm_monitor_alert_processing_rule_action_group": [
              "description",
              "enabled",
              "id",
              "tags",
              "schedule.effective_from",
              "schedule.effective_until",
              "schedule.time_zone",
              "schedule.recurrence.monthly.end_time",
              "schedule.recurrence.monthly.start_time",
              "schedule.recurrence.weekly.end_time",
              "schedule.recurrence.weekly.start_time",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "add_action_group_ids",
              "name",
              "resource_group_name",
              "scopes",
              "condition.alert_context.operator",
              "condition.alert_context.values",
              "condition.alert_rule_id.operator",
              "condition.alert_rule_id.values",
              "condition.alert_rule_name.operator",
              "condition.alert_rule_name.values",
              "condition.description.operator",
              "condition.description.values",
              "condition.monitor_condition.operator",
              "condition.monitor_condition.values",
              "condition.monitor_service.operator",
              "condition.monitor_service.values",
              "condition.severity.operator",
              "condition.severity.values",
              "condition.signal_type.operator",
              "condition.signal_type.values",
              "condition.target_resource.operator",
              "condition.target_resource.values",
              "condition.target_resource_group.operator",
              "condition.target_resource_group.values",
              "condition.target_resource_type.operator",
              "condition.target_resource_type.values",
              "schedule.recurrence.daily.end_time",
              "schedule.recurrence.daily.start_time",
              "schedule.recurrence.monthly.days_of_month",
              "schedule.recurrence.weekly.days_of_week",
              "condition",
              "condition.alert_context",
              "condition.alert_rule_id",
              "condition.alert_rule_name",
              "condition.description",
              "condition.monitor_condition",
              "condition.monitor_service",
              "condition.severity",
              "condition.signal_type",
              "condition.target_resource",
              "condition.target_resource_group",
              "condition.target_resource_type",
              "schedule",
              "schedule.recurrence",
              "schedule.recurrence.daily",
              "schedule.recurrence.monthly",
              "schedule.recurrence.weekly",
              "timeouts"
            ],
            "azurerm_monitor_alert_processing_rule_suppression": [
              "description",
              "enabled",
              "id",
              "tags",
              "schedule.effective_from",
              "schedule.effective_until",
              "schedule.time_zone",
              "schedule.recurrence.monthly.end_time",
              "schedule.recurrence.monthly.start_time",
              "schedule.recurrence.weekly.end_time",
              "schedule.recurrence.weekly.start_time",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "scopes",
              "condition.alert_context.operator",
              "condition.alert_context.values",
              "condition.alert_rule_id.operator",
              "condition.alert_rule_id.values",
              "condition.alert_rule_name.operator",
              "condition.alert_rule_name.values",
              "condition.description.operator",
              "condition.description.values",
              "condition.monitor_condition.operator",
              "condition.monitor_condition.values",
              "condition.monitor_service.operator",
              "condition.monitor_service.values",
              "condition.severity.operator",
              "condition.severity.values",
              "condition.signal_type.operator",
              "condition.signal_type.values",
              "condition.target_resource.operator",
              "condition.target_resource.values",
              "condition.target_resource_group.operator",
              "condition.target_resource_group.values",
              "condition.target_resource_type.operator",
              "condition.target_resource_type.values",
              "schedule.recurrence.daily.end_time",
              "schedule.recurrence.daily.start_time",
              "schedule.recurrence.monthly.days_of_month",
              "schedule.recurrence.weekly.days_of_week",
              "condition",
              "condition.alert_context",
              "condition.alert_rule_id",
              "condition.alert_rule_name",
              "condition.description",
              "condition.monitor_condition",
              "condition.monitor_service",
              "condition.severity",
              "condition.signal_type",
              "condition.target_resource",
              "condition.target_resource_group",
              "condition.target_resource_type",
              "schedule",
              "schedule.recurrence",
              "schedule.recurrence.daily",
              "schedule.recurrence.monthly",
              "schedule.recurrence.weekly",
              "timeouts"
            ],
            "azurerm_monitor_autoscale_setting": [
              "enabled",
              "id",
              "tags",
              "notification.email.custom_emails",
              "notification.email.send_to_subscription_administrator",
              "notification.email.send_to_subscription_co_administrator",
              "notification.webhook.properties",
              "profile.fixed_date.timezone",
              "profile.recurrence.timezone",
              "profile.rule.metric_trigger.divide_by_instance_count",
              "profile.rule.metric_trigger.metric_namespace",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "target_resource_id",
              "notification.webhook.service_uri",
              "profile.name",
              "profile.capacity.default",
              "profile.capacity.maximum",
              "profile.capacity.minimum",
              "profile.fixed_date.end",
              "profile.fixed_date.start",
              "profile.recurrence.days",
              "profile.recurrence.hours",
              "profile.recurrence.minutes",
              "profile.rule.metric_trigger.metric_name",
              "profile.rule.metric_trigger.metric_resource_id",
              "profile.rule.metric_trigger.operator",
              "profile.rule.metric_trigger.statistic",
              "profile.rule.metric_trigger.threshold",
              "profile.rule.metric_trigger.time_aggregation",
              "profile.rule.metric_trigger.time_grain",
              "profile.rule.metric_trigger.time_window",
              "profile.rule.metric_trigger.dimensions.name",
              "profile.rule.metric_trigger.dimensions.operator",
              "profile.rule.metric_trigger.dimensions.values",
              "profile.rule.scale_action.cooldown",
              "profile.rule.scale_action.direction",
              "profile.rule.scale_action.type",
              "profile.rule.scale_action.value",
              "notification",
              "notification.email",
              "notification.webhook",
              "profile",
              "profile.capacity",
              "profile.fixed_date",
              "profile.recurrence",
              "profile.rule",
              "profile.rule.metric_trigger",
              "profile.rule.metric_trigger.dimensions",
              "profile.rule.scale_action",
              "timeouts"
            ],
            "azurerm_monitor_data_collection_endpoint": [
              "description",
              "id",
              "kind",
              "public_network_access_enabled",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_monitor_data_collection_rule": [
              "description",
              "id",
              "kind",
              "tags",
              "data_sources.extension.extension_json",
              "data_sources.extension.input_data_sources",
              "data_sources.syslog.streams",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "data_flow.destinations",
              "data_flow.streams",
              "data_sources.extension.extension_name",
              "data_sources.extension.name",
              "data_sources.extension.streams",
              "data_sources.performance_counter.counter_specifiers",
              "data_sources.performance_counter.name",
              "data_sources.performance_counter.sampling_frequency_in_seconds",
              "data_sources.performance_counter.streams",
              "data_sources.syslog.facility_names",
              "data_sources.syslog.log_levels",
              "data_sources.syslog.name",
              "data_sources.windows_event_log.name",
              "data_sources.windows_event_log.streams",
              "data_sources.windows_event_log.x_path_queries",
              "destinations.azure_monitor_metrics.name",
              "destinations.log_analytics.name",
              "destinations.log_analytics.workspace_resource_id",
              "data_flow",
              "data_sources",
              "data_sources.extension",
              "data_sources.performance_counter",
              "data_sources.syslog",
              "data_sources.windows_event_log",
              "destinations",
              "destinations.azure_monitor_metrics",
              "destinations.log_analytics",
              "timeouts"
            ],
            "azurerm_monitor_data_collection_rule_association": [
              "data_collection_endpoint_id",
              "data_collection_rule_id",
              "description",
              "id",
              "name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "target_resource_id",
              "timeouts"
            ],
            "azurerm_monitor_diagnostic_setting": [
              "eventhub_authorization_rule_id",
              "eventhub_name",
              "id",
              "log_analytics_destination_type",
              "log_analytics_workspace_id",
              "partner_solution_id",
              "storage_account_id",
              "log.category",
              "log.category_group",
              "log.enabled",
              "log.retention_policy.days",
              "metric.enabled",
              "metric.retention_policy.days",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "target_resource_id",
              "log.retention_policy.enabled",
              "metric.category",
              "metric.retention_policy.enabled",
              "log",
              "log.retention_policy",
              "metric",
              "metric.retention_policy",
              "timeouts"
            ],
            "azurerm_monitor_log_profile": [
              "id",
              "servicebus_rule_id",
              "storage_account_id",
              "retention_policy.days",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "categories",
              "locations",
              "name",
              "retention_policy.enabled",
              "retention_policy",
              "timeouts"
            ],
            "azurerm_monitor_metric_alert": [
              "auto_mitigate",
              "description",
              "enabled",
              "frequency",
              "id",
              "severity",
              "tags",
              "target_resource_location",
              "target_resource_type",
              "window_size",
              "action.webhook_properties",
              "criteria.skip_metric_validation",
              "dynamic_criteria.evaluation_failure_count",
              "dynamic_criteria.evaluation_total_count",
              "dynamic_criteria.ignore_data_before",
              "dynamic_criteria.skip_metric_validation",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "scopes",
              "action.action_group_id",
              "application_insights_web_test_location_availability_criteria.component_id",
              "application_insights_web_test_location_availability_criteria.failed_location_count",
              "application_insights_web_test_location_availability_criteria.web_test_id",
              "criteria.aggregation",
              "criteria.metric_name",
              "criteria.metric_namespace",
              "criteria.operator",
              "criteria.threshold",
              "criteria.dimension.name",
              "criteria.dimension.operator",
              "criteria.dimension.values",
              "dynamic_criteria.aggregation",
              "dynamic_criteria.alert_sensitivity",
              "dynamic_criteria.metric_name",
              "dynamic_criteria.metric_namespace",
              "dynamic_criteria.operator",
              "dynamic_criteria.dimension.name",
              "dynamic_criteria.dimension.operator",
              "dynamic_criteria.dimension.values",
              "action",
              "application_insights_web_test_location_availability_criteria",
              "criteria",
              "criteria.dimension",
              "dynamic_criteria",
              "dynamic_criteria.dimension",
              "timeouts"
            ],
            "azurerm_monitor_private_link_scope": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_monitor_private_link_scoped_service": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "linked_resource_id",
              "name",
              "resource_group_name",
              "scope_name",
              "timeouts"
            ],
            "azurerm_monitor_scheduled_query_rules_alert": [
              "authorized_resource_ids",
              "auto_mitigation_enabled",
              "description",
              "enabled",
              "id",
              "query_type",
              "severity",
              "tags",
              "throttling",
              "action.custom_webhook_payload",
              "action.email_subject",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_source_id",
              "frequency",
              "location",
              "name",
              "query",
              "resource_group_name",
              "time_window",
              "action.action_group",
              "trigger.operator",
              "trigger.threshold",
              "trigger.metric_trigger.metric_column",
              "trigger.metric_trigger.metric_trigger_type",
              "trigger.metric_trigger.operator",
              "trigger.metric_trigger.threshold",
              "action",
              "timeouts",
              "trigger",
              "trigger.metric_trigger"
            ],
            "azurerm_monitor_scheduled_query_rules_alert_v2": [
              "auto_mitigation_enabled",
              "description",
              "display_name",
              "enabled",
              "evaluation_frequency",
              "id",
              "mute_actions_after_alert_duration",
              "query_time_range_override",
              "skip_query_validation",
              "tags",
              "target_resource_types",
              "workspace_alerts_storage_enabled",
              "action.action_groups",
              "action.custom_properties",
              "criteria.metric_measure_column",
              "criteria.resource_id_column",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "scopes",
              "severity",
              "window_duration",
              "criteria.operator",
              "criteria.query",
              "criteria.threshold",
              "criteria.time_aggregation_method",
              "criteria.dimension.name",
              "criteria.dimension.operator",
              "criteria.dimension.values",
              "criteria.failing_periods.minimum_failing_periods_to_trigger_alert",
              "criteria.failing_periods.number_of_evaluation_periods",
              "action",
              "criteria",
              "criteria.dimension",
              "criteria.failing_periods",
              "timeouts"
            ],
            "azurerm_monitor_scheduled_query_rules_log": [
              "authorized_resource_ids",
              "description",
              "enabled",
              "id",
              "tags",
              "criteria.dimension.operator",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "data_source_id",
              "location",
              "name",
              "resource_group_name",
              "criteria.metric_name",
              "criteria.dimension.name",
              "criteria.dimension.values",
              "criteria",
              "criteria.dimension",
              "timeouts"
            ],
            "azurerm_monitor_smart_detector_alert_rule": [
              "description",
              "enabled",
              "id",
              "tags",
              "throttling_duration",
              "action_group.email_subject",
              "action_group.webhook_payload",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "detector_type",
              "frequency",
              "name",
              "resource_group_name",
              "scope_resource_ids",
              "severity",
              "action_group.ids",
              "action_group",
              "timeouts"
            ],
            "azurerm_mssql_database": [
              "auto_pause_delay_in_minutes",
              "collation",
              "create_mode",
              "creation_source_database_id",
              "elastic_pool_id",
              "geo_backup_enabled",
              "id",
              "ledger_enabled",
              "license_type",
              "maintenance_configuration_name",
              "max_size_gb",
              "min_capacity",
              "read_replica_count",
              "read_scale",
              "recover_database_id",
              "restore_dropped_database_id",
              "restore_point_in_time",
              "sample_name",
              "sku_name",
              "storage_account_type",
              "tags",
              "transparent_data_encryption_enabled",
              "zone_redundant",
              "import.storage_account_id",
              "long_term_retention_policy.monthly_retention",
              "long_term_retention_policy.week_of_year",
              "long_term_retention_policy.weekly_retention",
              "long_term_retention_policy.yearly_retention",
              "short_term_retention_policy.backup_interval_in_hours",
              "threat_detection_policy.disabled_alerts",
              "threat_detection_policy.email_account_admins",
              "threat_detection_policy.email_addresses",
              "threat_detection_policy.retention_days",
              "threat_detection_policy.state",
              "threat_detection_policy.storage_account_access_key",
              "threat_detection_policy.storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "server_id",
              "import.administrator_login",
              "import.administrator_login_password",
              "import.authentication_type",
              "import.storage_key",
              "import.storage_key_type",
              "import.storage_uri",
              "short_term_retention_policy.retention_days",
              "import",
              "long_term_retention_policy",
              "short_term_retention_policy",
              "threat_detection_policy",
              "timeouts"
            ],
            "azurerm_mssql_database_extended_auditing_policy": [
              "enabled",
              "id",
              "log_monitoring_enabled",
              "retention_in_days",
              "storage_account_access_key",
              "storage_account_access_key_is_secondary",
              "storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "database_id",
              "timeouts"
            ],
            "azurerm_mssql_database_vulnerability_assessment_rule_baseline": [
              "baseline_name",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "database_name",
              "rule_id",
              "server_vulnerability_assessment_id",
              "baseline_result.result",
              "baseline_result",
              "timeouts"
            ],
            "azurerm_mssql_elasticpool": [
              "id",
              "license_type",
              "maintenance_configuration_name",
              "max_size_bytes",
              "max_size_gb",
              "tags",
              "zone_redundant",
              "sku.family",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "server_name",
              "per_database_settings.max_capacity",
              "per_database_settings.min_capacity",
              "sku.capacity",
              "sku.name",
              "sku.tier",
              "per_database_settings",
              "sku",
              "timeouts"
            ],
            "azurerm_mssql_failover_group": [
              "databases",
              "id",
              "readonly_endpoint_failover_policy_enabled",
              "tags",
              "read_write_endpoint_failover_policy.grace_minutes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "server_id",
              "partner_server.id",
              "read_write_endpoint_failover_policy.mode",
              "partner_server",
              "read_write_endpoint_failover_policy",
              "timeouts"
            ],
            "azurerm_mssql_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip_address",
              "name",
              "server_id",
              "start_ip_address",
              "timeouts"
            ],
            "azurerm_mssql_job_agent": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "database_id",
              "location",
              "name",
              "timeouts"
            ],
            "azurerm_mssql_job_credential": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "job_agent_id",
              "name",
              "password",
              "username",
              "timeouts"
            ],
            "azurerm_mssql_managed_database": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "managed_instance_id",
              "name",
              "timeouts"
            ],
            "azurerm_mssql_managed_instance": [
              "collation",
              "dns_zone_partner_id",
              "id",
              "maintenance_configuration_name",
              "minimum_tls_version",
              "proxy_override",
              "public_data_endpoint_enabled",
              "storage_account_type",
              "tags",
              "timezone_id",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "administrator_login",
              "administrator_login_password",
              "license_type",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "storage_size_in_gb",
              "subnet_id",
              "vcores",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_mssql_managed_instance_active_directory_administrator": [
              "azuread_authentication_only",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "login_username",
              "managed_instance_id",
              "object_id",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_mssql_managed_instance_failover_group": [
              "id",
              "readonly_endpoint_failover_policy_enabled",
              "read_write_endpoint_failover_policy.grace_minutes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "managed_instance_id",
              "name",
              "partner_managed_instance_id",
              "read_write_endpoint_failover_policy.mode",
              "read_write_endpoint_failover_policy",
              "timeouts"
            ],
            "azurerm_mssql_managed_instance_security_alert_policy": [
              "disabled_alerts",
              "email_account_admins_enabled",
              "email_addresses",
              "enabled",
              "id",
              "retention_days",
              "storage_account_access_key",
              "storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "managed_instance_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_mssql_managed_instance_transparent_data_encryption": [
              "auto_rotation_enabled",
              "id",
              "key_vault_key_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "managed_instance_id",
              "timeouts"
            ],
            "azurerm_mssql_managed_instance_vulnerability_assessment": [
              "id",
              "storage_account_access_key",
              "storage_container_sas_key",
              "recurring_scans.email_subscription_admins",
              "recurring_scans.emails",
              "recurring_scans.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "managed_instance_id",
              "storage_container_path",
              "recurring_scans",
              "timeouts"
            ],
            "azurerm_mssql_outbound_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "server_id",
              "timeouts"
            ],
            "azurerm_mssql_server": [
              "administrator_login",
              "administrator_login_password",
              "connection_policy",
              "id",
              "minimum_tls_version",
              "outbound_network_restriction_enabled",
              "primary_user_assigned_identity_id",
              "public_network_access_enabled",
              "tags",
              "azuread_administrator.azuread_authentication_only",
              "azuread_administrator.tenant_id",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "version",
              "azuread_administrator.login_username",
              "azuread_administrator.object_id",
              "identity.type",
              "azuread_administrator",
              "identity",
              "timeouts"
            ],
            "azurerm_mssql_server_dns_alias": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "mssql_server_id",
              "name",
              "timeouts"
            ],
            "azurerm_mssql_server_extended_auditing_policy": [
              "enabled",
              "id",
              "log_monitoring_enabled",
              "retention_in_days",
              "storage_account_access_key",
              "storage_account_access_key_is_secondary",
              "storage_account_subscription_id",
              "storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "server_id",
              "timeouts"
            ],
            "azurerm_mssql_server_microsoft_support_auditing_policy": [
              "blob_storage_endpoint",
              "enabled",
              "id",
              "log_monitoring_enabled",
              "storage_account_access_key",
              "storage_account_subscription_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "server_id",
              "timeouts"
            ],
            "azurerm_mssql_server_security_alert_policy": [
              "disabled_alerts",
              "email_account_admins",
              "email_addresses",
              "id",
              "retention_days",
              "storage_account_access_key",
              "storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "resource_group_name",
              "server_name",
              "state",
              "timeouts"
            ],
            "azurerm_mssql_server_transparent_data_encryption": [
              "auto_rotation_enabled",
              "id",
              "key_vault_key_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "server_id",
              "timeouts"
            ],
            "azurerm_mssql_server_vulnerability_assessment": [
              "id",
              "storage_account_access_key",
              "storage_container_sas_key",
              "recurring_scans.email_subscription_admins",
              "recurring_scans.emails",
              "recurring_scans.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "server_security_alert_policy_id",
              "storage_container_path",
              "recurring_scans",
              "timeouts"
            ],
            "azurerm_mssql_virtual_machine": [
              "id",
              "r_services_enabled",
              "sql_connectivity_port",
              "sql_connectivity_type",
              "sql_connectivity_update_password",
              "sql_connectivity_update_username",
              "tags",
              "assessment.enabled",
              "assessment.run_immediately",
              "assessment.schedule.monthly_occurrence",
              "assessment.schedule.weekly_interval",
              "auto_backup.encryption_enabled",
              "auto_backup.encryption_password",
              "auto_backup.system_databases_backup_enabled",
              "auto_backup.manual_schedule.days_of_week",
              "sql_instance.adhoc_workloads_optimization_enabled",
              "sql_instance.collation",
              "sql_instance.instant_file_initialization_enabled",
              "sql_instance.lock_pages_in_memory_enabled",
              "sql_instance.max_dop",
              "sql_instance.max_server_memory_mb",
              "sql_instance.min_server_memory_mb",
              "storage_configuration.system_db_on_data_disk_enabled",
              "storage_configuration.temp_db_settings.data_file_count",
              "storage_configuration.temp_db_settings.data_file_growth_in_mb",
              "storage_configuration.temp_db_settings.data_file_size_mb",
              "storage_configuration.temp_db_settings.log_file_growth_mb",
              "storage_configuration.temp_db_settings.log_file_size_mb",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "sql_license_type",
              "virtual_machine_id",
              "assessment.schedule.day_of_week",
              "assessment.schedule.start_time",
              "auto_backup.retention_period_in_days",
              "auto_backup.storage_account_access_key",
              "auto_backup.storage_blob_endpoint",
              "auto_backup.manual_schedule.full_backup_frequency",
              "auto_backup.manual_schedule.full_backup_start_hour",
              "auto_backup.manual_schedule.full_backup_window_in_hours",
              "auto_backup.manual_schedule.log_backup_frequency_in_minutes",
              "auto_patching.day_of_week",
              "auto_patching.maintenance_window_duration_in_minutes",
              "auto_patching.maintenance_window_starting_hour",
              "key_vault_credential.key_vault_url",
              "key_vault_credential.name",
              "key_vault_credential.service_principal_name",
              "key_vault_credential.service_principal_secret",
              "storage_configuration.disk_type",
              "storage_configuration.storage_workload_type",
              "storage_configuration.data_settings.default_file_path",
              "storage_configuration.data_settings.luns",
              "storage_configuration.log_settings.default_file_path",
              "storage_configuration.log_settings.luns",
              "storage_configuration.temp_db_settings.default_file_path",
              "storage_configuration.temp_db_settings.luns",
              "assessment",
              "assessment.schedule",
              "auto_backup",
              "auto_backup.manual_schedule",
              "auto_patching",
              "key_vault_credential",
              "sql_instance",
              "storage_configuration",
              "storage_configuration.data_settings",
              "storage_configuration.log_settings",
              "storage_configuration.temp_db_settings",
              "timeouts"
            ],
            "azurerm_mssql_virtual_network_rule": [
              "id",
              "ignore_missing_vnet_service_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "server_id",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_mysql_active_directory_administrator": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "login",
              "object_id",
              "resource_group_name",
              "server_name",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_mysql_configuration": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "value",
              "timeouts"
            ],
            "azurerm_mysql_database": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "charset",
              "collation",
              "name",
              "resource_group_name",
              "server_name",
              "timeouts"
            ],
            "azurerm_mysql_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip_address",
              "name",
              "resource_group_name",
              "server_name",
              "start_ip_address",
              "timeouts"
            ],
            "azurerm_mysql_flexible_database": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "charset",
              "collation",
              "name",
              "resource_group_name",
              "server_name",
              "timeouts"
            ],
            "azurerm_mysql_flexible_server": [
              "administrator_login",
              "administrator_password",
              "backup_retention_days",
              "create_mode",
              "delegated_subnet_id",
              "geo_redundant_backup_enabled",
              "id",
              "point_in_time_restore_time_in_utc",
              "private_dns_zone_id",
              "replication_role",
              "sku_name",
              "source_server_id",
              "tags",
              "version",
              "zone",
              "high_availability.standby_availability_zone",
              "maintenance_window.day_of_week",
              "maintenance_window.start_hour",
              "maintenance_window.start_minute",
              "storage.auto_grow_enabled",
              "storage.iops",
              "storage.size_gb",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "high_availability.mode",
              "high_availability",
              "maintenance_window",
              "storage",
              "timeouts"
            ],
            "azurerm_mysql_flexible_server_configuration": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "value",
              "timeouts"
            ],
            "azurerm_mysql_flexible_server_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip_address",
              "name",
              "resource_group_name",
              "server_name",
              "start_ip_address",
              "timeouts"
            ],
            "azurerm_mysql_server": [
              "administrator_login",
              "administrator_login_password",
              "auto_grow_enabled",
              "backup_retention_days",
              "create_mode",
              "creation_source_server_id",
              "geo_redundant_backup_enabled",
              "id",
              "infrastructure_encryption_enabled",
              "public_network_access_enabled",
              "restore_point_in_time",
              "ssl_minimal_tls_version_enforced",
              "storage_mb",
              "tags",
              "threat_detection_policy.disabled_alerts",
              "threat_detection_policy.email_account_admins",
              "threat_detection_policy.email_addresses",
              "threat_detection_policy.enabled",
              "threat_detection_policy.retention_days",
              "threat_detection_policy.storage_account_access_key",
              "threat_detection_policy.storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "ssl_enforcement_enabled",
              "version",
              "identity.type",
              "identity",
              "threat_detection_policy",
              "timeouts"
            ],
            "azurerm_mysql_server_key": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_key_id",
              "server_id",
              "timeouts"
            ],
            "azurerm_mysql_virtual_network_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_nat_gateway": [
              "id",
              "idle_timeout_in_minutes",
              "sku_name",
              "tags",
              "zones",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_nat_gateway_public_ip_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "nat_gateway_id",
              "public_ip_address_id",
              "timeouts"
            ],
            "azurerm_nat_gateway_public_ip_prefix_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "nat_gateway_id",
              "public_ip_prefix_id",
              "timeouts"
            ],
            "azurerm_netapp_account": [
              "id",
              "tags",
              "active_directory.organizational_unit",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "active_directory.dns_servers",
              "active_directory.domain",
              "active_directory.password",
              "active_directory.smb_server_name",
              "active_directory.username",
              "active_directory",
              "timeouts"
            ],
            "azurerm_netapp_pool": [
              "id",
              "qos_type",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "location",
              "name",
              "resource_group_name",
              "service_level",
              "size_in_tb",
              "timeouts"
            ],
            "azurerm_netapp_snapshot": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "location",
              "name",
              "pool_name",
              "resource_group_name",
              "volume_name",
              "timeouts"
            ],
            "azurerm_netapp_snapshot_policy": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "enabled",
              "location",
              "name",
              "resource_group_name",
              "daily_schedule.hour",
              "daily_schedule.minute",
              "daily_schedule.snapshots_to_keep",
              "hourly_schedule.minute",
              "hourly_schedule.snapshots_to_keep",
              "monthly_schedule.days_of_month",
              "monthly_schedule.hour",
              "monthly_schedule.minute",
              "monthly_schedule.snapshots_to_keep",
              "weekly_schedule.days_of_week",
              "weekly_schedule.hour",
              "weekly_schedule.minute",
              "weekly_schedule.snapshots_to_keep",
              "daily_schedule",
              "hourly_schedule",
              "monthly_schedule",
              "timeouts",
              "weekly_schedule"
            ],
            "azurerm_netapp_volume": [
              "azure_vmware_data_store_enabled",
              "create_from_snapshot_resource_id",
              "id",
              "network_features",
              "protocols",
              "security_style",
              "snapshot_directory_visible",
              "tags",
              "throughput_in_mibps",
              "zone",
              "data_protection_replication.endpoint_type",
              "export_policy_rule.protocols_enabled",
              "export_policy_rule.root_access_enabled",
              "export_policy_rule.unix_read_only",
              "export_policy_rule.unix_read_write",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_name",
              "location",
              "name",
              "pool_name",
              "resource_group_name",
              "service_level",
              "storage_quota_in_gb",
              "subnet_id",
              "volume_path",
              "data_protection_replication.remote_volume_location",
              "data_protection_replication.remote_volume_resource_id",
              "data_protection_replication.replication_frequency",
              "data_protection_snapshot_policy.snapshot_policy_id",
              "export_policy_rule.allowed_clients",
              "export_policy_rule.rule_index",
              "data_protection_replication",
              "data_protection_snapshot_policy",
              "export_policy_rule",
              "timeouts"
            ],
            "azurerm_network_connection_monitor": [
              "id",
              "notes",
              "output_workspace_resource_ids",
              "tags",
              "endpoint.address",
              "endpoint.coverage_level",
              "endpoint.excluded_ip_addresses",
              "endpoint.included_ip_addresses",
              "endpoint.target_resource_id",
              "endpoint.target_resource_type",
              "endpoint.filter.type",
              "endpoint.filter.item.address",
              "endpoint.filter.item.type",
              "test_configuration.preferred_ip_version",
              "test_configuration.test_frequency_in_seconds",
              "test_configuration.http_configuration.method",
              "test_configuration.http_configuration.path",
              "test_configuration.http_configuration.port",
              "test_configuration.http_configuration.prefer_https",
              "test_configuration.http_configuration.valid_status_code_ranges",
              "test_configuration.icmp_configuration.trace_route_enabled",
              "test_configuration.success_threshold.checks_failed_percent",
              "test_configuration.success_threshold.round_trip_time_ms",
              "test_configuration.tcp_configuration.destination_port_behavior",
              "test_configuration.tcp_configuration.trace_route_enabled",
              "test_group.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "network_watcher_id",
              "endpoint.name",
              "test_configuration.name",
              "test_configuration.protocol",
              "test_configuration.http_configuration.request_header.name",
              "test_configuration.http_configuration.request_header.value",
              "test_configuration.tcp_configuration.port",
              "test_group.destination_endpoints",
              "test_group.name",
              "test_group.source_endpoints",
              "test_group.test_configuration_names",
              "endpoint",
              "endpoint.filter",
              "endpoint.filter.item",
              "test_configuration",
              "test_configuration.http_configuration",
              "test_configuration.http_configuration.request_header",
              "test_configuration.icmp_configuration",
              "test_configuration.success_threshold",
              "test_configuration.tcp_configuration",
              "test_group",
              "timeouts"
            ],
            "azurerm_network_ddos_protection_plan": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_network_interface": [
              "dns_servers",
              "edge_zone",
              "enable_accelerated_networking",
              "enable_ip_forwarding",
              "id",
              "internal_dns_name_label",
              "tags",
              "ip_configuration.gateway_load_balancer_frontend_ip_configuration_id",
              "ip_configuration.primary",
              "ip_configuration.private_ip_address",
              "ip_configuration.private_ip_address_version",
              "ip_configuration.public_ip_address_id",
              "ip_configuration.subnet_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "ip_configuration.name",
              "ip_configuration.private_ip_address_allocation",
              "ip_configuration",
              "timeouts"
            ],
            "azurerm_network_interface_application_gateway_backend_address_pool_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backend_address_pool_id",
              "ip_configuration_name",
              "network_interface_id",
              "timeouts"
            ],
            "azurerm_network_interface_application_security_group_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_security_group_id",
              "network_interface_id",
              "timeouts"
            ],
            "azurerm_network_interface_backend_address_pool_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "backend_address_pool_id",
              "ip_configuration_name",
              "network_interface_id",
              "timeouts"
            ],
            "azurerm_network_interface_nat_rule_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "ip_configuration_name",
              "nat_rule_id",
              "network_interface_id",
              "timeouts"
            ],
            "azurerm_network_interface_security_group_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "network_interface_id",
              "network_security_group_id",
              "timeouts"
            ],
            "azurerm_network_manager": [
              "description",
              "id",
              "tags",
              "scope.management_group_ids",
              "scope.subscription_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "scope_accesses",
              "scope",
              "timeouts"
            ],
            "azurerm_network_packet_capture": [
              "id",
              "maximum_bytes_per_packet",
              "maximum_bytes_per_session",
              "maximum_capture_duration",
              "filter.local_ip_address",
              "filter.local_port",
              "filter.remote_ip_address",
              "filter.remote_port",
              "storage_location.file_path",
              "storage_location.storage_account_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "network_watcher_name",
              "resource_group_name",
              "target_resource_id",
              "filter.protocol",
              "filter",
              "storage_location",
              "timeouts"
            ],
            "azurerm_network_profile": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "container_network_interface.name",
              "container_network_interface.ip_configuration.name",
              "container_network_interface.ip_configuration.subnet_id",
              "container_network_interface",
              "container_network_interface.ip_configuration",
              "timeouts"
            ],
            "azurerm_network_security_group": [
              "id",
              "security_rule",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts",
              "security_rule.access",
              "security_rule.description",
              "security_rule.destination_address_prefix",
              "security_rule.destination_address_prefixes",
              "security_rule.destination_application_security_group_ids",
              "security_rule.destination_port_range",
              "security_rule.destination_port_ranges",
              "security_rule.direction",
              "security_rule.name",
              "security_rule.priority",
              "security_rule.protocol",
              "security_rule.source_address_prefix",
              "security_rule.source_address_prefixes",
              "security_rule.source_application_security_group_ids",
              "security_rule.source_port_range",
              "security_rule.source_port_ranges"
            ],
            "azurerm_network_security_rule": [
              "description",
              "destination_address_prefix",
              "destination_address_prefixes",
              "destination_application_security_group_ids",
              "destination_port_range",
              "destination_port_ranges",
              "id",
              "source_address_prefix",
              "source_address_prefixes",
              "source_application_security_group_ids",
              "source_port_range",
              "source_port_ranges",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "access",
              "direction",
              "name",
              "network_security_group_name",
              "priority",
              "protocol",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_network_watcher": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_network_watcher_flow_log": [
              "id",
              "location",
              "tags",
              "version",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "traffic_analytics.interval_in_minutes",
              "enabled",
              "name",
              "network_security_group_id",
              "network_watcher_name",
              "resource_group_name",
              "storage_account_id",
              "retention_policy.days",
              "retention_policy.enabled",
              "traffic_analytics.enabled",
              "traffic_analytics.workspace_id",
              "traffic_analytics.workspace_region",
              "traffic_analytics.workspace_resource_id",
              "retention_policy",
              "timeouts",
              "traffic_analytics"
            ],
            "azurerm_nginx_certificate": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "certificate_virtual_path",
              "key_vault_secret_id",
              "key_virtual_path",
              "name",
              "nginx_deployment_id",
              "timeouts"
            ],
            "azurerm_nginx_configuration": [
              "id",
              "package_data",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "nginx_deployment_id",
              "root_file",
              "config_file.content",
              "config_file.virtual_path",
              "protected_file.content",
              "protected_file.virtual_path",
              "config_file",
              "protected_file",
              "timeouts"
            ],
            "azurerm_nginx_deployment": [
              "diagnose_support_enabled",
              "id",
              "managed_resource_group",
              "tags",
              "frontend_public.ip_address",
              "identity.identity_ids",
              "logging_storage_account.container_name",
              "logging_storage_account.name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "frontend_private.allocation_method",
              "frontend_private.ip_address",
              "frontend_private.subnet_id",
              "identity.type",
              "network_interface.subnet_id",
              "frontend_private",
              "frontend_public",
              "identity",
              "logging_storage_account",
              "network_interface",
              "timeouts"
            ],
            "azurerm_notification_hub": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "namespace_name",
              "resource_group_name",
              "apns_credential.application_mode",
              "apns_credential.bundle_id",
              "apns_credential.key_id",
              "apns_credential.team_id",
              "apns_credential.token",
              "gcm_credential.api_key",
              "apns_credential",
              "gcm_credential",
              "timeouts"
            ],
            "azurerm_notification_hub_authorization_rule": [
              "id",
              "listen",
              "manage",
              "send",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "namespace_name",
              "notification_hub_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_notification_hub_namespace": [
              "enabled",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "namespace_type",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_orbital_contact_profile": [
              "event_hub_uri",
              "id",
              "minimum_elevation_degrees",
              "tags",
              "links.channels.demodulation_configuration",
              "links.channels.modulation_configuration",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "auto_tracking",
              "location",
              "minimum_variable_contact_duration",
              "name",
              "network_configuration_subnet_id",
              "resource_group_name",
              "links.direction",
              "links.name",
              "links.polarization",
              "links.channels.bandwidth_mhz",
              "links.channels.center_frequency_mhz",
              "links.channels.name",
              "links.channels.end_point.end_point_name",
              "links.channels.end_point.ip_address",
              "links.channels.end_point.port",
              "links.channels.end_point.protocol",
              "links",
              "links.channels",
              "links.channels.end_point",
              "timeouts"
            ],
            "azurerm_orbital_spacecraft": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "norad_id",
              "resource_group_name",
              "title_line",
              "two_line_elements",
              "links.bandwidth_mhz",
              "links.center_frequency_mhz",
              "links.direction",
              "links.name",
              "links.polarization",
              "links",
              "timeouts"
            ],
            "azurerm_orchestrated_virtual_machine_scale_set": [
              "capacity_reservation_group_id",
              "encryption_at_host_enabled",
              "eviction_policy",
              "extension_operations_enabled",
              "extensions_time_budget",
              "id",
              "instances",
              "license_type",
              "max_bid_price",
              "priority",
              "proximity_placement_group_id",
              "single_placement_group",
              "sku_name",
              "source_image_id",
              "tags",
              "user_data_base64",
              "zone_balance",
              "zones",
              "additional_capabilities.ultra_ssd_enabled",
              "automatic_instance_repair.grace_period",
              "boot_diagnostics.storage_account_uri",
              "data_disk.create_option",
              "data_disk.disk_encryption_set_id",
              "data_disk.ultra_ssd_disk_iops_read_write",
              "data_disk.ultra_ssd_disk_mbps_read_write",
              "data_disk.write_accelerator_enabled",
              "extension.auto_upgrade_minor_version_enabled",
              "extension.extensions_to_provision_after_vm_creation",
              "extension.failure_suppression_enabled",
              "extension.force_extension_execution_on_change",
              "extension.protected_settings",
              "extension.settings",
              "network_interface.dns_servers",
              "network_interface.enable_accelerated_networking",
              "network_interface.enable_ip_forwarding",
              "network_interface.network_security_group_id",
              "network_interface.primary",
              "network_interface.ip_configuration.application_gateway_backend_address_pool_ids",
              "network_interface.ip_configuration.application_security_group_ids",
              "network_interface.ip_configuration.load_balancer_backend_address_pool_ids",
              "network_interface.ip_configuration.primary",
              "network_interface.ip_configuration.subnet_id",
              "network_interface.ip_configuration.version",
              "network_interface.ip_configuration.public_ip_address.domain_name_label",
              "network_interface.ip_configuration.public_ip_address.idle_timeout_in_minutes",
              "network_interface.ip_configuration.public_ip_address.public_ip_prefix_id",
              "network_interface.ip_configuration.public_ip_address.sku_name",
              "network_interface.ip_configuration.public_ip_address.version",
              "os_disk.disk_encryption_set_id",
              "os_disk.disk_size_gb",
              "os_disk.write_accelerator_enabled",
              "os_disk.diff_disk_settings.placement",
              "os_profile.custom_data",
              "os_profile.linux_configuration.admin_password",
              "os_profile.linux_configuration.computer_name_prefix",
              "os_profile.linux_configuration.disable_password_authentication",
              "os_profile.linux_configuration.patch_assessment_mode",
              "os_profile.linux_configuration.patch_mode",
              "os_profile.linux_configuration.provision_vm_agent",
              "os_profile.windows_configuration.computer_name_prefix",
              "os_profile.windows_configuration.enable_automatic_updates",
              "os_profile.windows_configuration.hotpatching_enabled",
              "os_profile.windows_configuration.patch_assessment_mode",
              "os_profile.windows_configuration.patch_mode",
              "os_profile.windows_configuration.provision_vm_agent",
              "os_profile.windows_configuration.timezone",
              "os_profile.windows_configuration.winrm_listener.certificate_url",
              "termination_notification.timeout",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "platform_fault_domain_count",
              "resource_group_name",
              "automatic_instance_repair.enabled",
              "data_disk.caching",
              "data_disk.disk_size_gb",
              "data_disk.lun",
              "data_disk.storage_account_type",
              "extension.name",
              "extension.publisher",
              "extension.type",
              "extension.type_handler_version",
              "extension.protected_settings_from_key_vault.secret_url",
              "extension.protected_settings_from_key_vault.source_vault_id",
              "identity.identity_ids",
              "identity.type",
              "network_interface.name",
              "network_interface.ip_configuration.name",
              "network_interface.ip_configuration.public_ip_address.name",
              "network_interface.ip_configuration.public_ip_address.ip_tag.tag",
              "network_interface.ip_configuration.public_ip_address.ip_tag.type",
              "os_disk.caching",
              "os_disk.storage_account_type",
              "os_disk.diff_disk_settings.option",
              "os_profile.linux_configuration.admin_username",
              "os_profile.linux_configuration.admin_ssh_key.public_key",
              "os_profile.linux_configuration.admin_ssh_key.username",
              "os_profile.linux_configuration.secret.key_vault_id",
              "os_profile.linux_configuration.secret.certificate.url",
              "os_profile.windows_configuration.admin_password",
              "os_profile.windows_configuration.admin_username",
              "os_profile.windows_configuration.secret.key_vault_id",
              "os_profile.windows_configuration.secret.certificate.store",
              "os_profile.windows_configuration.secret.certificate.url",
              "os_profile.windows_configuration.winrm_listener.protocol",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "source_image_reference.offer",
              "source_image_reference.publisher",
              "source_image_reference.sku",
              "source_image_reference.version",
              "termination_notification.enabled",
              "additional_capabilities",
              "automatic_instance_repair",
              "boot_diagnostics",
              "data_disk",
              "extension",
              "extension.protected_settings_from_key_vault",
              "identity",
              "network_interface",
              "network_interface.ip_configuration",
              "network_interface.ip_configuration.public_ip_address",
              "network_interface.ip_configuration.public_ip_address.ip_tag",
              "os_disk",
              "os_disk.diff_disk_settings",
              "os_profile",
              "os_profile.linux_configuration",
              "os_profile.linux_configuration.admin_ssh_key",
              "os_profile.linux_configuration.secret",
              "os_profile.linux_configuration.secret.certificate",
              "os_profile.windows_configuration",
              "os_profile.windows_configuration.secret",
              "os_profile.windows_configuration.secret.certificate",
              "os_profile.windows_configuration.winrm_listener",
              "plan",
              "source_image_reference",
              "termination_notification",
              "timeouts"
            ],
            "azurerm_point_to_site_vpn_gateway": [
              "dns_servers",
              "id",
              "routing_preference_internet_enabled",
              "tags",
              "connection_configuration.internet_security_enabled",
              "connection_configuration.route.inbound_route_map_id",
              "connection_configuration.route.outbound_route_map_id",
              "connection_configuration.route.propagated_route_table.labels",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "scale_unit",
              "virtual_hub_id",
              "vpn_server_configuration_id",
              "connection_configuration.name",
              "connection_configuration.route.associated_route_table_id",
              "connection_configuration.route.propagated_route_table.ids",
              "connection_configuration.vpn_client_address_pool.address_prefixes",
              "connection_configuration",
              "connection_configuration.route",
              "connection_configuration.route.propagated_route_table",
              "connection_configuration.vpn_client_address_pool",
              "timeouts"
            ],
            "azurerm_policy_definition": [
              "description",
              "id",
              "management_group_id",
              "metadata",
              "parameters",
              "policy_rule",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "display_name",
              "mode",
              "name",
              "policy_type",
              "timeouts"
            ],
            "azurerm_policy_set_definition": [
              "description",
              "id",
              "management_group_id",
              "metadata",
              "parameters",
              "policy_definition_group.additional_metadata_resource_id",
              "policy_definition_group.category",
              "policy_definition_group.description",
              "policy_definition_group.display_name",
              "policy_definition_reference.parameter_values",
              "policy_definition_reference.policy_group_names",
              "policy_definition_reference.reference_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "display_name",
              "name",
              "policy_type",
              "policy_definition_group.name",
              "policy_definition_reference.policy_definition_id",
              "policy_definition_group",
              "policy_definition_reference",
              "timeouts"
            ],
            "azurerm_policy_virtual_machine_configuration_assignment": [
              "id",
              "configuration.assignment_type",
              "configuration.content_hash",
              "configuration.content_uri",
              "configuration.version",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "virtual_machine_id",
              "configuration.parameter.name",
              "configuration.parameter.value",
              "configuration",
              "configuration.parameter",
              "timeouts"
            ],
            "azurerm_portal_dashboard": [
              "dashboard_properties",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_portal_tenant_configuration": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "private_markdown_storage_enforced",
              "timeouts"
            ],
            "azurerm_postgresql_active_directory_administrator": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "login",
              "object_id",
              "resource_group_name",
              "server_name",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_postgresql_configuration": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "value",
              "timeouts"
            ],
            "azurerm_postgresql_database": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "charset",
              "collation",
              "name",
              "resource_group_name",
              "server_name",
              "timeouts"
            ],
            "azurerm_postgresql_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip_address",
              "name",
              "resource_group_name",
              "server_name",
              "start_ip_address",
              "timeouts"
            ],
            "azurerm_postgresql_flexible_server": [
              "administrator_login",
              "administrator_password",
              "backup_retention_days",
              "create_mode",
              "delegated_subnet_id",
              "geo_redundant_backup_enabled",
              "id",
              "point_in_time_restore_time_in_utc",
              "private_dns_zone_id",
              "sku_name",
              "source_server_id",
              "storage_mb",
              "tags",
              "version",
              "zone",
              "authentication.active_directory_auth_enabled",
              "authentication.password_auth_enabled",
              "authentication.tenant_id",
              "high_availability.standby_availability_zone",
              "maintenance_window.day_of_week",
              "maintenance_window.start_hour",
              "maintenance_window.start_minute",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "high_availability.mode",
              "authentication",
              "high_availability",
              "maintenance_window",
              "timeouts"
            ],
            "azurerm_postgresql_flexible_server_active_directory_administrator": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "object_id",
              "principal_name",
              "principal_type",
              "resource_group_name",
              "server_name",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_postgresql_flexible_server_configuration": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "server_id",
              "value",
              "timeouts"
            ],
            "azurerm_postgresql_flexible_server_database": [
              "charset",
              "collation",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "server_id",
              "timeouts"
            ],
            "azurerm_postgresql_flexible_server_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip_address",
              "name",
              "server_id",
              "start_ip_address",
              "timeouts"
            ],
            "azurerm_postgresql_server": [
              "administrator_login",
              "administrator_login_password",
              "auto_grow_enabled",
              "backup_retention_days",
              "create_mode",
              "creation_source_server_id",
              "geo_redundant_backup_enabled",
              "id",
              "infrastructure_encryption_enabled",
              "public_network_access_enabled",
              "restore_point_in_time",
              "ssl_minimal_tls_version_enforced",
              "storage_mb",
              "tags",
              "threat_detection_policy.disabled_alerts",
              "threat_detection_policy.email_account_admins",
              "threat_detection_policy.email_addresses",
              "threat_detection_policy.enabled",
              "threat_detection_policy.retention_days",
              "threat_detection_policy.storage_account_access_key",
              "threat_detection_policy.storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "ssl_enforcement_enabled",
              "version",
              "identity.type",
              "identity",
              "threat_detection_policy",
              "timeouts"
            ],
            "azurerm_postgresql_server_key": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_vault_key_id",
              "server_id",
              "timeouts"
            ],
            "azurerm_postgresql_virtual_network_rule": [
              "id",
              "ignore_missing_vnet_service_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_powerbi_embedded": [
              "id",
              "mode",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "administrators",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_private_dns_a_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "records",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_private_dns_aaaa_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "records",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_private_dns_cname_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "record",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_private_dns_mx_record": [
              "id",
              "name",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "resource_group_name",
              "ttl",
              "zone_name",
              "record.exchange",
              "record.preference",
              "record",
              "timeouts"
            ],
            "azurerm_private_dns_ptr_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "records",
              "resource_group_name",
              "ttl",
              "zone_name",
              "timeouts"
            ],
            "azurerm_private_dns_resolver": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "virtual_network_id",
              "timeouts"
            ],
            "azurerm_private_dns_resolver_dns_forwarding_ruleset": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "private_dns_resolver_outbound_endpoint_ids",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_private_dns_resolver_forwarding_rule": [
              "enabled",
              "id",
              "metadata",
              "target_dns_servers.port",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "dns_forwarding_ruleset_id",
              "domain_name",
              "name",
              "target_dns_servers.ip_address",
              "target_dns_servers",
              "timeouts"
            ],
            "azurerm_private_dns_resolver_inbound_endpoint": [
              "id",
              "tags",
              "ip_configurations.private_ip_allocation_method",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "private_dns_resolver_id",
              "ip_configurations.subnet_id",
              "ip_configurations",
              "timeouts"
            ],
            "azurerm_private_dns_resolver_outbound_endpoint": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "private_dns_resolver_id",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_private_dns_resolver_virtual_network_link": [
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "dns_forwarding_ruleset_id",
              "name",
              "virtual_network_id",
              "timeouts"
            ],
            "azurerm_private_dns_srv_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "ttl",
              "zone_name",
              "record.port",
              "record.priority",
              "record.target",
              "record.weight",
              "record",
              "timeouts"
            ],
            "azurerm_private_dns_txt_record": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "ttl",
              "zone_name",
              "record.value",
              "record",
              "timeouts"
            ],
            "azurerm_private_dns_zone": [
              "id",
              "tags",
              "soa_record.expire_time",
              "soa_record.minimum_ttl",
              "soa_record.refresh_time",
              "soa_record.retry_time",
              "soa_record.tags",
              "soa_record.ttl",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "soa_record.email",
              "soa_record",
              "timeouts"
            ],
            "azurerm_private_dns_zone_virtual_network_link": [
              "id",
              "registration_enabled",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "private_dns_zone_name",
              "resource_group_name",
              "virtual_network_id",
              "timeouts"
            ],
            "azurerm_private_endpoint": [
              "custom_network_interface_name",
              "id",
              "tags",
              "ip_configuration.member_name",
              "private_service_connection.private_connection_resource_alias",
              "private_service_connection.private_connection_resource_id",
              "private_service_connection.request_message",
              "private_service_connection.subresource_names",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "subnet_id",
              "ip_configuration.name",
              "ip_configuration.private_ip_address",
              "ip_configuration.subresource_name",
              "private_dns_zone_group.name",
              "private_dns_zone_group.private_dns_zone_ids",
              "private_service_connection.is_manual_connection",
              "private_service_connection.name",
              "ip_configuration",
              "private_dns_zone_group",
              "private_service_connection",
              "timeouts"
            ],
            "azurerm_private_link_service": [
              "auto_approval_subscription_ids",
              "enable_proxy_protocol",
              "fqdns",
              "id",
              "tags",
              "visibility_subscription_ids",
              "nat_ip_configuration.private_ip_address",
              "nat_ip_configuration.private_ip_address_version",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "load_balancer_frontend_ip_configuration_ids",
              "location",
              "name",
              "resource_group_name",
              "nat_ip_configuration.name",
              "nat_ip_configuration.primary",
              "nat_ip_configuration.subnet_id",
              "nat_ip_configuration",
              "timeouts"
            ],
            "azurerm_proximity_placement_group": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_public_ip": [
              "ddos_protection_mode",
              "ddos_protection_plan_id",
              "domain_name_label",
              "edge_zone",
              "id",
              "idle_timeout_in_minutes",
              "ip_tags",
              "ip_version",
              "public_ip_prefix_id",
              "reverse_fqdn",
              "sku",
              "sku_tier",
              "tags",
              "zones",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "allocation_method",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_public_ip_prefix": [
              "id",
              "ip_version",
              "prefix_length",
              "sku",
              "tags",
              "zones",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_purview_account": [
              "id",
              "managed_resource_group_name",
              "public_network_enabled",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_recovery_services_vault": [
              "cross_region_restore_enabled",
              "id",
              "soft_delete_enabled",
              "storage_mode_type",
              "tags",
              "encryption.use_system_assigned_identity",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "encryption.infrastructure_encryption_enabled",
              "encryption.key_id",
              "identity.type",
              "encryption",
              "identity",
              "timeouts"
            ],
            "azurerm_redis_cache": [
              "enable_non_ssl_port",
              "id",
              "minimum_tls_version",
              "private_static_ip_address",
              "public_network_access_enabled",
              "redis_version",
              "replicas_per_master",
              "replicas_per_primary",
              "shard_count",
              "subnet_id",
              "tags",
              "tenant_settings",
              "zones",
              "identity.identity_ids",
              "patch_schedule.maintenance_window",
              "patch_schedule.start_hour_utc",
              "redis_configuration.aof_backup_enabled",
              "redis_configuration.aof_storage_connection_string_0",
              "redis_configuration.aof_storage_connection_string_1",
              "redis_configuration.enable_authentication",
              "redis_configuration.maxfragmentationmemory_reserved",
              "redis_configuration.maxmemory_delta",
              "redis_configuration.maxmemory_policy",
              "redis_configuration.maxmemory_reserved",
              "redis_configuration.notify_keyspace_events",
              "redis_configuration.rdb_backup_enabled",
              "redis_configuration.rdb_backup_frequency",
              "redis_configuration.rdb_backup_max_snapshot_count",
              "redis_configuration.rdb_storage_connection_string",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "capacity",
              "family",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "identity.type",
              "patch_schedule.day_of_week",
              "identity",
              "patch_schedule",
              "redis_configuration",
              "timeouts"
            ],
            "azurerm_redis_enterprise_cluster": [
              "id",
              "minimum_tls_version",
              "tags",
              "zones",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_redis_enterprise_database": [
              "client_protocol",
              "clustering_policy",
              "eviction_policy",
              "id",
              "linked_database_group_nickname",
              "linked_database_id",
              "name",
              "port",
              "resource_group_name",
              "module.args",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_id",
              "module.name",
              "module",
              "timeouts"
            ],
            "azurerm_redis_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip",
              "name",
              "redis_cache_name",
              "resource_group_name",
              "start_ip",
              "timeouts"
            ],
            "azurerm_redis_linked_server": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "linked_redis_cache_id",
              "linked_redis_cache_location",
              "resource_group_name",
              "server_role",
              "target_redis_cache_name",
              "timeouts"
            ],
            "azurerm_relay_hybrid_connection": [
              "id",
              "requires_client_authorization",
              "user_metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "relay_namespace_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_relay_hybrid_connection_authorization_rule": [
              "id",
              "listen",
              "manage",
              "send",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "hybrid_connection_name",
              "name",
              "namespace_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_relay_namespace": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_relay_namespace_authorization_rule": [
              "id",
              "listen",
              "manage",
              "send",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "namespace_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_resource_deployment_script_azure_cli": [
              "cleanup_preference",
              "command_line",
              "force_update_tag",
              "id",
              "primary_script_uri",
              "script_content",
              "supporting_script_uris",
              "tags",
              "timeout",
              "container.container_group_name",
              "environment_variable.secure_value",
              "environment_variable.value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "retention_interval",
              "version",
              "environment_variable.name",
              "identity.identity_ids",
              "identity.type",
              "storage_account.key",
              "storage_account.name",
              "container",
              "environment_variable",
              "identity",
              "storage_account",
              "timeouts"
            ],
            "azurerm_resource_deployment_script_azure_power_shell": [
              "cleanup_preference",
              "command_line",
              "force_update_tag",
              "id",
              "primary_script_uri",
              "script_content",
              "supporting_script_uris",
              "tags",
              "timeout",
              "container.container_group_name",
              "environment_variable.secure_value",
              "environment_variable.value",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "retention_interval",
              "version",
              "environment_variable.name",
              "identity.identity_ids",
              "identity.type",
              "storage_account.key",
              "storage_account.name",
              "container",
              "environment_variable",
              "identity",
              "storage_account",
              "timeouts"
            ],
            "azurerm_resource_group": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "timeouts"
            ],
            "azurerm_resource_group_cost_management_export": [
              "active",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recurrence_period_end_date",
              "recurrence_period_start_date",
              "recurrence_type",
              "resource_group_id",
              "export_data_options.time_frame",
              "export_data_options.type",
              "export_data_storage_location.container_id",
              "export_data_storage_location.root_folder_path",
              "export_data_options",
              "export_data_storage_location",
              "timeouts"
            ],
            "azurerm_resource_group_policy_assignment": [
              "description",
              "display_name",
              "enforce",
              "id",
              "location",
              "metadata",
              "not_scopes",
              "parameters",
              "identity.identity_ids",
              "non_compliance_message.policy_definition_reference_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "policy_definition_id",
              "resource_group_id",
              "identity.type",
              "non_compliance_message.content",
              "identity",
              "non_compliance_message",
              "timeouts"
            ],
            "azurerm_resource_group_policy_exemption": [
              "description",
              "display_name",
              "expires_on",
              "id",
              "metadata",
              "policy_definition_reference_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "exemption_category",
              "name",
              "policy_assignment_id",
              "resource_group_id",
              "timeouts"
            ],
            "azurerm_resource_group_policy_remediation": [
              "failure_percentage",
              "id",
              "location_filters",
              "parallel_deployments",
              "policy_definition_id",
              "policy_definition_reference_id",
              "resource_count",
              "resource_discovery_mode",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "policy_assignment_id",
              "resource_group_id",
              "timeouts"
            ],
            "azurerm_resource_group_template_deployment": [
              "debug_level",
              "id",
              "parameters_content",
              "tags",
              "template_content",
              "template_spec_version_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "deployment_mode",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_resource_policy_assignment": [
              "description",
              "display_name",
              "enforce",
              "id",
              "location",
              "metadata",
              "not_scopes",
              "parameters",
              "identity.identity_ids",
              "non_compliance_message.policy_definition_reference_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "policy_definition_id",
              "resource_id",
              "identity.type",
              "non_compliance_message.content",
              "identity",
              "non_compliance_message",
              "timeouts"
            ],
            "azurerm_resource_policy_exemption": [
              "description",
              "display_name",
              "expires_on",
              "id",
              "metadata",
              "policy_definition_reference_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "exemption_category",
              "name",
              "policy_assignment_id",
              "resource_id",
              "timeouts"
            ],
            "azurerm_resource_policy_remediation": [
              "failure_percentage",
              "id",
              "location_filters",
              "parallel_deployments",
              "policy_definition_id",
              "policy_definition_reference_id",
              "resource_count",
              "resource_discovery_mode",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "policy_assignment_id",
              "resource_id",
              "timeouts"
            ],
            "azurerm_resource_provider_registration": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "feature.name",
              "feature.registered",
              "feature",
              "timeouts"
            ],
            "azurerm_role_assignment": [
              "condition",
              "condition_version",
              "delegated_managed_identity_resource_id",
              "description",
              "id",
              "name",
              "role_definition_id",
              "role_definition_name",
              "skip_service_principal_aad_check",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "principal_id",
              "scope",
              "timeouts"
            ],
            "azurerm_role_definition": [
              "assignable_scopes",
              "description",
              "id",
              "role_definition_id",
              "permissions.actions",
              "permissions.data_actions",
              "permissions.not_actions",
              "permissions.not_data_actions",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "scope",
              "permissions",
              "timeouts"
            ],
            "azurerm_route": [
              "id",
              "next_hop_in_ip_address",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "address_prefix",
              "name",
              "next_hop_type",
              "resource_group_name",
              "route_table_name",
              "timeouts"
            ],
            "azurerm_route_filter": [
              "id",
              "rule",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_route_map": [
              "id",
              "rule.next_step_if_matched",
              "rule.action.parameter.as_path",
              "rule.action.parameter.community",
              "rule.action.parameter.route_prefix",
              "rule.match_criterion.as_path",
              "rule.match_criterion.community",
              "rule.match_criterion.route_prefix",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "virtual_hub_id",
              "rule.name",
              "rule.action.type",
              "rule.match_criterion.match_condition",
              "rule",
              "rule.action",
              "rule.action.parameter",
              "rule.match_criterion",
              "timeouts"
            ],
            "azurerm_route_server": [
              "branch_to_branch_traffic_enabled",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "public_ip_address_id",
              "resource_group_name",
              "sku",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_route_server_bgp_connection": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "peer_asn",
              "peer_ip",
              "route_server_id",
              "timeouts"
            ],
            "azurerm_route_table": [
              "disable_bgp_route_propagation",
              "id",
              "route",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts",
              "route.address_prefix",
              "route.name",
              "route.next_hop_in_ip_address",
              "route.next_hop_type"
            ],
            "azurerm_search_service": [
              "allowed_ips",
              "id",
              "partition_count",
              "public_network_access_enabled",
              "replica_count",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_search_shared_private_link_service": [
              "id",
              "request_message",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "search_service_id",
              "subresource_name",
              "target_resource_id",
              "timeouts"
            ],
            "azurerm_security_center_assessment": [
              "additional_data",
              "id",
              "status.cause",
              "status.description",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "assessment_policy_id",
              "target_resource_id",
              "status.code",
              "status",
              "timeouts"
            ],
            "azurerm_security_center_assessment_policy": [
              "categories",
              "id",
              "implementation_effort",
              "remediation_description",
              "severity",
              "threats",
              "user_impact",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "description",
              "display_name",
              "timeouts"
            ],
            "azurerm_security_center_auto_provisioning": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "auto_provision",
              "timeouts"
            ],
            "azurerm_security_center_automation": [
              "description",
              "enabled",
              "id",
              "tags",
              "action.connection_string",
              "action.trigger_url",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "scopes",
              "action.resource_id",
              "action.type",
              "source.event_source",
              "source.rule_set.rule.expected_value",
              "source.rule_set.rule.operator",
              "source.rule_set.rule.property_path",
              "source.rule_set.rule.property_type",
              "action",
              "source",
              "source.rule_set",
              "source.rule_set.rule",
              "timeouts"
            ],
            "azurerm_security_center_contact": [
              "id",
              "name",
              "phone",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "alert_notifications",
              "alerts_to_admins",
              "email",
              "timeouts"
            ],
            "azurerm_security_center_server_vulnerability_assessment": [
              "hybrid_machine_id",
              "id",
              "virtual_machine_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts"
            ],
            "azurerm_security_center_server_vulnerability_assessment_virtual_machine": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "virtual_machine_id",
              "timeouts"
            ],
            "azurerm_security_center_setting": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "enabled",
              "setting_name",
              "timeouts"
            ],
            "azurerm_security_center_subscription_pricing": [
              "id",
              "resource_type",
              "subplan",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "tier",
              "timeouts"
            ],
            "azurerm_security_center_workspace": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "scope",
              "workspace_id",
              "timeouts"
            ],
            "azurerm_sentinel_alert_rule_fusion": [
              "enabled",
              "id",
              "source.enabled",
              "source.sub_type.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "alert_rule_template_guid",
              "log_analytics_workspace_id",
              "name",
              "source.name",
              "source.sub_type.name",
              "source.sub_type.severities_allowed",
              "source",
              "source.sub_type",
              "timeouts"
            ],
            "azurerm_sentinel_alert_rule_machine_learning_behavior_analytics": [
              "enabled",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "alert_rule_template_guid",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_alert_rule_ms_security_incident": [
              "alert_rule_template_guid",
              "description",
              "display_name_exclude_filter",
              "display_name_filter",
              "enabled",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "display_name",
              "log_analytics_workspace_id",
              "name",
              "product_filter",
              "severity_filter",
              "timeouts"
            ],
            "azurerm_sentinel_alert_rule_nrt": [
              "alert_rule_template_guid",
              "alert_rule_template_version",
              "custom_details",
              "description",
              "enabled",
              "id",
              "suppression_duration",
              "suppression_enabled",
              "tactics",
              "techniques",
              "alert_details_override.description_format",
              "alert_details_override.display_name_format",
              "alert_details_override.severity_column_name",
              "alert_details_override.tactics_column_name",
              "incident.grouping.by_alert_details",
              "incident.grouping.by_custom_details",
              "incident.grouping.by_entities",
              "incident.grouping.enabled",
              "incident.grouping.entity_matching_method",
              "incident.grouping.lookback_duration",
              "incident.grouping.reopen_closed_incidents",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "display_name",
              "log_analytics_workspace_id",
              "name",
              "query",
              "severity",
              "entity_mapping.entity_type",
              "entity_mapping.field_mapping.column_name",
              "entity_mapping.field_mapping.identifier",
              "incident.create_incident_enabled",
              "alert_details_override",
              "entity_mapping",
              "entity_mapping.field_mapping",
              "incident",
              "incident.grouping",
              "timeouts"
            ],
            "azurerm_sentinel_alert_rule_scheduled": [
              "alert_rule_template_guid",
              "alert_rule_template_version",
              "custom_details",
              "description",
              "enabled",
              "id",
              "query_frequency",
              "query_period",
              "suppression_duration",
              "suppression_enabled",
              "tactics",
              "techniques",
              "trigger_operator",
              "trigger_threshold",
              "alert_details_override.description_format",
              "alert_details_override.display_name_format",
              "alert_details_override.severity_column_name",
              "alert_details_override.tactics_column_name",
              "incident_configuration.grouping.enabled",
              "incident_configuration.grouping.entity_matching_method",
              "incident_configuration.grouping.group_by_alert_details",
              "incident_configuration.grouping.group_by_custom_details",
              "incident_configuration.grouping.group_by_entities",
              "incident_configuration.grouping.lookback_duration",
              "incident_configuration.grouping.reopen_closed_incidents",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "display_name",
              "log_analytics_workspace_id",
              "name",
              "query",
              "severity",
              "entity_mapping.entity_type",
              "entity_mapping.field_mapping.column_name",
              "entity_mapping.field_mapping.identifier",
              "event_grouping.aggregation_method",
              "incident_configuration.create_incident",
              "alert_details_override",
              "entity_mapping",
              "entity_mapping.field_mapping",
              "event_grouping",
              "incident_configuration",
              "incident_configuration.grouping",
              "timeouts"
            ],
            "azurerm_sentinel_automation_rule": [
              "enabled",
              "expiration",
              "id",
              "action_incident.classification",
              "action_incident.classification_comment",
              "action_incident.labels",
              "action_incident.owner_id",
              "action_incident.severity",
              "action_incident.status",
              "action_playbook.tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "display_name",
              "log_analytics_workspace_id",
              "name",
              "order",
              "action_incident.order",
              "action_playbook.logic_app_id",
              "action_playbook.order",
              "condition.operator",
              "condition.property",
              "condition.values",
              "action_incident",
              "action_playbook",
              "condition",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_aws_cloud_trail": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "aws_role_arn",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_aws_s3": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "aws_role_arn",
              "destination_table",
              "log_analytics_workspace_id",
              "name",
              "sqs_urls",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_azure_active_directory": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_azure_advanced_threat_protection": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_azure_security_center": [
              "id",
              "subscription_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_dynamics_365": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_iot": [
              "id",
              "subscription_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_microsoft_cloud_app_security": [
              "alerts_enabled",
              "discovery_logs_enabled",
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_microsoft_defender_advanced_threat_protection": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_microsoft_threat_protection": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_office_365": [
              "exchange_enabled",
              "id",
              "sharepoint_enabled",
              "teams_enabled",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_office_365_project": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_office_atp": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_office_irm": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_office_power_bi": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_data_connector_threat_intelligence": [
              "id",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_watchlist": [
              "default_duration",
              "description",
              "id",
              "labels",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "display_name",
              "item_search_key",
              "log_analytics_workspace_id",
              "name",
              "timeouts"
            ],
            "azurerm_sentinel_watchlist_item": [
              "id",
              "name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "properties",
              "watchlist_id",
              "timeouts"
            ],
            "azurerm_service_fabric_cluster": [
              "add_on_features",
              "cluster_code_version",
              "id",
              "service_fabric_zonal_upgrade_mode",
              "tags",
              "vmss_zonal_upgrade_mode",
              "certificate.thumbprint_secondary",
              "certificate_common_names.common_names.certificate_issuer_thumbprint",
              "client_certificate_common_name.issuer_thumbprint",
              "fabric_settings.parameters",
              "node_type.capacities",
              "node_type.durability_level",
              "node_type.is_stateless",
              "node_type.multiple_availability_zones",
              "node_type.placement_properties",
              "node_type.reverse_proxy_endpoint_port",
              "reverse_proxy_certificate.thumbprint_secondary",
              "reverse_proxy_certificate_common_names.common_names.certificate_issuer_thumbprint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "upgrade_policy.force_restart_enabled",
              "upgrade_policy.health_check_retry_timeout",
              "upgrade_policy.health_check_stable_duration",
              "upgrade_policy.health_check_wait_duration",
              "upgrade_policy.upgrade_domain_timeout",
              "upgrade_policy.upgrade_replica_set_check_timeout",
              "upgrade_policy.upgrade_timeout",
              "upgrade_policy.delta_health_policy.max_delta_unhealthy_applications_percent",
              "upgrade_policy.delta_health_policy.max_delta_unhealthy_nodes_percent",
              "upgrade_policy.delta_health_policy.max_upgrade_domain_delta_unhealthy_nodes_percent",
              "upgrade_policy.health_policy.max_unhealthy_applications_percent",
              "upgrade_policy.health_policy.max_unhealthy_nodes_percent",
              "location",
              "management_endpoint",
              "name",
              "reliability_level",
              "resource_group_name",
              "upgrade_mode",
              "vm_image",
              "azure_active_directory.client_application_id",
              "azure_active_directory.cluster_application_id",
              "azure_active_directory.tenant_id",
              "certificate.thumbprint",
              "certificate.x509_store_name",
              "certificate_common_names.x509_store_name",
              "certificate_common_names.common_names.certificate_common_name",
              "client_certificate_common_name.common_name",
              "client_certificate_common_name.is_admin",
              "client_certificate_thumbprint.is_admin",
              "client_certificate_thumbprint.thumbprint",
              "diagnostics_config.blob_endpoint",
              "diagnostics_config.protected_account_key_name",
              "diagnostics_config.queue_endpoint",
              "diagnostics_config.storage_account_name",
              "diagnostics_config.table_endpoint",
              "fabric_settings.name",
              "node_type.client_endpoint_port",
              "node_type.http_endpoint_port",
              "node_type.instance_count",
              "node_type.is_primary",
              "node_type.name",
              "node_type.application_ports.end_port",
              "node_type.application_ports.start_port",
              "node_type.ephemeral_ports.end_port",
              "node_type.ephemeral_ports.start_port",
              "reverse_proxy_certificate.thumbprint",
              "reverse_proxy_certificate.x509_store_name",
              "reverse_proxy_certificate_common_names.x509_store_name",
              "reverse_proxy_certificate_common_names.common_names.certificate_common_name",
              "azure_active_directory",
              "certificate",
              "certificate_common_names",
              "certificate_common_names.common_names",
              "client_certificate_common_name",
              "client_certificate_thumbprint",
              "diagnostics_config",
              "fabric_settings",
              "node_type",
              "node_type.application_ports",
              "node_type.ephemeral_ports",
              "reverse_proxy_certificate",
              "reverse_proxy_certificate_common_names",
              "reverse_proxy_certificate_common_names.common_names",
              "timeouts",
              "upgrade_policy",
              "upgrade_policy.delta_health_policy",
              "upgrade_policy.health_policy"
            ],
            "azurerm_service_fabric_managed_cluster": [
              "backup_service_enabled",
              "dns_name",
              "dns_service_enabled",
              "id",
              "password",
              "sku",
              "tags",
              "upgrade_wave",
              "username",
              "authentication.certificate.common_name",
              "lb_rule.probe_request_path",
              "node_type.capacities",
              "node_type.data_disk_type",
              "node_type.multiple_placement_groups_enabled",
              "node_type.placement_properties",
              "node_type.primary",
              "node_type.stateless",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "client_connection_port",
              "http_gateway_port",
              "location",
              "name",
              "resource_group_name",
              "authentication.active_directory.client_application_id",
              "authentication.active_directory.cluster_application_id",
              "authentication.active_directory.tenant_id",
              "authentication.certificate.thumbprint",
              "authentication.certificate.type",
              "custom_fabric_setting.parameter",
              "custom_fabric_setting.section",
              "custom_fabric_setting.value",
              "lb_rule.backend_port",
              "lb_rule.frontend_port",
              "lb_rule.probe_protocol",
              "lb_rule.protocol",
              "node_type.application_port_range",
              "node_type.data_disk_size_gb",
              "node_type.ephemeral_port_range",
              "node_type.name",
              "node_type.vm_image_offer",
              "node_type.vm_image_publisher",
              "node_type.vm_image_sku",
              "node_type.vm_image_version",
              "node_type.vm_instance_count",
              "node_type.vm_size",
              "node_type.vm_secrets.vault_id",
              "node_type.vm_secrets.certificates.store",
              "node_type.vm_secrets.certificates.url",
              "authentication",
              "authentication.active_directory",
              "authentication.certificate",
              "custom_fabric_setting",
              "lb_rule",
              "node_type",
              "node_type.vm_secrets",
              "node_type.vm_secrets.certificates",
              "timeouts"
            ],
            "azurerm_service_plan": [
              "app_service_environment_id",
              "id",
              "maximum_elastic_worker_count",
              "per_site_scaling_enabled",
              "tags",
              "worker_count",
              "zone_balancing_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "os_type",
              "resource_group_name",
              "sku_name",
              "timeouts"
            ],
            "azurerm_servicebus_namespace": [
              "capacity",
              "id",
              "local_auth_enabled",
              "minimum_tls_version",
              "public_network_access_enabled",
              "tags",
              "zone_redundant",
              "customer_managed_key.infrastructure_encryption_enabled",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "customer_managed_key.identity_id",
              "customer_managed_key.key_vault_key_id",
              "identity.type",
              "customer_managed_key",
              "identity",
              "timeouts"
            ],
            "azurerm_servicebus_namespace_authorization_rule": [
              "id",
              "listen",
              "manage",
              "send",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "namespace_id",
              "timeouts"
            ],
            "azurerm_servicebus_namespace_disaster_recovery_config": [
              "alias_authorization_rule_id",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "partner_namespace_id",
              "primary_namespace_id",
              "timeouts"
            ],
            "azurerm_servicebus_namespace_network_rule_set": [
              "default_action",
              "id",
              "ip_rules",
              "public_network_access_enabled",
              "trusted_services_allowed",
              "network_rules.ignore_missing_vnet_service_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "namespace_id",
              "network_rules.subnet_id",
              "network_rules",
              "timeouts"
            ],
            "azurerm_servicebus_queue": [
              "auto_delete_on_idle",
              "dead_lettering_on_message_expiration",
              "default_message_ttl",
              "duplicate_detection_history_time_window",
              "enable_batched_operations",
              "enable_express",
              "enable_partitioning",
              "forward_dead_lettered_messages_to",
              "forward_to",
              "id",
              "lock_duration",
              "max_delivery_count",
              "max_message_size_in_kilobytes",
              "max_size_in_megabytes",
              "requires_duplicate_detection",
              "requires_session",
              "status",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "namespace_id",
              "timeouts"
            ],
            "azurerm_servicebus_queue_authorization_rule": [
              "id",
              "listen",
              "manage",
              "send",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "queue_id",
              "timeouts"
            ],
            "azurerm_servicebus_subscription": [
              "auto_delete_on_idle",
              "client_scoped_subscription_enabled",
              "dead_lettering_on_filter_evaluation_error",
              "dead_lettering_on_message_expiration",
              "default_message_ttl",
              "enable_batched_operations",
              "forward_dead_lettered_messages_to",
              "forward_to",
              "id",
              "lock_duration",
              "requires_session",
              "status",
              "client_scoped_subscription.client_id",
              "client_scoped_subscription.is_client_scoped_subscription_shareable",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "max_delivery_count",
              "name",
              "topic_id",
              "client_scoped_subscription",
              "timeouts"
            ],
            "azurerm_servicebus_subscription_rule": [
              "action",
              "id",
              "sql_filter",
              "correlation_filter.content_type",
              "correlation_filter.correlation_id",
              "correlation_filter.label",
              "correlation_filter.message_id",
              "correlation_filter.properties",
              "correlation_filter.reply_to",
              "correlation_filter.reply_to_session_id",
              "correlation_filter.session_id",
              "correlation_filter.to",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "filter_type",
              "name",
              "subscription_id",
              "correlation_filter",
              "timeouts"
            ],
            "azurerm_servicebus_topic": [
              "auto_delete_on_idle",
              "default_message_ttl",
              "duplicate_detection_history_time_window",
              "enable_batched_operations",
              "enable_express",
              "enable_partitioning",
              "id",
              "max_message_size_in_kilobytes",
              "max_size_in_megabytes",
              "requires_duplicate_detection",
              "status",
              "support_ordering",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "namespace_id",
              "timeouts"
            ],
            "azurerm_servicebus_topic_authorization_rule": [
              "id",
              "listen",
              "manage",
              "send",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "topic_id",
              "timeouts"
            ],
            "azurerm_shared_image": [
              "accelerated_network_support_enabled",
              "architecture",
              "description",
              "disk_types_not_allowed",
              "end_of_life_date",
              "eula",
              "hyper_v_generation",
              "id",
              "max_recommended_memory_in_gb",
              "max_recommended_vcpu_count",
              "min_recommended_memory_in_gb",
              "min_recommended_vcpu_count",
              "privacy_statement_uri",
              "release_note_uri",
              "specialized",
              "tags",
              "trusted_launch_enabled",
              "purchase_plan.product",
              "purchase_plan.publisher",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "gallery_name",
              "location",
              "name",
              "os_type",
              "resource_group_name",
              "identifier.offer",
              "identifier.publisher",
              "identifier.sku",
              "purchase_plan.name",
              "identifier",
              "purchase_plan",
              "timeouts"
            ],
            "azurerm_shared_image_gallery": [
              "description",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_shared_image_version": [
              "blob_uri",
              "end_of_life_date",
              "exclude_from_latest",
              "id",
              "managed_image_id",
              "os_disk_snapshot_id",
              "replication_mode",
              "storage_account_id",
              "tags",
              "target_region.disk_encryption_set_id",
              "target_region.storage_account_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "gallery_name",
              "image_name",
              "location",
              "name",
              "resource_group_name",
              "target_region.name",
              "target_region.regional_replica_count",
              "target_region",
              "timeouts"
            ],
            "azurerm_signalr_service": [
              "connectivity_logs_enabled",
              "id",
              "live_trace_enabled",
              "messaging_logs_enabled",
              "service_mode",
              "tags",
              "live_trace.connectivity_logs_enabled",
              "live_trace.enabled",
              "live_trace.http_request_logs_enabled",
              "live_trace.messaging_logs_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "cors.allowed_origins",
              "sku.capacity",
              "sku.name",
              "upstream_endpoint.category_pattern",
              "upstream_endpoint.event_pattern",
              "upstream_endpoint.hub_pattern",
              "upstream_endpoint.url_template",
              "cors",
              "live_trace",
              "sku",
              "timeouts",
              "upstream_endpoint"
            ],
            "azurerm_signalr_service_network_acl": [
              "id",
              "private_endpoint.allowed_request_types",
              "private_endpoint.denied_request_types",
              "public_network.allowed_request_types",
              "public_network.denied_request_types",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "default_action",
              "signalr_service_id",
              "private_endpoint.id",
              "private_endpoint",
              "public_network",
              "timeouts"
            ],
            "azurerm_signalr_shared_private_link_resource": [
              "id",
              "request_message",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "signalr_service_id",
              "sub_resource_name",
              "target_resource_id",
              "timeouts"
            ],
            "azurerm_site_recovery_fabric": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "recovery_vault_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_site_recovery_network_mapping": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recovery_vault_name",
              "resource_group_name",
              "source_network_id",
              "source_recovery_fabric_name",
              "target_network_id",
              "target_recovery_fabric_name",
              "timeouts"
            ],
            "azurerm_site_recovery_protection_container": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recovery_fabric_name",
              "recovery_vault_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_site_recovery_protection_container_mapping": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recovery_fabric_name",
              "recovery_replication_policy_id",
              "recovery_source_protection_container_name",
              "recovery_target_protection_container_id",
              "recovery_vault_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_site_recovery_replicated_vm": [
              "id",
              "managed_disk",
              "network_interface",
              "target_availability_set_id",
              "target_network_id",
              "target_zone",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recovery_replication_policy_id",
              "recovery_vault_name",
              "resource_group_name",
              "source_recovery_fabric_name",
              "source_recovery_protection_container_name",
              "source_vm_id",
              "target_recovery_fabric_id",
              "target_recovery_protection_container_id",
              "target_resource_group_id",
              "timeouts",
              "managed_disk.disk_id",
              "managed_disk.staging_storage_account_id",
              "managed_disk.target_disk_encryption",
              "managed_disk.target_disk_encryption_set_id",
              "managed_disk.target_disk_type",
              "managed_disk.target_replica_disk_type",
              "managed_disk.target_resource_group_id",
              "network_interface.recovery_public_ip_address_id",
              "network_interface.source_network_interface_id",
              "network_interface.target_static_ip",
              "network_interface.target_subnet_name"
            ],
            "azurerm_site_recovery_replication_policy": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_consistent_snapshot_frequency_in_minutes",
              "name",
              "recovery_point_retention_in_minutes",
              "recovery_vault_name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_snapshot": [
              "disk_size_gb",
              "id",
              "source_resource_id",
              "source_uri",
              "storage_account_id",
              "tags",
              "encryption_settings.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "create_option",
              "location",
              "name",
              "resource_group_name",
              "encryption_settings.disk_encryption_key.secret_url",
              "encryption_settings.disk_encryption_key.source_vault_id",
              "encryption_settings.key_encryption_key.key_url",
              "encryption_settings.key_encryption_key.source_vault_id",
              "encryption_settings",
              "encryption_settings.disk_encryption_key",
              "encryption_settings.key_encryption_key",
              "timeouts"
            ],
            "azurerm_source_control_token": [
              "id",
              "token_secret",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "token",
              "type",
              "timeouts"
            ],
            "azurerm_spatial_anchors_account": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_spring_cloud_accelerator": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "spring_cloud_service_id",
              "timeouts"
            ],
            "azurerm_spring_cloud_active_deployment": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "deployment_name",
              "spring_cloud_app_id",
              "timeouts"
            ],
            "azurerm_spring_cloud_api_portal": [
              "gateway_ids",
              "https_only_enabled",
              "id",
              "instance_count",
              "public_network_access_enabled",
              "sso.client_id",
              "sso.client_secret",
              "sso.issuer_uri",
              "sso.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_service_id",
              "sso",
              "timeouts"
            ],
            "azurerm_spring_cloud_api_portal_custom_domain": [
              "id",
              "thumbprint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_api_portal_id",
              "timeouts"
            ],
            "azurerm_spring_cloud_app": [
              "addon_json",
              "https_only",
              "id",
              "is_public",
              "public_endpoint_enabled",
              "tls_enabled",
              "custom_persistent_disk.mount_options",
              "custom_persistent_disk.read_only_enabled",
              "identity.identity_ids",
              "ingress_settings.backend_protocol",
              "ingress_settings.read_timeout_in_seconds",
              "ingress_settings.send_timeout_in_seconds",
              "ingress_settings.session_affinity",
              "ingress_settings.session_cookie_max_age",
              "persistent_disk.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "service_name",
              "custom_persistent_disk.mount_path",
              "custom_persistent_disk.share_name",
              "custom_persistent_disk.storage_name",
              "identity.type",
              "persistent_disk.size_in_gb",
              "custom_persistent_disk",
              "identity",
              "ingress_settings",
              "persistent_disk",
              "timeouts"
            ],
            "azurerm_spring_cloud_app_cosmosdb_association": [
              "cosmosdb_cassandra_keyspace_name",
              "cosmosdb_gremlin_database_name",
              "cosmosdb_gremlin_graph_name",
              "cosmosdb_mongo_database_name",
              "cosmosdb_sql_database_name",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_type",
              "cosmosdb_access_key",
              "cosmosdb_account_id",
              "name",
              "spring_cloud_app_id",
              "timeouts"
            ],
            "azurerm_spring_cloud_app_mysql_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "database_name",
              "mysql_server_id",
              "name",
              "password",
              "spring_cloud_app_id",
              "username",
              "timeouts"
            ],
            "azurerm_spring_cloud_app_redis_association": [
              "id",
              "ssl_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "redis_access_key",
              "redis_cache_id",
              "spring_cloud_app_id",
              "timeouts"
            ],
            "azurerm_spring_cloud_application_live_view": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "spring_cloud_service_id",
              "timeouts"
            ],
            "azurerm_spring_cloud_build_deployment": [
              "addon_json",
              "environment_variables",
              "id",
              "instance_count",
              "quota.cpu",
              "quota.memory",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "build_result_id",
              "name",
              "spring_cloud_app_id",
              "quota",
              "timeouts"
            ],
            "azurerm_spring_cloud_build_pack_binding": [
              "binding_type",
              "id",
              "launch.properties",
              "launch.secrets",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_builder_id",
              "launch",
              "timeouts"
            ],
            "azurerm_spring_cloud_builder": [
              "id",
              "build_pack_group.build_pack_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_service_id",
              "build_pack_group.name",
              "stack.id",
              "stack.version",
              "build_pack_group",
              "stack",
              "timeouts"
            ],
            "azurerm_spring_cloud_certificate": [
              "certificate_content",
              "id",
              "key_vault_certificate_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "resource_group_name",
              "service_name",
              "timeouts"
            ],
            "azurerm_spring_cloud_configuration_service": [
              "id",
              "repository.host_key",
              "repository.host_key_algorithm",
              "repository.password",
              "repository.private_key",
              "repository.search_paths",
              "repository.strict_host_key_checking",
              "repository.username",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_service_id",
              "repository.label",
              "repository.name",
              "repository.patterns",
              "repository.uri",
              "repository",
              "timeouts"
            ],
            "azurerm_spring_cloud_connection": [
              "client_type",
              "id",
              "vnet_solution",
              "authentication.certificate",
              "authentication.client_id",
              "authentication.name",
              "authentication.principal_id",
              "authentication.secret",
              "authentication.subscription_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_id",
              "target_resource_id",
              "authentication.type",
              "authentication",
              "timeouts"
            ],
            "azurerm_spring_cloud_container_deployment": [
              "addon_json",
              "arguments",
              "commands",
              "environment_variables",
              "id",
              "instance_count",
              "language_framework",
              "quota.cpu",
              "quota.memory",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "image",
              "name",
              "server",
              "spring_cloud_app_id",
              "quota",
              "timeouts"
            ],
            "azurerm_spring_cloud_custom_domain": [
              "certificate_name",
              "id",
              "thumbprint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_app_id",
              "timeouts"
            ],
            "azurerm_spring_cloud_customized_accelerator": [
              "accelerator_tags",
              "description",
              "display_name",
              "icon_url",
              "id",
              "git_repository.branch",
              "git_repository.commit",
              "git_repository.git_tag",
              "git_repository.interval_in_seconds",
              "git_repository.ssh_auth.host_key",
              "git_repository.ssh_auth.host_key_algorithm",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_accelerator_id",
              "git_repository.url",
              "git_repository.basic_auth.password",
              "git_repository.basic_auth.username",
              "git_repository.ssh_auth.private_key",
              "git_repository",
              "git_repository.basic_auth",
              "git_repository.ssh_auth",
              "timeouts"
            ],
            "azurerm_spring_cloud_dev_tool_portal": [
              "application_accelerator_enabled",
              "application_live_view_enabled",
              "id",
              "public_network_access_enabled",
              "sso.client_id",
              "sso.client_secret",
              "sso.metadata_url",
              "sso.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_service_id",
              "sso",
              "timeouts"
            ],
            "azurerm_spring_cloud_gateway": [
              "https_only",
              "id",
              "instance_count",
              "public_network_access_enabled",
              "api_metadata.description",
              "api_metadata.documentation_url",
              "api_metadata.server_url",
              "api_metadata.title",
              "api_metadata.version",
              "cors.allowed_headers",
              "cors.allowed_methods",
              "cors.allowed_origins",
              "cors.credentials_allowed",
              "cors.exposed_headers",
              "cors.max_age_seconds",
              "quota.cpu",
              "quota.memory",
              "sso.client_id",
              "sso.client_secret",
              "sso.issuer_uri",
              "sso.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_service_id",
              "api_metadata",
              "cors",
              "quota",
              "sso",
              "timeouts"
            ],
            "azurerm_spring_cloud_gateway_custom_domain": [
              "id",
              "thumbprint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_gateway_id",
              "timeouts"
            ],
            "azurerm_spring_cloud_gateway_route_config": [
              "filters",
              "id",
              "predicates",
              "protocol",
              "spring_cloud_app_id",
              "sso_validation_enabled",
              "open_api.uri",
              "route.classification_tags",
              "route.description",
              "route.filters",
              "route.predicates",
              "route.sso_validation_enabled",
              "route.title",
              "route.token_relay",
              "route.uri",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_gateway_id",
              "route.order",
              "open_api",
              "route",
              "timeouts"
            ],
            "azurerm_spring_cloud_java_deployment": [
              "environment_variables",
              "id",
              "instance_count",
              "jvm_options",
              "runtime_version",
              "quota.cpu",
              "quota.memory",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_app_id",
              "quota",
              "timeouts"
            ],
            "azurerm_spring_cloud_service": [
              "build_agent_pool_size",
              "id",
              "log_stream_public_endpoint_enabled",
              "service_registry_enabled",
              "sku_name",
              "tags",
              "zone_redundant",
              "config_server_git_setting.label",
              "config_server_git_setting.search_paths",
              "config_server_git_setting.repository.label",
              "config_server_git_setting.repository.pattern",
              "config_server_git_setting.repository.search_paths",
              "config_server_git_setting.repository.ssh_auth.host_key",
              "config_server_git_setting.repository.ssh_auth.host_key_algorithm",
              "config_server_git_setting.repository.ssh_auth.strict_host_key_checking_enabled",
              "config_server_git_setting.ssh_auth.host_key",
              "config_server_git_setting.ssh_auth.host_key_algorithm",
              "config_server_git_setting.ssh_auth.strict_host_key_checking_enabled",
              "network.app_network_resource_group",
              "network.read_timeout_seconds",
              "network.service_runtime_network_resource_group",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "trace.connection_string",
              "trace.sample_rate",
              "location",
              "name",
              "resource_group_name",
              "config_server_git_setting.uri",
              "config_server_git_setting.http_basic_auth.password",
              "config_server_git_setting.http_basic_auth.username",
              "config_server_git_setting.repository.name",
              "config_server_git_setting.repository.uri",
              "config_server_git_setting.repository.http_basic_auth.password",
              "config_server_git_setting.repository.http_basic_auth.username",
              "config_server_git_setting.repository.ssh_auth.private_key",
              "config_server_git_setting.ssh_auth.private_key",
              "network.app_subnet_id",
              "network.cidr_ranges",
              "network.service_runtime_subnet_id",
              "config_server_git_setting",
              "config_server_git_setting.http_basic_auth",
              "config_server_git_setting.repository",
              "config_server_git_setting.repository.http_basic_auth",
              "config_server_git_setting.repository.ssh_auth",
              "config_server_git_setting.ssh_auth",
              "network",
              "timeouts",
              "trace"
            ],
            "azurerm_spring_cloud_storage": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "spring_cloud_service_id",
              "storage_account_key",
              "storage_account_name",
              "timeouts"
            ],
            "azurerm_sql_active_directory_administrator": [
              "azuread_authentication_only",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "login",
              "object_id",
              "resource_group_name",
              "server_name",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_sql_database": [
              "collation",
              "create_mode",
              "edition",
              "elastic_pool_name",
              "id",
              "max_size_bytes",
              "max_size_gb",
              "read_scale",
              "requested_service_objective_id",
              "requested_service_objective_name",
              "restore_point_in_time",
              "source_database_deletion_date",
              "source_database_id",
              "tags",
              "zone_redundant",
              "import.operation_mode",
              "threat_detection_policy.disabled_alerts",
              "threat_detection_policy.email_account_admins",
              "threat_detection_policy.email_addresses",
              "threat_detection_policy.retention_days",
              "threat_detection_policy.state",
              "threat_detection_policy.storage_account_access_key",
              "threat_detection_policy.storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "server_name",
              "import.administrator_login",
              "import.administrator_login_password",
              "import.authentication_type",
              "import.storage_key",
              "import.storage_key_type",
              "import.storage_uri",
              "import",
              "threat_detection_policy",
              "timeouts"
            ],
            "azurerm_sql_elasticpool": [
              "db_dtu_max",
              "db_dtu_min",
              "id",
              "pool_size",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "dtu",
              "edition",
              "location",
              "name",
              "resource_group_name",
              "server_name",
              "timeouts"
            ],
            "azurerm_sql_failover_group": [
              "databases",
              "id",
              "tags",
              "read_write_endpoint_failover_policy.grace_minutes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "partner_servers.id",
              "read_write_endpoint_failover_policy.mode",
              "readonly_endpoint_failover_policy.mode",
              "partner_servers",
              "read_write_endpoint_failover_policy",
              "readonly_endpoint_failover_policy",
              "timeouts"
            ],
            "azurerm_sql_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip_address",
              "name",
              "resource_group_name",
              "server_name",
              "start_ip_address",
              "timeouts"
            ],
            "azurerm_sql_managed_database": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "sql_managed_instance_id",
              "timeouts"
            ],
            "azurerm_sql_managed_instance": [
              "collation",
              "dns_zone_partner_id",
              "id",
              "minimum_tls_version",
              "proxy_override",
              "public_data_endpoint_enabled",
              "storage_account_type",
              "tags",
              "timezone_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "administrator_login",
              "administrator_login_password",
              "license_type",
              "location",
              "name",
              "resource_group_name",
              "sku_name",
              "storage_size_in_gb",
              "subnet_id",
              "vcores",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_sql_managed_instance_active_directory_administrator": [
              "azuread_authentication_only",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "login",
              "managed_instance_name",
              "object_id",
              "resource_group_name",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_sql_managed_instance_failover_group": [
              "id",
              "readonly_endpoint_failover_policy_enabled",
              "read_write_endpoint_failover_policy.grace_minutes",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "managed_instance_name",
              "name",
              "partner_managed_instance_id",
              "resource_group_name",
              "read_write_endpoint_failover_policy.mode",
              "read_write_endpoint_failover_policy",
              "timeouts"
            ],
            "azurerm_sql_server": [
              "connection_policy",
              "id",
              "tags",
              "threat_detection_policy.disabled_alerts",
              "threat_detection_policy.email_account_admins",
              "threat_detection_policy.email_addresses",
              "threat_detection_policy.retention_days",
              "threat_detection_policy.state",
              "threat_detection_policy.storage_account_access_key",
              "threat_detection_policy.storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "administrator_login",
              "administrator_login_password",
              "location",
              "name",
              "resource_group_name",
              "version",
              "identity.type",
              "identity",
              "threat_detection_policy",
              "timeouts"
            ],
            "azurerm_sql_virtual_network_rule": [
              "id",
              "ignore_missing_vnet_service_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "server_name",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_ssh_public_key": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "public_key",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_stack_hci_cluster": [
              "id",
              "tags",
              "tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "client_id",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_static_site": [
              "id",
              "sku_size",
              "sku_tier",
              "tags",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.type",
              "identity",
              "timeouts"
            ],
            "azurerm_static_site_custom_domain": [
              "id",
              "validation_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "domain_name",
              "static_site_id",
              "timeouts"
            ],
            "azurerm_storage_account": [
              "access_tier",
              "account_kind",
              "allow_nested_items_to_be_public",
              "cross_tenant_replication_enabled",
              "default_to_oauth_authentication",
              "edge_zone",
              "enable_https_traffic_only",
              "id",
              "infrastructure_encryption_enabled",
              "is_hns_enabled",
              "large_file_share_enabled",
              "min_tls_version",
              "nfsv3_enabled",
              "public_network_access_enabled",
              "queue_encryption_key_type",
              "sftp_enabled",
              "shared_access_key_enabled",
              "table_encryption_key_type",
              "tags",
              "blob_properties.change_feed_enabled",
              "blob_properties.change_feed_retention_in_days",
              "blob_properties.default_service_version",
              "blob_properties.last_access_time_enabled",
              "blob_properties.versioning_enabled",
              "blob_properties.container_delete_retention_policy.days",
              "blob_properties.delete_retention_policy.days",
              "custom_domain.use_subdomain",
              "identity.identity_ids",
              "network_rules.bypass",
              "network_rules.ip_rules",
              "network_rules.virtual_network_subnet_ids",
              "network_rules.private_link_access.endpoint_tenant_id",
              "queue_properties.hour_metrics.include_apis",
              "queue_properties.hour_metrics.retention_policy_days",
              "queue_properties.logging.retention_policy_days",
              "queue_properties.minute_metrics.include_apis",
              "queue_properties.minute_metrics.retention_policy_days",
              "routing.choice",
              "routing.publish_internet_endpoints",
              "routing.publish_microsoft_endpoints",
              "sas_policy.expiration_action",
              "share_properties.retention_policy.days",
              "share_properties.smb.authentication_types",
              "share_properties.smb.channel_encryption_type",
              "share_properties.smb.kerberos_ticket_encryption_type",
              "share_properties.smb.multichannel_enabled",
              "share_properties.smb.versions",
              "static_website.error_404_document",
              "static_website.index_document",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "account_replication_type",
              "account_tier",
              "location",
              "name",
              "resource_group_name",
              "azure_files_authentication.directory_type",
              "azure_files_authentication.active_directory.domain_guid",
              "azure_files_authentication.active_directory.domain_name",
              "azure_files_authentication.active_directory.domain_sid",
              "azure_files_authentication.active_directory.forest_name",
              "azure_files_authentication.active_directory.netbios_domain_name",
              "azure_files_authentication.active_directory.storage_sid",
              "blob_properties.cors_rule.allowed_headers",
              "blob_properties.cors_rule.allowed_methods",
              "blob_properties.cors_rule.allowed_origins",
              "blob_properties.cors_rule.exposed_headers",
              "blob_properties.cors_rule.max_age_in_seconds",
              "blob_properties.restore_policy.days",
              "custom_domain.name",
              "customer_managed_key.key_vault_key_id",
              "customer_managed_key.user_assigned_identity_id",
              "identity.type",
              "immutability_policy.allow_protected_append_writes",
              "immutability_policy.period_since_creation_in_days",
              "immutability_policy.state",
              "network_rules.default_action",
              "network_rules.private_link_access.endpoint_resource_id",
              "queue_properties.cors_rule.allowed_headers",
              "queue_properties.cors_rule.allowed_methods",
              "queue_properties.cors_rule.allowed_origins",
              "queue_properties.cors_rule.exposed_headers",
              "queue_properties.cors_rule.max_age_in_seconds",
              "queue_properties.hour_metrics.enabled",
              "queue_properties.hour_metrics.version",
              "queue_properties.logging.delete",
              "queue_properties.logging.read",
              "queue_properties.logging.version",
              "queue_properties.logging.write",
              "queue_properties.minute_metrics.enabled",
              "queue_properties.minute_metrics.version",
              "sas_policy.expiration_period",
              "share_properties.cors_rule.allowed_headers",
              "share_properties.cors_rule.allowed_methods",
              "share_properties.cors_rule.allowed_origins",
              "share_properties.cors_rule.exposed_headers",
              "share_properties.cors_rule.max_age_in_seconds",
              "azure_files_authentication",
              "azure_files_authentication.active_directory",
              "blob_properties",
              "blob_properties.container_delete_retention_policy",
              "blob_properties.cors_rule",
              "blob_properties.delete_retention_policy",
              "blob_properties.restore_policy",
              "custom_domain",
              "customer_managed_key",
              "identity",
              "immutability_policy",
              "network_rules",
              "network_rules.private_link_access",
              "queue_properties",
              "queue_properties.cors_rule",
              "queue_properties.hour_metrics",
              "queue_properties.logging",
              "queue_properties.minute_metrics",
              "routing",
              "sas_policy",
              "share_properties",
              "share_properties.cors_rule",
              "share_properties.retention_policy",
              "share_properties.smb",
              "static_website",
              "timeouts"
            ],
            "azurerm_storage_account_customer_managed_key": [
              "id",
              "key_version",
              "user_assigned_identity_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "key_name",
              "key_vault_id",
              "storage_account_id",
              "timeouts"
            ],
            "azurerm_storage_account_network_rules": [
              "bypass",
              "id",
              "ip_rules",
              "virtual_network_subnet_ids",
              "private_link_access.endpoint_tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "default_action",
              "storage_account_id",
              "private_link_access.endpoint_resource_id",
              "private_link_access",
              "timeouts"
            ],
            "azurerm_storage_blob": [
              "access_tier",
              "cache_control",
              "content_md5",
              "content_type",
              "id",
              "metadata",
              "parallelism",
              "size",
              "source",
              "source_content",
              "source_uri",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "storage_account_name",
              "storage_container_name",
              "type",
              "timeouts"
            ],
            "azurerm_storage_blob_inventory_policy": [
              "id",
              "rules.filter.include_blob_versions",
              "rules.filter.include_deleted",
              "rules.filter.include_snapshots",
              "rules.filter.prefix_match",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "storage_account_id",
              "rules.format",
              "rules.name",
              "rules.schedule",
              "rules.schema_fields",
              "rules.scope",
              "rules.storage_container_name",
              "rules.filter.blob_types",
              "rules",
              "rules.filter",
              "timeouts"
            ],
            "azurerm_storage_container": [
              "container_access_type",
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "storage_account_name",
              "timeouts"
            ],
            "azurerm_storage_data_lake_gen2_filesystem": [
              "group",
              "id",
              "owner",
              "properties",
              "ace.id",
              "ace.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "storage_account_id",
              "ace.permissions",
              "ace.type",
              "ace",
              "timeouts"
            ],
            "azurerm_storage_data_lake_gen2_path": [
              "group",
              "id",
              "owner",
              "ace.id",
              "ace.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "filesystem_name",
              "path",
              "resource",
              "storage_account_id",
              "ace.permissions",
              "ace.type",
              "ace",
              "timeouts"
            ],
            "azurerm_storage_encryption_scope": [
              "id",
              "infrastructure_encryption_required",
              "key_vault_key_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "source",
              "storage_account_id",
              "timeouts"
            ],
            "azurerm_storage_management_policy": [
              "id",
              "rule.actions.base_blob.delete_after_days_since_creation_greater_than",
              "rule.actions.base_blob.delete_after_days_since_last_access_time_greater_than",
              "rule.actions.base_blob.delete_after_days_since_modification_greater_than",
              "rule.actions.base_blob.tier_to_archive_after_days_since_creation_greater_than",
              "rule.actions.base_blob.tier_to_archive_after_days_since_last_access_time_greater_than",
              "rule.actions.base_blob.tier_to_archive_after_days_since_last_tier_change_greater_than",
              "rule.actions.base_blob.tier_to_archive_after_days_since_modification_greater_than",
              "rule.actions.base_blob.tier_to_cool_after_days_since_creation_greater_than",
              "rule.actions.base_blob.tier_to_cool_after_days_since_last_access_time_greater_than",
              "rule.actions.base_blob.tier_to_cool_after_days_since_modification_greater_than",
              "rule.actions.snapshot.change_tier_to_archive_after_days_since_creation",
              "rule.actions.snapshot.change_tier_to_cool_after_days_since_creation",
              "rule.actions.snapshot.delete_after_days_since_creation_greater_than",
              "rule.actions.snapshot.tier_to_archive_after_days_since_last_tier_change_greater_than",
              "rule.actions.version.change_tier_to_archive_after_days_since_creation",
              "rule.actions.version.change_tier_to_cool_after_days_since_creation",
              "rule.actions.version.delete_after_days_since_creation",
              "rule.actions.version.tier_to_archive_after_days_since_last_tier_change_greater_than",
              "rule.filters.prefix_match",
              "rule.filters.match_blob_index_tag.operation",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "storage_account_id",
              "rule.enabled",
              "rule.name",
              "rule.filters.blob_types",
              "rule.filters.match_blob_index_tag.name",
              "rule.filters.match_blob_index_tag.value",
              "rule",
              "rule.actions",
              "rule.actions.base_blob",
              "rule.actions.snapshot",
              "rule.actions.version",
              "rule.filters",
              "rule.filters.match_blob_index_tag",
              "timeouts"
            ],
            "azurerm_storage_object_replication": [
              "id",
              "rules.copy_blobs_created_after",
              "rules.filter_out_blobs_with_prefix",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "destination_storage_account_id",
              "source_storage_account_id",
              "rules.destination_container_name",
              "rules.source_container_name",
              "rules",
              "timeouts"
            ],
            "azurerm_storage_queue": [
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "storage_account_name",
              "timeouts"
            ],
            "azurerm_storage_share": [
              "access_tier",
              "enabled_protocol",
              "id",
              "metadata",
              "acl.access_policy.expiry",
              "acl.access_policy.start",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "quota",
              "storage_account_name",
              "acl.id",
              "acl.access_policy.permissions",
              "acl",
              "acl.access_policy",
              "timeouts"
            ],
            "azurerm_storage_share_directory": [
              "id",
              "metadata",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "share_name",
              "storage_account_name",
              "timeouts"
            ],
            "azurerm_storage_share_file": [
              "content_disposition",
              "content_encoding",
              "content_md5",
              "content_type",
              "id",
              "metadata",
              "path",
              "source",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "storage_share_id",
              "timeouts"
            ],
            "azurerm_storage_sync": [
              "id",
              "incoming_traffic_policy",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_storage_sync_cloud_endpoint": [
              "id",
              "storage_account_tenant_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "file_share_name",
              "name",
              "storage_account_id",
              "storage_sync_group_id",
              "timeouts"
            ],
            "azurerm_storage_sync_group": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "storage_sync_id",
              "timeouts"
            ],
            "azurerm_storage_table": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "storage_account_name",
              "acl.id",
              "acl.access_policy.expiry",
              "acl.access_policy.permissions",
              "acl.access_policy.start",
              "acl",
              "acl.access_policy",
              "timeouts"
            ],
            "azurerm_storage_table_entity": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "entity",
              "partition_key",
              "row_key",
              "storage_account_name",
              "table_name",
              "timeouts"
            ],
            "azurerm_stream_analytics_cluster": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "streaming_capacity",
              "timeouts"
            ],
            "azurerm_stream_analytics_function_javascript_uda": [
              "id",
              "input.configuration_parameter",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "script",
              "stream_analytics_job_id",
              "input.type",
              "output.type",
              "input",
              "output",
              "timeouts"
            ],
            "azurerm_stream_analytics_function_javascript_udf": [
              "id",
              "input.configuration_parameter",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "script",
              "stream_analytics_job_name",
              "input.type",
              "output.type",
              "input",
              "output",
              "timeouts"
            ],
            "azurerm_stream_analytics_job": [
              "compatibility_level",
              "content_storage_policy",
              "data_locale",
              "events_late_arrival_max_delay_in_seconds",
              "events_out_of_order_max_delay_in_seconds",
              "events_out_of_order_policy",
              "id",
              "output_error_policy",
              "stream_analytics_cluster_id",
              "streaming_units",
              "tags",
              "type",
              "job_storage_account.authentication_mode",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "transformation_query",
              "identity.type",
              "job_storage_account.account_key",
              "job_storage_account.account_name",
              "identity",
              "job_storage_account",
              "timeouts"
            ],
            "azurerm_stream_analytics_job_schedule": [
              "id",
              "start_time",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "start_mode",
              "stream_analytics_job_id",
              "timeouts"
            ],
            "azurerm_stream_analytics_managed_private_endpoint": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "resource_group_name",
              "stream_analytics_cluster_name",
              "subresource_name",
              "target_resource_id",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_blob": [
              "authentication_mode",
              "batch_max_wait_time",
              "batch_min_rows",
              "id",
              "storage_account_key",
              "serialization.encoding",
              "serialization.field_delimiter",
              "serialization.format",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "date_format",
              "name",
              "path_pattern",
              "resource_group_name",
              "storage_account_name",
              "storage_container_name",
              "stream_analytics_job_name",
              "time_format",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_cosmosdb": [
              "document_id",
              "id",
              "partition_key",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "container_name",
              "cosmosdb_account_key",
              "cosmosdb_sql_database_id",
              "name",
              "stream_analytics_job_id",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_eventhub": [
              "authentication_mode",
              "id",
              "partition_key",
              "property_columns",
              "shared_access_policy_key",
              "shared_access_policy_name",
              "serialization.encoding",
              "serialization.field_delimiter",
              "serialization.format",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "eventhub_name",
              "name",
              "resource_group_name",
              "servicebus_namespace",
              "stream_analytics_job_name",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_function": [
              "batch_max_count",
              "batch_max_in_bytes",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "api_key",
              "function_app",
              "function_name",
              "name",
              "resource_group_name",
              "stream_analytics_job_name",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_mssql": [
              "authentication_mode",
              "id",
              "max_batch_count",
              "max_writer_count",
              "password",
              "user",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "database",
              "name",
              "resource_group_name",
              "server",
              "stream_analytics_job_name",
              "table",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_powerbi": [
              "id",
              "token_user_display_name",
              "token_user_principal_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "dataset",
              "group_id",
              "group_name",
              "name",
              "stream_analytics_job_id",
              "table",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_servicebus_queue": [
              "authentication_mode",
              "id",
              "property_columns",
              "system_property_columns",
              "serialization.encoding",
              "serialization.field_delimiter",
              "serialization.format",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "queue_name",
              "resource_group_name",
              "servicebus_namespace",
              "shared_access_policy_key",
              "shared_access_policy_name",
              "stream_analytics_job_name",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_servicebus_topic": [
              "authentication_mode",
              "id",
              "property_columns",
              "system_property_columns",
              "serialization.encoding",
              "serialization.field_delimiter",
              "serialization.format",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "servicebus_namespace",
              "shared_access_policy_key",
              "shared_access_policy_name",
              "stream_analytics_job_name",
              "topic_name",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_synapse": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "database",
              "name",
              "password",
              "resource_group_name",
              "server",
              "stream_analytics_job_name",
              "table",
              "user",
              "timeouts"
            ],
            "azurerm_stream_analytics_output_table": [
              "columns_to_remove",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "batch_size",
              "name",
              "partition_key",
              "resource_group_name",
              "row_key",
              "storage_account_key",
              "storage_account_name",
              "stream_analytics_job_name",
              "table",
              "timeouts"
            ],
            "azurerm_stream_analytics_reference_input_blob": [
              "authentication_mode",
              "id",
              "serialization.encoding",
              "serialization.field_delimiter",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "date_format",
              "name",
              "path_pattern",
              "resource_group_name",
              "storage_account_key",
              "storage_account_name",
              "storage_container_name",
              "stream_analytics_job_name",
              "time_format",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_stream_analytics_reference_input_mssql": [
              "delta_snapshot_query",
              "id",
              "refresh_interval_duration",
              "table",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "database",
              "full_snapshot_query",
              "name",
              "password",
              "refresh_type",
              "resource_group_name",
              "server",
              "stream_analytics_job_name",
              "username",
              "timeouts"
            ],
            "azurerm_stream_analytics_stream_input_blob": [
              "id",
              "serialization.encoding",
              "serialization.field_delimiter",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "date_format",
              "name",
              "path_pattern",
              "resource_group_name",
              "storage_account_key",
              "storage_account_name",
              "storage_container_name",
              "stream_analytics_job_name",
              "time_format",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_stream_analytics_stream_input_eventhub": [
              "authentication_mode",
              "eventhub_consumer_group_name",
              "id",
              "partition_key",
              "shared_access_policy_key",
              "shared_access_policy_name",
              "serialization.encoding",
              "serialization.field_delimiter",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "eventhub_name",
              "name",
              "resource_group_name",
              "servicebus_namespace",
              "stream_analytics_job_name",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_stream_analytics_stream_input_eventhub_v2": [
              "authentication_mode",
              "eventhub_consumer_group_name",
              "id",
              "partition_key",
              "shared_access_policy_key",
              "shared_access_policy_name",
              "serialization.encoding",
              "serialization.field_delimiter",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "eventhub_name",
              "name",
              "servicebus_namespace",
              "stream_analytics_job_id",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_stream_analytics_stream_input_iothub": [
              "id",
              "serialization.encoding",
              "serialization.field_delimiter",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "endpoint",
              "eventhub_consumer_group_name",
              "iothub_namespace",
              "name",
              "resource_group_name",
              "shared_access_policy_key",
              "shared_access_policy_name",
              "stream_analytics_job_name",
              "serialization.type",
              "serialization",
              "timeouts"
            ],
            "azurerm_subnet": [
              "enforce_private_link_endpoint_network_policies",
              "enforce_private_link_service_network_policies",
              "id",
              "private_endpoint_network_policies_enabled",
              "private_link_service_network_policies_enabled",
              "service_endpoint_policy_ids",
              "service_endpoints",
              "delegation.service_delegation.actions",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "address_prefixes",
              "name",
              "resource_group_name",
              "virtual_network_name",
              "delegation.name",
              "delegation.service_delegation.name",
              "delegation",
              "delegation.service_delegation",
              "timeouts"
            ],
            "azurerm_subnet_nat_gateway_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "nat_gateway_id",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_subnet_network_security_group_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "network_security_group_id",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_subnet_route_table_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "route_table_id",
              "subnet_id",
              "timeouts"
            ],
            "azurerm_subnet_service_endpoint_storage_policy": [
              "id",
              "tags",
              "definition.description",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "definition.name",
              "definition.service_resources",
              "definition",
              "timeouts"
            ],
            "azurerm_subscription": [
              "alias",
              "billing_scope_id",
              "id",
              "subscription_id",
              "tags",
              "workload",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "subscription_name",
              "timeouts"
            ],
            "azurerm_subscription_cost_management_export": [
              "active",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "recurrence_period_end_date",
              "recurrence_period_start_date",
              "recurrence_type",
              "subscription_id",
              "export_data_options.time_frame",
              "export_data_options.type",
              "export_data_storage_location.container_id",
              "export_data_storage_location.root_folder_path",
              "export_data_options",
              "export_data_storage_location",
              "timeouts"
            ],
            "azurerm_subscription_policy_assignment": [
              "description",
              "display_name",
              "enforce",
              "id",
              "location",
              "metadata",
              "not_scopes",
              "parameters",
              "identity.identity_ids",
              "non_compliance_message.policy_definition_reference_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "policy_definition_id",
              "subscription_id",
              "identity.type",
              "non_compliance_message.content",
              "identity",
              "non_compliance_message",
              "timeouts"
            ],
            "azurerm_subscription_policy_exemption": [
              "description",
              "display_name",
              "expires_on",
              "id",
              "metadata",
              "policy_definition_reference_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "exemption_category",
              "name",
              "policy_assignment_id",
              "subscription_id",
              "timeouts"
            ],
            "azurerm_subscription_policy_remediation": [
              "failure_percentage",
              "id",
              "location_filters",
              "parallel_deployments",
              "policy_definition_id",
              "policy_definition_reference_id",
              "resource_count",
              "resource_discovery_mode",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "policy_assignment_id",
              "subscription_id",
              "timeouts"
            ],
            "azurerm_subscription_template_deployment": [
              "debug_level",
              "id",
              "parameters_content",
              "tags",
              "template_content",
              "template_spec_version_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "timeouts"
            ],
            "azurerm_synapse_firewall_rule": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "end_ip_address",
              "name",
              "start_ip_address",
              "synapse_workspace_id",
              "timeouts"
            ],
            "azurerm_synapse_integration_runtime_azure": [
              "compute_type",
              "core_count",
              "description",
              "id",
              "time_to_live_min",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "synapse_workspace_id",
              "timeouts"
            ],
            "azurerm_synapse_integration_runtime_self_hosted": [
              "description",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "synapse_workspace_id",
              "timeouts"
            ],
            "azurerm_synapse_linked_service": [
              "additional_properties",
              "annotations",
              "description",
              "id",
              "parameters",
              "integration_runtime.parameters",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "synapse_workspace_id",
              "type",
              "type_properties_json",
              "integration_runtime.name",
              "integration_runtime",
              "timeouts"
            ],
            "azurerm_synapse_managed_private_endpoint": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "subresource_name",
              "synapse_workspace_id",
              "target_resource_id",
              "timeouts"
            ],
            "azurerm_synapse_private_link_hub": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_synapse_role_assignment": [
              "id",
              "synapse_spark_pool_id",
              "synapse_workspace_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "principal_id",
              "role_name",
              "timeouts"
            ],
            "azurerm_synapse_spark_pool": [
              "cache_size",
              "compute_isolation_enabled",
              "dynamic_executor_allocation_enabled",
              "id",
              "max_executors",
              "min_executors",
              "node_count",
              "session_level_packages_enabled",
              "spark_events_folder",
              "spark_log_folder",
              "spark_version",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "node_size",
              "node_size_family",
              "synapse_workspace_id",
              "auto_pause.delay_in_minutes",
              "auto_scale.max_node_count",
              "auto_scale.min_node_count",
              "library_requirement.content",
              "library_requirement.filename",
              "spark_config.content",
              "spark_config.filename",
              "auto_pause",
              "auto_scale",
              "library_requirement",
              "spark_config",
              "timeouts"
            ],
            "azurerm_synapse_sql_pool": [
              "collation",
              "create_mode",
              "data_encrypted",
              "id",
              "recovery_database_id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "sku_name",
              "synapse_workspace_id",
              "restore.point_in_time",
              "restore.source_database_id",
              "restore",
              "timeouts"
            ],
            "azurerm_synapse_sql_pool_extended_auditing_policy": [
              "id",
              "log_monitoring_enabled",
              "retention_in_days",
              "storage_account_access_key",
              "storage_account_access_key_is_secondary",
              "storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "sql_pool_id",
              "timeouts"
            ],
            "azurerm_synapse_sql_pool_security_alert_policy": [
              "disabled_alerts",
              "email_account_admins_enabled",
              "email_addresses",
              "id",
              "retention_days",
              "storage_account_access_key",
              "storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "policy_state",
              "sql_pool_id",
              "timeouts"
            ],
            "azurerm_synapse_sql_pool_vulnerability_assessment": [
              "id",
              "storage_account_access_key",
              "storage_container_sas_key",
              "recurring_scans.email_subscription_admins_enabled",
              "recurring_scans.emails",
              "recurring_scans.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "sql_pool_security_alert_policy_id",
              "storage_container_path",
              "recurring_scans",
              "timeouts"
            ],
            "azurerm_synapse_sql_pool_vulnerability_assessment_baseline": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "rule_name",
              "sql_pool_vulnerability_assessment_id",
              "baseline.result",
              "baseline",
              "timeouts"
            ],
            "azurerm_synapse_sql_pool_workload_classifier": [
              "context",
              "end_time",
              "id",
              "importance",
              "label",
              "start_time",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "member_name",
              "name",
              "workload_group_id",
              "timeouts"
            ],
            "azurerm_synapse_sql_pool_workload_group": [
              "id",
              "importance",
              "max_resource_percent_per_request",
              "min_resource_percent_per_request",
              "query_execution_timeout_in_seconds",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "max_resource_percent",
              "min_resource_percent",
              "name",
              "sql_pool_id",
              "timeouts"
            ],
            "azurerm_synapse_workspace": [
              "aad_admin",
              "compute_subnet_id",
              "data_exfiltration_protection_enabled",
              "id",
              "linking_allowed_for_aad_tenant_ids",
              "managed_resource_group_name",
              "managed_virtual_network_enabled",
              "public_network_access_enabled",
              "purview_id",
              "sql_aad_admin",
              "sql_administrator_login",
              "sql_administrator_login_password",
              "sql_identity_control_enabled",
              "tags",
              "azure_devops_repo.last_commit_id",
              "azure_devops_repo.tenant_id",
              "customer_managed_key.key_name",
              "github_repo.git_url",
              "github_repo.last_commit_id",
              "identity.identity_ids",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "storage_data_lake_gen2_filesystem_id",
              "azure_devops_repo.account_name",
              "azure_devops_repo.branch_name",
              "azure_devops_repo.project_name",
              "azure_devops_repo.repository_name",
              "azure_devops_repo.root_folder",
              "customer_managed_key.key_versionless_id",
              "github_repo.account_name",
              "github_repo.branch_name",
              "github_repo.repository_name",
              "github_repo.root_folder",
              "identity.type",
              "azure_devops_repo",
              "customer_managed_key",
              "github_repo",
              "identity",
              "timeouts"
            ],
            "azurerm_synapse_workspace_aad_admin": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "login",
              "object_id",
              "synapse_workspace_id",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_synapse_workspace_extended_auditing_policy": [
              "id",
              "log_monitoring_enabled",
              "retention_in_days",
              "storage_account_access_key",
              "storage_account_access_key_is_secondary",
              "storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "synapse_workspace_id",
              "timeouts"
            ],
            "azurerm_synapse_workspace_key": [
              "customer_managed_key_versionless_id",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "active",
              "customer_managed_key_name",
              "synapse_workspace_id",
              "timeouts"
            ],
            "azurerm_synapse_workspace_security_alert_policy": [
              "disabled_alerts",
              "email_account_admins_enabled",
              "email_addresses",
              "id",
              "retention_days",
              "storage_account_access_key",
              "storage_endpoint",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "policy_state",
              "synapse_workspace_id",
              "timeouts"
            ],
            "azurerm_synapse_workspace_sql_aad_admin": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "login",
              "object_id",
              "synapse_workspace_id",
              "tenant_id",
              "timeouts"
            ],
            "azurerm_synapse_workspace_vulnerability_assessment": [
              "id",
              "storage_account_access_key",
              "storage_container_sas_key",
              "recurring_scans.email_subscription_admins_enabled",
              "recurring_scans.emails",
              "recurring_scans.enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "storage_container_path",
              "workspace_security_alert_policy_id",
              "recurring_scans",
              "timeouts"
            ],
            "azurerm_template_deployment": [
              "id",
              "parameters",
              "parameters_body",
              "template_body",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "deployment_mode",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_tenant_template_deployment": [
              "debug_level",
              "id",
              "parameters_content",
              "tags",
              "template_content",
              "template_spec_version_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "timeouts"
            ],
            "azurerm_traffic_manager_azure_endpoint": [
              "enabled",
              "geo_mappings",
              "id",
              "priority",
              "weight",
              "subnet.last",
              "subnet.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "profile_id",
              "target_resource_id",
              "custom_header.name",
              "custom_header.value",
              "subnet.first",
              "custom_header",
              "subnet",
              "timeouts"
            ],
            "azurerm_traffic_manager_external_endpoint": [
              "enabled",
              "endpoint_location",
              "geo_mappings",
              "id",
              "priority",
              "weight",
              "subnet.last",
              "subnet.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "profile_id",
              "target",
              "custom_header.name",
              "custom_header.value",
              "subnet.first",
              "custom_header",
              "subnet",
              "timeouts"
            ],
            "azurerm_traffic_manager_nested_endpoint": [
              "enabled",
              "endpoint_location",
              "geo_mappings",
              "id",
              "minimum_required_child_endpoints_ipv4",
              "minimum_required_child_endpoints_ipv6",
              "priority",
              "weight",
              "subnet.last",
              "subnet.scope",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "minimum_child_endpoints",
              "name",
              "profile_id",
              "target_resource_id",
              "custom_header.name",
              "custom_header.value",
              "subnet.first",
              "custom_header",
              "subnet",
              "timeouts"
            ],
            "azurerm_traffic_manager_profile": [
              "id",
              "max_return",
              "profile_status",
              "tags",
              "traffic_view_enabled",
              "monitor_config.expected_status_code_ranges",
              "monitor_config.interval_in_seconds",
              "monitor_config.path",
              "monitor_config.timeout_in_seconds",
              "monitor_config.tolerated_number_of_failures",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "traffic_routing_method",
              "dns_config.relative_name",
              "dns_config.ttl",
              "monitor_config.port",
              "monitor_config.protocol",
              "monitor_config.custom_header.name",
              "monitor_config.custom_header.value",
              "dns_config",
              "monitor_config",
              "monitor_config.custom_header",
              "timeouts"
            ],
            "azurerm_user_assigned_identity": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_video_analyzer": [
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "identity.identity_ids",
              "identity.type",
              "storage_account.id",
              "storage_account.user_assigned_identity_id",
              "identity",
              "storage_account",
              "timeouts"
            ],
            "azurerm_video_analyzer_edge_module": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "resource_group_name",
              "video_analyzer_name",
              "timeouts"
            ],
            "azurerm_virtual_desktop_application": [
              "command_line_arguments",
              "description",
              "friendly_name",
              "icon_index",
              "icon_path",
              "id",
              "show_in_portal",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_group_id",
              "command_line_argument_policy",
              "name",
              "path",
              "timeouts"
            ],
            "azurerm_virtual_desktop_application_group": [
              "default_desktop_display_name",
              "description",
              "friendly_name",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "host_pool_id",
              "location",
              "name",
              "resource_group_name",
              "type",
              "timeouts"
            ],
            "azurerm_virtual_desktop_host_pool": [
              "custom_rdp_properties",
              "description",
              "friendly_name",
              "id",
              "maximum_sessions_allowed",
              "personal_desktop_assignment_type",
              "preferred_app_group_type",
              "start_vm_on_connect",
              "tags",
              "validate_environment",
              "scheduled_agent_updates.enabled",
              "scheduled_agent_updates.timezone",
              "scheduled_agent_updates.use_session_host_timezone",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "load_balancer_type",
              "location",
              "name",
              "resource_group_name",
              "type",
              "scheduled_agent_updates.schedule.day_of_week",
              "scheduled_agent_updates.schedule.hour_of_day",
              "scheduled_agent_updates",
              "scheduled_agent_updates.schedule",
              "timeouts"
            ],
            "azurerm_virtual_desktop_host_pool_registration_info": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "expiration_date",
              "hostpool_id",
              "timeouts"
            ],
            "azurerm_virtual_desktop_scaling_plan": [
              "description",
              "exclusion_tag",
              "friendly_name",
              "id",
              "tags",
              "schedule.ramp_up_capacity_threshold_percent",
              "schedule.ramp_up_minimum_hosts_percent",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "time_zone",
              "host_pool.hostpool_id",
              "host_pool.scaling_plan_enabled",
              "schedule.days_of_week",
              "schedule.name",
              "schedule.off_peak_load_balancing_algorithm",
              "schedule.off_peak_start_time",
              "schedule.peak_load_balancing_algorithm",
              "schedule.peak_start_time",
              "schedule.ramp_down_capacity_threshold_percent",
              "schedule.ramp_down_force_logoff_users",
              "schedule.ramp_down_load_balancing_algorithm",
              "schedule.ramp_down_minimum_hosts_percent",
              "schedule.ramp_down_notification_message",
              "schedule.ramp_down_start_time",
              "schedule.ramp_down_stop_hosts_when",
              "schedule.ramp_down_wait_time_minutes",
              "schedule.ramp_up_load_balancing_algorithm",
              "schedule.ramp_up_start_time",
              "host_pool",
              "schedule",
              "timeouts"
            ],
            "azurerm_virtual_desktop_workspace": [
              "description",
              "friendly_name",
              "id",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_virtual_desktop_workspace_application_group_association": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "application_group_id",
              "workspace_id",
              "timeouts"
            ],
            "azurerm_virtual_hub": [
              "address_prefix",
              "id",
              "sku",
              "tags",
              "virtual_wan_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "route.address_prefixes",
              "route.next_hop_ip_address",
              "route",
              "timeouts"
            ],
            "azurerm_virtual_hub_bgp_connection": [
              "id",
              "virtual_network_connection_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "peer_asn",
              "peer_ip",
              "virtual_hub_id",
              "timeouts"
            ],
            "azurerm_virtual_hub_connection": [
              "id",
              "internet_security_enabled",
              "routing.associated_route_table_id",
              "routing.propagated_route_table.labels",
              "routing.propagated_route_table.route_table_ids",
              "routing.static_vnet_route.address_prefixes",
              "routing.static_vnet_route.name",
              "routing.static_vnet_route.next_hop_ip_address",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "remote_virtual_network_id",
              "virtual_hub_id",
              "routing",
              "routing.propagated_route_table",
              "routing.static_vnet_route",
              "timeouts"
            ],
            "azurerm_virtual_hub_ip": [
              "id",
              "private_ip_address",
              "private_ip_allocation_method",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "public_ip_address_id",
              "subnet_id",
              "virtual_hub_id",
              "timeouts"
            ],
            "azurerm_virtual_hub_route_table": [
              "id",
              "labels",
              "route.next_hop_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "virtual_hub_id",
              "route.destinations",
              "route.destinations_type",
              "route.name",
              "route.next_hop",
              "route",
              "timeouts"
            ],
            "azurerm_virtual_hub_route_table_route": [
              "id",
              "next_hop_type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "destinations",
              "destinations_type",
              "name",
              "next_hop",
              "route_table_id",
              "timeouts"
            ],
            "azurerm_virtual_hub_security_partner_provider": [
              "id",
              "tags",
              "virtual_hub_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "security_provider_name",
              "timeouts"
            ],
            "azurerm_virtual_machine": [
              "availability_set_id",
              "delete_data_disks_on_termination",
              "delete_os_disk_on_termination",
              "id",
              "license_type",
              "primary_network_interface_id",
              "proximity_placement_group_id",
              "tags",
              "zones",
              "identity.identity_ids",
              "os_profile.admin_password",
              "os_profile.custom_data",
              "os_profile_secrets.vault_certificates.certificate_store",
              "os_profile_windows_config.enable_automatic_upgrades",
              "os_profile_windows_config.provision_vm_agent",
              "os_profile_windows_config.timezone",
              "os_profile_windows_config.winrm.certificate_url",
              "storage_data_disk.caching",
              "storage_data_disk.disk_size_gb",
              "storage_data_disk.managed_disk_id",
              "storage_data_disk.managed_disk_type",
              "storage_data_disk.vhd_uri",
              "storage_data_disk.write_accelerator_enabled",
              "storage_image_reference.id",
              "storage_image_reference.offer",
              "storage_image_reference.publisher",
              "storage_image_reference.sku",
              "storage_image_reference.version",
              "storage_os_disk.caching",
              "storage_os_disk.disk_size_gb",
              "storage_os_disk.image_uri",
              "storage_os_disk.managed_disk_id",
              "storage_os_disk.managed_disk_type",
              "storage_os_disk.os_type",
              "storage_os_disk.vhd_uri",
              "storage_os_disk.write_accelerator_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "network_interface_ids",
              "resource_group_name",
              "vm_size",
              "additional_capabilities.ultra_ssd_enabled",
              "boot_diagnostics.enabled",
              "boot_diagnostics.storage_uri",
              "identity.type",
              "os_profile.admin_username",
              "os_profile.computer_name",
              "os_profile_linux_config.disable_password_authentication",
              "os_profile_linux_config.ssh_keys.key_data",
              "os_profile_linux_config.ssh_keys.path",
              "os_profile_secrets.source_vault_id",
              "os_profile_secrets.vault_certificates.certificate_url",
              "os_profile_windows_config.additional_unattend_config.component",
              "os_profile_windows_config.additional_unattend_config.content",
              "os_profile_windows_config.additional_unattend_config.pass",
              "os_profile_windows_config.additional_unattend_config.setting_name",
              "os_profile_windows_config.winrm.protocol",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "storage_data_disk.create_option",
              "storage_data_disk.lun",
              "storage_data_disk.name",
              "storage_os_disk.create_option",
              "storage_os_disk.name",
              "additional_capabilities",
              "boot_diagnostics",
              "identity",
              "os_profile",
              "os_profile_linux_config",
              "os_profile_linux_config.ssh_keys",
              "os_profile_secrets",
              "os_profile_secrets.vault_certificates",
              "os_profile_windows_config",
              "os_profile_windows_config.additional_unattend_config",
              "os_profile_windows_config.winrm",
              "plan",
              "storage_data_disk",
              "storage_image_reference",
              "storage_os_disk",
              "timeouts"
            ],
            "azurerm_virtual_machine_data_disk_attachment": [
              "create_option",
              "id",
              "write_accelerator_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "caching",
              "lun",
              "managed_disk_id",
              "virtual_machine_id",
              "timeouts"
            ],
            "azurerm_virtual_machine_extension": [
              "auto_upgrade_minor_version",
              "automatic_upgrade_enabled",
              "failure_suppression_enabled",
              "id",
              "protected_settings",
              "settings",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "publisher",
              "type",
              "type_handler_version",
              "virtual_machine_id",
              "protected_settings_from_key_vault.secret_url",
              "protected_settings_from_key_vault.source_vault_id",
              "protected_settings_from_key_vault",
              "timeouts"
            ],
            "azurerm_virtual_machine_packet_capture": [
              "id",
              "maximum_bytes_per_packet",
              "maximum_bytes_per_session",
              "maximum_capture_duration_in_seconds",
              "filter.local_ip_address",
              "filter.local_port",
              "filter.remote_ip_address",
              "filter.remote_port",
              "storage_location.file_path",
              "storage_location.storage_account_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "network_watcher_id",
              "virtual_machine_id",
              "filter.protocol",
              "filter",
              "storage_location",
              "timeouts"
            ],
            "azurerm_virtual_machine_scale_set": [
              "automatic_os_upgrade",
              "eviction_policy",
              "health_probe_id",
              "id",
              "license_type",
              "overprovision",
              "priority",
              "proximity_placement_group_id",
              "single_placement_group",
              "tags",
              "zones",
              "boot_diagnostics.enabled",
              "extension.auto_upgrade_minor_version",
              "extension.protected_settings",
              "extension.provision_after_extensions",
              "extension.settings",
              "identity.identity_ids",
              "network_profile.accelerated_networking",
              "network_profile.ip_forwarding",
              "network_profile.network_security_group_id",
              "network_profile.ip_configuration.application_gateway_backend_address_pool_ids",
              "network_profile.ip_configuration.application_security_group_ids",
              "network_profile.ip_configuration.load_balancer_backend_address_pool_ids",
              "network_profile.ip_configuration.load_balancer_inbound_nat_rules_ids",
              "os_profile.admin_password",
              "os_profile.custom_data",
              "os_profile_linux_config.disable_password_authentication",
              "os_profile_linux_config.ssh_keys.key_data",
              "os_profile_secrets.vault_certificates.certificate_store",
              "os_profile_windows_config.enable_automatic_upgrades",
              "os_profile_windows_config.provision_vm_agent",
              "os_profile_windows_config.winrm.certificate_url",
              "rolling_upgrade_policy.max_batch_instance_percent",
              "rolling_upgrade_policy.max_unhealthy_instance_percent",
              "rolling_upgrade_policy.max_unhealthy_upgraded_instance_percent",
              "rolling_upgrade_policy.pause_time_between_batches",
              "sku.tier",
              "storage_profile_data_disk.caching",
              "storage_profile_data_disk.disk_size_gb",
              "storage_profile_data_disk.managed_disk_type",
              "storage_profile_image_reference.id",
              "storage_profile_image_reference.offer",
              "storage_profile_image_reference.publisher",
              "storage_profile_image_reference.sku",
              "storage_profile_image_reference.version",
              "storage_profile_os_disk.caching",
              "storage_profile_os_disk.image",
              "storage_profile_os_disk.managed_disk_type",
              "storage_profile_os_disk.name",
              "storage_profile_os_disk.os_type",
              "storage_profile_os_disk.vhd_containers",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "upgrade_policy_mode",
              "boot_diagnostics.storage_uri",
              "extension.name",
              "extension.publisher",
              "extension.type",
              "extension.type_handler_version",
              "identity.type",
              "network_profile.name",
              "network_profile.primary",
              "network_profile.dns_settings.dns_servers",
              "network_profile.ip_configuration.name",
              "network_profile.ip_configuration.primary",
              "network_profile.ip_configuration.subnet_id",
              "network_profile.ip_configuration.public_ip_address_configuration.domain_name_label",
              "network_profile.ip_configuration.public_ip_address_configuration.idle_timeout",
              "network_profile.ip_configuration.public_ip_address_configuration.name",
              "os_profile.admin_username",
              "os_profile.computer_name_prefix",
              "os_profile_linux_config.ssh_keys.path",
              "os_profile_secrets.source_vault_id",
              "os_profile_secrets.vault_certificates.certificate_url",
              "os_profile_windows_config.additional_unattend_config.component",
              "os_profile_windows_config.additional_unattend_config.content",
              "os_profile_windows_config.additional_unattend_config.pass",
              "os_profile_windows_config.additional_unattend_config.setting_name",
              "os_profile_windows_config.winrm.protocol",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "sku.capacity",
              "sku.name",
              "storage_profile_data_disk.create_option",
              "storage_profile_data_disk.lun",
              "storage_profile_os_disk.create_option",
              "boot_diagnostics",
              "extension",
              "identity",
              "network_profile",
              "network_profile.dns_settings",
              "network_profile.ip_configuration",
              "network_profile.ip_configuration.public_ip_address_configuration",
              "os_profile",
              "os_profile_linux_config",
              "os_profile_linux_config.ssh_keys",
              "os_profile_secrets",
              "os_profile_secrets.vault_certificates",
              "os_profile_windows_config",
              "os_profile_windows_config.additional_unattend_config",
              "os_profile_windows_config.winrm",
              "plan",
              "rolling_upgrade_policy",
              "sku",
              "storage_profile_data_disk",
              "storage_profile_image_reference",
              "storage_profile_os_disk",
              "timeouts"
            ],
            "azurerm_virtual_machine_scale_set_extension": [
              "auto_upgrade_minor_version",
              "automatic_upgrade_enabled",
              "failure_suppression_enabled",
              "force_update_tag",
              "id",
              "protected_settings",
              "provision_after_extensions",
              "settings",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "publisher",
              "type",
              "type_handler_version",
              "virtual_machine_scale_set_id",
              "protected_settings_from_key_vault.secret_url",
              "protected_settings_from_key_vault.source_vault_id",
              "protected_settings_from_key_vault",
              "timeouts"
            ],
            "azurerm_virtual_machine_scale_set_packet_capture": [
              "id",
              "maximum_bytes_per_packet",
              "maximum_bytes_per_session",
              "maximum_capture_duration_in_seconds",
              "filter.local_ip_address",
              "filter.local_port",
              "filter.remote_ip_address",
              "filter.remote_port",
              "machine_scope.exclude_instance_ids",
              "machine_scope.include_instance_ids",
              "storage_location.file_path",
              "storage_location.storage_account_id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "network_watcher_id",
              "virtual_machine_scale_set_id",
              "filter.protocol",
              "filter",
              "machine_scope",
              "storage_location",
              "timeouts"
            ],
            "azurerm_virtual_network": [
              "bgp_community",
              "dns_servers",
              "edge_zone",
              "flow_timeout_in_minutes",
              "id",
              "subnet",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "address_space",
              "location",
              "name",
              "resource_group_name",
              "ddos_protection_plan.enable",
              "ddos_protection_plan.id",
              "ddos_protection_plan",
              "timeouts",
              "subnet.address_prefix",
              "subnet.id",
              "subnet.name",
              "subnet.security_group"
            ],
            "azurerm_virtual_network_dns_servers": [
              "dns_servers",
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "virtual_network_id",
              "timeouts"
            ],
            "azurerm_virtual_network_gateway": [
              "active_active",
              "default_local_network_gateway_id",
              "edge_zone",
              "enable_bgp",
              "generation",
              "id",
              "private_ip_address_enabled",
              "tags",
              "vpn_type",
              "bgp_settings.asn",
              "bgp_settings.peer_weight",
              "bgp_settings.peering_addresses.apipa_addresses",
              "bgp_settings.peering_addresses.ip_configuration_name",
              "custom_route.address_prefixes",
              "ip_configuration.name",
              "ip_configuration.private_ip_address_allocation",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "vpn_client_configuration.aad_audience",
              "vpn_client_configuration.aad_issuer",
              "vpn_client_configuration.aad_tenant",
              "vpn_client_configuration.radius_server_address",
              "vpn_client_configuration.radius_server_secret",
              "vpn_client_configuration.vpn_auth_types",
              "vpn_client_configuration.vpn_client_protocols",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "type",
              "ip_configuration.public_ip_address_id",
              "ip_configuration.subnet_id",
              "vpn_client_configuration.address_space",
              "vpn_client_configuration.revoked_certificate.name",
              "vpn_client_configuration.revoked_certificate.thumbprint",
              "vpn_client_configuration.root_certificate.name",
              "vpn_client_configuration.root_certificate.public_cert_data",
              "bgp_settings",
              "bgp_settings.peering_addresses",
              "custom_route",
              "ip_configuration",
              "timeouts",
              "vpn_client_configuration",
              "vpn_client_configuration.revoked_certificate",
              "vpn_client_configuration.root_certificate"
            ],
            "azurerm_virtual_network_gateway_connection": [
              "authorization_key",
              "connection_mode",
              "connection_protocol",
              "dpd_timeout_seconds",
              "egress_nat_rule_ids",
              "enable_bgp",
              "express_route_circuit_id",
              "express_route_gateway_bypass",
              "id",
              "ingress_nat_rule_ids",
              "local_azure_ip_address_enabled",
              "local_network_gateway_id",
              "peer_virtual_network_gateway_id",
              "routing_weight",
              "shared_key",
              "tags",
              "use_policy_based_traffic_selectors",
              "ipsec_policy.sa_datasize",
              "ipsec_policy.sa_lifetime",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "type",
              "virtual_network_gateway_id",
              "custom_bgp_addresses.primary",
              "custom_bgp_addresses.secondary",
              "ipsec_policy.dh_group",
              "ipsec_policy.ike_encryption",
              "ipsec_policy.ike_integrity",
              "ipsec_policy.ipsec_encryption",
              "ipsec_policy.ipsec_integrity",
              "ipsec_policy.pfs_group",
              "traffic_selector_policy.local_address_cidrs",
              "traffic_selector_policy.remote_address_cidrs",
              "custom_bgp_addresses",
              "ipsec_policy",
              "timeouts",
              "traffic_selector_policy"
            ],
            "azurerm_virtual_network_gateway_nat_rule": [
              "id",
              "ip_configuration_id",
              "mode",
              "type",
              "external_mapping.port_range",
              "internal_mapping.port_range",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "virtual_network_gateway_id",
              "external_mapping.address_space",
              "internal_mapping.address_space",
              "external_mapping",
              "internal_mapping",
              "timeouts"
            ],
            "azurerm_virtual_network_peering": [
              "allow_forwarded_traffic",
              "allow_gateway_transit",
              "allow_virtual_network_access",
              "id",
              "use_remote_gateways",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "remote_virtual_network_id",
              "resource_group_name",
              "virtual_network_name",
              "timeouts"
            ],
            "azurerm_virtual_wan": [
              "allow_branch_to_branch_traffic",
              "disable_vpn_encryption",
              "id",
              "office365_local_breakout_category",
              "tags",
              "type",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "timeouts"
            ],
            "azurerm_vmware_cluster": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "cluster_node_count",
              "name",
              "sku_name",
              "vmware_cloud_id",
              "timeouts"
            ],
            "azurerm_vmware_express_route_authorization": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "private_cloud_id",
              "timeouts"
            ],
            "azurerm_vmware_netapp_volume_attachment": [
              "id",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "name",
              "netapp_volume_id",
              "vmware_cluster_id",
              "timeouts"
            ],
            "azurerm_vmware_private_cloud": [
              "id",
              "internet_connection_enabled",
              "nsxt_password",
              "tags",
              "vcenter_password",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "network_subnet_cidr",
              "resource_group_name",
              "sku_name",
              "management_cluster.size",
              "management_cluster",
              "timeouts"
            ],
            "azurerm_vpn_gateway": [
              "bgp_route_translation_for_nat_enabled",
              "id",
              "routing_preference",
              "scale_unit",
              "tags",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "virtual_hub_id",
              "bgp_settings.asn",
              "bgp_settings.peer_weight",
              "bgp_settings.instance_0_bgp_peering_address.custom_ips",
              "bgp_settings.instance_1_bgp_peering_address.custom_ips",
              "bgp_settings",
              "bgp_settings.instance_0_bgp_peering_address",
              "bgp_settings.instance_1_bgp_peering_address",
              "timeouts"
            ],
            "azurerm_vpn_gateway_connection": [
              "id",
              "internet_security_enabled",
              "routing.inbound_route_map_id",
              "routing.outbound_route_map_id",
              "routing.propagated_route_table.labels",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "vpn_link.bandwidth_mbps",
              "vpn_link.bgp_enabled",
              "vpn_link.connection_mode",
              "vpn_link.egress_nat_rule_ids",
              "vpn_link.ingress_nat_rule_ids",
              "vpn_link.local_azure_ip_address_enabled",
              "vpn_link.policy_based_traffic_selector_enabled",
              "vpn_link.protocol",
              "vpn_link.ratelimit_enabled",
              "vpn_link.route_weight",
              "vpn_link.shared_key",
              "name",
              "remote_vpn_site_id",
              "vpn_gateway_id",
              "routing.associated_route_table",
              "routing.propagated_route_table.route_table_ids",
              "traffic_selector_policy.local_address_ranges",
              "traffic_selector_policy.remote_address_ranges",
              "vpn_link.name",
              "vpn_link.vpn_site_link_id",
              "vpn_link.custom_bgp_address.ip_address",
              "vpn_link.custom_bgp_address.ip_configuration_id",
              "vpn_link.ipsec_policy.dh_group",
              "vpn_link.ipsec_policy.encryption_algorithm",
              "vpn_link.ipsec_policy.ike_encryption_algorithm",
              "vpn_link.ipsec_policy.ike_integrity_algorithm",
              "vpn_link.ipsec_policy.integrity_algorithm",
              "vpn_link.ipsec_policy.pfs_group",
              "vpn_link.ipsec_policy.sa_data_size_kb",
              "vpn_link.ipsec_policy.sa_lifetime_sec",
              "routing",
              "routing.propagated_route_table",
              "timeouts",
              "traffic_selector_policy",
              "vpn_link",
              "vpn_link.custom_bgp_address",
              "vpn_link.ipsec_policy"
            ],
            "azurerm_vpn_gateway_nat_rule": [
              "external_address_space_mappings",
              "id",
              "internal_address_space_mappings",
              "ip_configuration_id",
              "mode",
              "type",
              "external_mapping.port_range",
              "internal_mapping.port_range",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "resource_group_name",
              "vpn_gateway_id",
              "external_mapping.address_space",
              "internal_mapping.address_space",
              "external_mapping",
              "internal_mapping",
              "timeouts"
            ],
            "azurerm_vpn_server_configuration": [
              "id",
              "tags",
              "vpn_protocols",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "vpn_authentication_types",
              "azure_active_directory_authentication.audience",
              "azure_active_directory_authentication.issuer",
              "azure_active_directory_authentication.tenant",
              "client_revoked_certificate.name",
              "client_revoked_certificate.thumbprint",
              "client_root_certificate.name",
              "client_root_certificate.public_cert_data",
              "ipsec_policy.dh_group",
              "ipsec_policy.ike_encryption",
              "ipsec_policy.ike_integrity",
              "ipsec_policy.ipsec_encryption",
              "ipsec_policy.ipsec_integrity",
              "ipsec_policy.pfs_group",
              "ipsec_policy.sa_data_size_kilobytes",
              "ipsec_policy.sa_lifetime_seconds",
              "radius.client_root_certificate.name",
              "radius.client_root_certificate.thumbprint",
              "radius.server.address",
              "radius.server.score",
              "radius.server.secret",
              "radius.server_root_certificate.name",
              "radius.server_root_certificate.public_cert_data",
              "azure_active_directory_authentication",
              "client_revoked_certificate",
              "client_root_certificate",
              "ipsec_policy",
              "radius",
              "radius.client_root_certificate",
              "radius.server",
              "radius.server_root_certificate",
              "timeouts"
            ],
            "azurerm_vpn_server_configuration_policy_group": [
              "id",
              "is_default",
              "priority",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "vpn_server_configuration_id",
              "policy.name",
              "policy.type",
              "policy.value",
              "policy",
              "timeouts"
            ],
            "azurerm_vpn_site": [
              "address_cidrs",
              "device_model",
              "device_vendor",
              "id",
              "tags",
              "link.fqdn",
              "link.ip_address",
              "link.provider_name",
              "link.speed_in_mbps",
              "o365_policy.traffic_category.allow_endpoint_enabled",
              "o365_policy.traffic_category.default_endpoint_enabled",
              "o365_policy.traffic_category.optimize_endpoint_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "virtual_wan_id",
              "link.name",
              "link.bgp.asn",
              "link.bgp.peering_address",
              "link",
              "link.bgp",
              "o365_policy",
              "o365_policy.traffic_category",
              "timeouts"
            ],
            "azurerm_web_app_active_slot": [
              "id",
              "overwrite_network_config",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "slot_id",
              "timeouts"
            ],
            "azurerm_web_app_hybrid_connection": [
              "id",
              "send_key_name",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "hostname",
              "port",
              "relay_id",
              "web_app_id",
              "timeouts"
            ],
            "azurerm_web_application_firewall_policy": [
              "id",
              "tags",
              "custom_rules.name",
              "custom_rules.match_conditions.negation_condition",
              "custom_rules.match_conditions.transforms",
              "custom_rules.match_conditions.match_variables.selector",
              "managed_rules.exclusion.excluded_rule_set.type",
              "managed_rules.exclusion.excluded_rule_set.version",
              "managed_rules.exclusion.excluded_rule_set.rule_group.excluded_rules",
              "managed_rules.managed_rule_set.type",
              "managed_rules.managed_rule_set.rule_group_override.disabled_rules",
              "managed_rules.managed_rule_set.rule_group_override.rule.action",
              "managed_rules.managed_rule_set.rule_group_override.rule.enabled",
              "policy_settings.enabled",
              "policy_settings.file_upload_limit_in_mb",
              "policy_settings.max_request_body_size_in_kb",
              "policy_settings.mode",
              "policy_settings.request_body_check",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "custom_rules.action",
              "custom_rules.priority",
              "custom_rules.rule_type",
              "custom_rules.match_conditions.match_values",
              "custom_rules.match_conditions.operator",
              "custom_rules.match_conditions.match_variables.variable_name",
              "managed_rules.exclusion.match_variable",
              "managed_rules.exclusion.selector",
              "managed_rules.exclusion.selector_match_operator",
              "managed_rules.exclusion.excluded_rule_set.rule_group.rule_group_name",
              "managed_rules.managed_rule_set.version",
              "managed_rules.managed_rule_set.rule_group_override.rule_group_name",
              "managed_rules.managed_rule_set.rule_group_override.rule.id",
              "custom_rules",
              "custom_rules.match_conditions",
              "custom_rules.match_conditions.match_variables",
              "managed_rules",
              "managed_rules.exclusion",
              "managed_rules.exclusion.excluded_rule_set",
              "managed_rules.exclusion.excluded_rule_set.rule_group",
              "managed_rules.managed_rule_set",
              "managed_rules.managed_rule_set.rule_group_override",
              "managed_rules.managed_rule_set.rule_group_override.rule",
              "policy_settings",
              "timeouts"
            ],
            "azurerm_web_pubsub": [
              "aad_auth_enabled",
              "capacity",
              "id",
              "local_auth_enabled",
              "public_network_access_enabled",
              "tags",
              "tls_client_cert_enabled",
              "identity.identity_ids",
              "live_trace.connectivity_logs_enabled",
              "live_trace.enabled",
              "live_trace.http_request_logs_enabled",
              "live_trace.messaging_logs_enabled",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "identity.type",
              "identity",
              "live_trace",
              "timeouts"
            ],
            "azurerm_web_pubsub_hub": [
              "anonymous_connections_enabled",
              "id",
              "event_handler.system_events",
              "event_handler.user_event_pattern",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "web_pubsub_id",
              "event_handler.url_template",
              "event_handler.auth.managed_identity_id",
              "event_handler",
              "event_handler.auth",
              "timeouts"
            ],
            "azurerm_web_pubsub_network_acl": [
              "default_action",
              "id",
              "private_endpoint.allowed_request_types",
              "private_endpoint.denied_request_types",
              "public_network.allowed_request_types",
              "public_network.denied_request_types",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "web_pubsub_id",
              "private_endpoint.id",
              "private_endpoint",
              "public_network",
              "timeouts"
            ],
            "azurerm_web_pubsub_shared_private_link_resource": [
              "id",
              "request_message",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "name",
              "subresource_name",
              "target_resource_id",
              "web_pubsub_id",
              "timeouts"
            ],
            "azurerm_windows_function_app": [
              "app_settings",
              "builtin_logging_enabled",
              "client_certificate_enabled",
              "client_certificate_exclusion_paths",
              "client_certificate_mode",
              "content_share_force_disabled",
              "daily_memory_time_quota",
              "enabled",
              "functions_extension_version",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "storage_account_access_key",
              "storage_account_name",
              "storage_key_vault_secret_id",
              "storage_uses_managed_identity",
              "tags",
              "virtual_network_subnet_id",
              "auth_settings.additional_login_parameters",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.active_directory.client_secret_setting_name",
              "auth_settings.facebook.app_secret",
              "auth_settings.facebook.app_secret_setting_name",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.github.client_secret",
              "auth_settings.github.client_secret_setting_name",
              "auth_settings.github.oauth_scopes",
              "auth_settings.google.client_secret",
              "auth_settings.google.client_secret_setting_name",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.client_secret",
              "auth_settings.microsoft.client_secret_setting_name",
              "auth_settings.microsoft.oauth_scopes",
              "auth_settings.twitter.consumer_secret",
              "auth_settings.twitter.consumer_secret_setting_name",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "site_config.always_on",
              "site_config.api_definition_url",
              "site_config.api_management_api_id",
              "site_config.app_command_line",
              "site_config.app_scale_limit",
              "site_config.application_insights_connection_string",
              "site_config.application_insights_key",
              "site_config.default_documents",
              "site_config.elastic_instance_minimum",
              "site_config.ftps_state",
              "site_config.health_check_eviction_time_in_min",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.load_balancing_mode",
              "site_config.managed_pipeline_mode",
              "site_config.minimum_tls_version",
              "site_config.pre_warmed_instance_count",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.runtime_scale_monitoring_enabled",
              "site_config.scm_ip_restriction",
              "site_config.scm_minimum_tls_version",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.worker_count",
              "site_config.app_service_logs.disk_quota_mb",
              "site_config.app_service_logs.retention_period_days",
              "site_config.application_stack.dotnet_version",
              "site_config.application_stack.java_version",
              "site_config.application_stack.node_version",
              "site_config.application_stack.powershell_core_version",
              "site_config.application_stack.use_custom_runtime",
              "site_config.application_stack.use_dotnet_isolated_runtime",
              "site_config.cors.support_credentials",
              "sticky_settings.app_setting_names",
              "sticky_settings.connection_string_names",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "service_plan_id",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.github.client_id",
              "auth_settings.google.client_id",
              "auth_settings.microsoft.client_id",
              "auth_settings.twitter.consumer_key",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "site_config.cors.allowed_origins",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.github",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "site_config",
              "site_config.app_service_logs",
              "site_config.application_stack",
              "site_config.cors",
              "sticky_settings",
              "storage_account",
              "timeouts"
            ],
            "azurerm_windows_function_app_slot": [
              "app_settings",
              "builtin_logging_enabled",
              "client_certificate_enabled",
              "client_certificate_exclusion_paths",
              "client_certificate_mode",
              "content_share_force_disabled",
              "daily_memory_time_quota",
              "enabled",
              "functions_extension_version",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "storage_account_access_key",
              "storage_account_name",
              "storage_key_vault_secret_id",
              "storage_uses_managed_identity",
              "tags",
              "virtual_network_subnet_id",
              "auth_settings.additional_login_parameters",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.active_directory.client_secret_setting_name",
              "auth_settings.facebook.app_secret",
              "auth_settings.facebook.app_secret_setting_name",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.github.client_secret",
              "auth_settings.github.client_secret_setting_name",
              "auth_settings.github.oauth_scopes",
              "auth_settings.google.client_secret",
              "auth_settings.google.client_secret_setting_name",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.client_secret",
              "auth_settings.microsoft.client_secret_setting_name",
              "auth_settings.microsoft.oauth_scopes",
              "auth_settings.twitter.consumer_secret",
              "auth_settings.twitter.consumer_secret_setting_name",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "site_config.always_on",
              "site_config.api_definition_url",
              "site_config.api_management_api_id",
              "site_config.app_command_line",
              "site_config.app_scale_limit",
              "site_config.application_insights_connection_string",
              "site_config.application_insights_key",
              "site_config.auto_swap_slot_name",
              "site_config.default_documents",
              "site_config.elastic_instance_minimum",
              "site_config.ftps_state",
              "site_config.health_check_eviction_time_in_min",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.load_balancing_mode",
              "site_config.managed_pipeline_mode",
              "site_config.minimum_tls_version",
              "site_config.pre_warmed_instance_count",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.runtime_scale_monitoring_enabled",
              "site_config.scm_ip_restriction",
              "site_config.scm_minimum_tls_version",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.worker_count",
              "site_config.app_service_logs.disk_quota_mb",
              "site_config.app_service_logs.retention_period_days",
              "site_config.application_stack.dotnet_version",
              "site_config.application_stack.java_version",
              "site_config.application_stack.node_version",
              "site_config.application_stack.powershell_core_version",
              "site_config.application_stack.use_custom_runtime",
              "site_config.application_stack.use_dotnet_isolated_runtime",
              "site_config.cors.support_credentials",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "function_app_id",
              "name",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.github.client_id",
              "auth_settings.google.client_id",
              "auth_settings.microsoft.client_id",
              "auth_settings.twitter.consumer_key",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "site_config.cors.allowed_origins",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.github",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "site_config",
              "site_config.app_service_logs",
              "site_config.application_stack",
              "site_config.cors",
              "storage_account",
              "timeouts"
            ],
            "azurerm_windows_virtual_machine": [
              "allow_extension_operations",
              "availability_set_id",
              "capacity_reservation_group_id",
              "computer_name",
              "custom_data",
              "dedicated_host_group_id",
              "dedicated_host_id",
              "edge_zone",
              "enable_automatic_updates",
              "encryption_at_host_enabled",
              "eviction_policy",
              "extensions_time_budget",
              "hotpatching_enabled",
              "id",
              "license_type",
              "max_bid_price",
              "patch_assessment_mode",
              "patch_mode",
              "platform_fault_domain",
              "priority",
              "provision_vm_agent",
              "proximity_placement_group_id",
              "secure_boot_enabled",
              "source_image_id",
              "tags",
              "timezone",
              "user_data",
              "virtual_machine_scale_set_id",
              "vtpm_enabled",
              "zone",
              "additional_capabilities.ultra_ssd_enabled",
              "boot_diagnostics.storage_account_uri",
              "gallery_application.configuration_blob_uri",
              "gallery_application.order",
              "gallery_application.tag",
              "identity.identity_ids",
              "os_disk.disk_encryption_set_id",
              "os_disk.disk_size_gb",
              "os_disk.name",
              "os_disk.secure_vm_disk_encryption_set_id",
              "os_disk.security_encryption_type",
              "os_disk.write_accelerator_enabled",
              "os_disk.diff_disk_settings.placement",
              "termination_notification.timeout",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "winrm_listener.certificate_url",
              "admin_password",
              "admin_username",
              "location",
              "name",
              "network_interface_ids",
              "resource_group_name",
              "size",
              "additional_unattend_content.content",
              "additional_unattend_content.setting",
              "gallery_application.version_id",
              "identity.type",
              "os_disk.caching",
              "os_disk.storage_account_type",
              "os_disk.diff_disk_settings.option",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "secret.key_vault_id",
              "secret.certificate.store",
              "secret.certificate.url",
              "source_image_reference.offer",
              "source_image_reference.publisher",
              "source_image_reference.sku",
              "source_image_reference.version",
              "termination_notification.enabled",
              "winrm_listener.protocol",
              "additional_capabilities",
              "additional_unattend_content",
              "boot_diagnostics",
              "gallery_application",
              "identity",
              "os_disk",
              "os_disk.diff_disk_settings",
              "plan",
              "secret",
              "secret.certificate",
              "source_image_reference",
              "termination_notification",
              "timeouts",
              "winrm_listener"
            ],
            "azurerm_windows_virtual_machine_scale_set": [
              "capacity_reservation_group_id",
              "computer_name_prefix",
              "custom_data",
              "do_not_run_extensions_on_overprovisioned_machines",
              "edge_zone",
              "enable_automatic_updates",
              "encryption_at_host_enabled",
              "eviction_policy",
              "extension_operations_enabled",
              "extensions_time_budget",
              "health_probe_id",
              "host_group_id",
              "id",
              "license_type",
              "max_bid_price",
              "overprovision",
              "platform_fault_domain_count",
              "priority",
              "provision_vm_agent",
              "proximity_placement_group_id",
              "scale_in_policy",
              "secure_boot_enabled",
              "single_placement_group",
              "source_image_id",
              "tags",
              "timezone",
              "upgrade_mode",
              "user_data",
              "vtpm_enabled",
              "zone_balance",
              "zones",
              "additional_capabilities.ultra_ssd_enabled",
              "automatic_instance_repair.grace_period",
              "boot_diagnostics.storage_account_uri",
              "data_disk.create_option",
              "data_disk.disk_encryption_set_id",
              "data_disk.name",
              "data_disk.ultra_ssd_disk_iops_read_write",
              "data_disk.ultra_ssd_disk_mbps_read_write",
              "data_disk.write_accelerator_enabled",
              "extension.auto_upgrade_minor_version",
              "extension.automatic_upgrade_enabled",
              "extension.force_update_tag",
              "extension.protected_settings",
              "extension.provision_after_extensions",
              "extension.settings",
              "gallery_application.configuration_blob_uri",
              "gallery_application.order",
              "gallery_application.tag",
              "gallery_applications.configuration_reference_blob_uri",
              "gallery_applications.order",
              "gallery_applications.tag",
              "identity.identity_ids",
              "network_interface.dns_servers",
              "network_interface.enable_accelerated_networking",
              "network_interface.enable_ip_forwarding",
              "network_interface.network_security_group_id",
              "network_interface.primary",
              "network_interface.ip_configuration.application_gateway_backend_address_pool_ids",
              "network_interface.ip_configuration.application_security_group_ids",
              "network_interface.ip_configuration.load_balancer_backend_address_pool_ids",
              "network_interface.ip_configuration.load_balancer_inbound_nat_rules_ids",
              "network_interface.ip_configuration.primary",
              "network_interface.ip_configuration.subnet_id",
              "network_interface.ip_configuration.version",
              "network_interface.ip_configuration.public_ip_address.domain_name_label",
              "network_interface.ip_configuration.public_ip_address.idle_timeout_in_minutes",
              "network_interface.ip_configuration.public_ip_address.public_ip_prefix_id",
              "network_interface.ip_configuration.public_ip_address.version",
              "os_disk.disk_encryption_set_id",
              "os_disk.disk_size_gb",
              "os_disk.secure_vm_disk_encryption_set_id",
              "os_disk.security_encryption_type",
              "os_disk.write_accelerator_enabled",
              "os_disk.diff_disk_settings.placement",
              "rolling_upgrade_policy.cross_zone_upgrades_enabled",
              "rolling_upgrade_policy.prioritize_unhealthy_instances_enabled",
              "scale_in.force_deletion_enabled",
              "scale_in.rule",
              "spot_restore.enabled",
              "spot_restore.timeout",
              "terminate_notification.timeout",
              "termination_notification.timeout",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "winrm_listener.certificate_url",
              "admin_password",
              "admin_username",
              "instances",
              "location",
              "name",
              "resource_group_name",
              "sku",
              "additional_unattend_content.content",
              "additional_unattend_content.setting",
              "automatic_instance_repair.enabled",
              "automatic_os_upgrade_policy.disable_automatic_rollback",
              "automatic_os_upgrade_policy.enable_automatic_os_upgrade",
              "data_disk.caching",
              "data_disk.disk_size_gb",
              "data_disk.lun",
              "data_disk.storage_account_type",
              "extension.name",
              "extension.publisher",
              "extension.type",
              "extension.type_handler_version",
              "extension.protected_settings_from_key_vault.secret_url",
              "extension.protected_settings_from_key_vault.source_vault_id",
              "gallery_application.version_id",
              "gallery_applications.package_reference_id",
              "identity.type",
              "network_interface.name",
              "network_interface.ip_configuration.name",
              "network_interface.ip_configuration.public_ip_address.name",
              "network_interface.ip_configuration.public_ip_address.ip_tag.tag",
              "network_interface.ip_configuration.public_ip_address.ip_tag.type",
              "os_disk.caching",
              "os_disk.storage_account_type",
              "os_disk.diff_disk_settings.option",
              "plan.name",
              "plan.product",
              "plan.publisher",
              "rolling_upgrade_policy.max_batch_instance_percent",
              "rolling_upgrade_policy.max_unhealthy_instance_percent",
              "rolling_upgrade_policy.max_unhealthy_upgraded_instance_percent",
              "rolling_upgrade_policy.pause_time_between_batches",
              "secret.key_vault_id",
              "secret.certificate.store",
              "secret.certificate.url",
              "source_image_reference.offer",
              "source_image_reference.publisher",
              "source_image_reference.sku",
              "source_image_reference.version",
              "terminate_notification.enabled",
              "termination_notification.enabled",
              "winrm_listener.protocol",
              "additional_capabilities",
              "additional_unattend_content",
              "automatic_instance_repair",
              "automatic_os_upgrade_policy",
              "boot_diagnostics",
              "data_disk",
              "extension",
              "extension.protected_settings_from_key_vault",
              "gallery_application",
              "gallery_applications",
              "identity",
              "network_interface",
              "network_interface.ip_configuration",
              "network_interface.ip_configuration.public_ip_address",
              "network_interface.ip_configuration.public_ip_address.ip_tag",
              "os_disk",
              "os_disk.diff_disk_settings",
              "plan",
              "rolling_upgrade_policy",
              "scale_in",
              "secret",
              "secret.certificate",
              "source_image_reference",
              "spot_restore",
              "terminate_notification",
              "termination_notification",
              "timeouts",
              "winrm_listener"
            ],
            "azurerm_windows_web_app": [
              "app_settings",
              "client_affinity_enabled",
              "client_certificate_enabled",
              "client_certificate_exclusion_paths",
              "client_certificate_mode",
              "enabled",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "tags",
              "virtual_network_subnet_id",
              "zip_deploy_file",
              "auth_settings.additional_login_parameters",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.active_directory.client_secret_setting_name",
              "auth_settings.facebook.app_secret",
              "auth_settings.facebook.app_secret_setting_name",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.github.client_secret",
              "auth_settings.github.client_secret_setting_name",
              "auth_settings.github.oauth_scopes",
              "auth_settings.google.client_secret",
              "auth_settings.google.client_secret_setting_name",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.client_secret",
              "auth_settings.microsoft.client_secret_setting_name",
              "auth_settings.microsoft.oauth_scopes",
              "auth_settings.twitter.consumer_secret",
              "auth_settings.twitter.consumer_secret_setting_name",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "logs.detailed_error_messages",
              "logs.failed_request_tracing",
              "logs.http_logs.azure_blob_storage.retention_in_days",
              "site_config.always_on",
              "site_config.api_definition_url",
              "site_config.api_management_api_id",
              "site_config.app_command_line",
              "site_config.auto_heal_enabled",
              "site_config.container_registry_managed_identity_client_id",
              "site_config.container_registry_use_managed_identity",
              "site_config.default_documents",
              "site_config.ftps_state",
              "site_config.health_check_eviction_time_in_min",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.load_balancing_mode",
              "site_config.local_mysql_enabled",
              "site_config.managed_pipeline_mode",
              "site_config.minimum_tls_version",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.scm_ip_restriction",
              "site_config.scm_minimum_tls_version",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.worker_count",
              "site_config.application_stack.current_stack",
              "site_config.application_stack.docker_container_name",
              "site_config.application_stack.docker_container_registry",
              "site_config.application_stack.docker_container_tag",
              "site_config.application_stack.dotnet_version",
              "site_config.application_stack.java_container",
              "site_config.application_stack.java_container_version",
              "site_config.application_stack.java_version",
              "site_config.application_stack.node_version",
              "site_config.application_stack.php_version",
              "site_config.application_stack.python_version",
              "site_config.auto_heal_setting.action.minimum_process_execution_time",
              "site_config.auto_heal_setting.action.custom_action.parameters",
              "site_config.auto_heal_setting.trigger.private_memory_kb",
              "site_config.auto_heal_setting.trigger.slow_request.path",
              "site_config.auto_heal_setting.trigger.status_code.path",
              "site_config.auto_heal_setting.trigger.status_code.sub_status",
              "site_config.auto_heal_setting.trigger.status_code.win32_status",
              "site_config.cors.support_credentials",
              "site_config.virtual_application.virtual_directory.physical_path",
              "site_config.virtual_application.virtual_directory.virtual_path",
              "sticky_settings.app_setting_names",
              "sticky_settings.connection_string_names",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "location",
              "name",
              "resource_group_name",
              "service_plan_id",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.github.client_id",
              "auth_settings.google.client_id",
              "auth_settings.microsoft.client_id",
              "auth_settings.twitter.consumer_key",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "logs.application_logs.file_system_level",
              "logs.application_logs.azure_blob_storage.level",
              "logs.application_logs.azure_blob_storage.retention_in_days",
              "logs.application_logs.azure_blob_storage.sas_url",
              "logs.http_logs.azure_blob_storage.sas_url",
              "logs.http_logs.file_system.retention_in_days",
              "logs.http_logs.file_system.retention_in_mb",
              "site_config.auto_heal_setting.action.action_type",
              "site_config.auto_heal_setting.action.custom_action.executable",
              "site_config.auto_heal_setting.trigger.requests.count",
              "site_config.auto_heal_setting.trigger.requests.interval",
              "site_config.auto_heal_setting.trigger.slow_request.count",
              "site_config.auto_heal_setting.trigger.slow_request.interval",
              "site_config.auto_heal_setting.trigger.slow_request.time_taken",
              "site_config.auto_heal_setting.trigger.status_code.count",
              "site_config.auto_heal_setting.trigger.status_code.interval",
              "site_config.auto_heal_setting.trigger.status_code.status_code_range",
              "site_config.cors.allowed_origins",
              "site_config.virtual_application.physical_path",
              "site_config.virtual_application.preload",
              "site_config.virtual_application.virtual_path",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.github",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "logs",
              "logs.application_logs",
              "logs.application_logs.azure_blob_storage",
              "logs.http_logs",
              "logs.http_logs.azure_blob_storage",
              "logs.http_logs.file_system",
              "site_config",
              "site_config.application_stack",
              "site_config.auto_heal_setting",
              "site_config.auto_heal_setting.action",
              "site_config.auto_heal_setting.action.custom_action",
              "site_config.auto_heal_setting.trigger",
              "site_config.auto_heal_setting.trigger.requests",
              "site_config.auto_heal_setting.trigger.slow_request",
              "site_config.auto_heal_setting.trigger.status_code",
              "site_config.cors",
              "site_config.virtual_application",
              "site_config.virtual_application.virtual_directory",
              "sticky_settings",
              "storage_account",
              "timeouts"
            ],
            "azurerm_windows_web_app_slot": [
              "app_settings",
              "client_affinity_enabled",
              "client_certificate_enabled",
              "client_certificate_exclusion_paths",
              "client_certificate_mode",
              "enabled",
              "https_only",
              "id",
              "key_vault_reference_identity_id",
              "tags",
              "virtual_network_subnet_id",
              "zip_deploy_file",
              "auth_settings.additional_login_parameters",
              "auth_settings.allowed_external_redirect_urls",
              "auth_settings.default_provider",
              "auth_settings.issuer",
              "auth_settings.runtime_version",
              "auth_settings.token_refresh_extension_hours",
              "auth_settings.token_store_enabled",
              "auth_settings.unauthenticated_client_action",
              "auth_settings.active_directory.allowed_audiences",
              "auth_settings.active_directory.client_secret",
              "auth_settings.active_directory.client_secret_setting_name",
              "auth_settings.facebook.app_secret",
              "auth_settings.facebook.app_secret_setting_name",
              "auth_settings.facebook.oauth_scopes",
              "auth_settings.github.client_secret",
              "auth_settings.github.client_secret_setting_name",
              "auth_settings.github.oauth_scopes",
              "auth_settings.google.client_secret",
              "auth_settings.google.client_secret_setting_name",
              "auth_settings.google.oauth_scopes",
              "auth_settings.microsoft.client_secret",
              "auth_settings.microsoft.client_secret_setting_name",
              "auth_settings.microsoft.oauth_scopes",
              "auth_settings.twitter.consumer_secret",
              "auth_settings.twitter.consumer_secret_setting_name",
              "backup.enabled",
              "backup.schedule.keep_at_least_one_backup",
              "backup.schedule.retention_period_days",
              "backup.schedule.start_time",
              "identity.identity_ids",
              "logs.detailed_error_messages",
              "logs.failed_request_tracing",
              "logs.http_logs.azure_blob_storage.retention_in_days",
              "site_config.always_on",
              "site_config.api_definition_url",
              "site_config.api_management_api_id",
              "site_config.app_command_line",
              "site_config.auto_heal_enabled",
              "site_config.auto_swap_slot_name",
              "site_config.container_registry_managed_identity_client_id",
              "site_config.container_registry_use_managed_identity",
              "site_config.default_documents",
              "site_config.ftps_state",
              "site_config.health_check_eviction_time_in_min",
              "site_config.health_check_path",
              "site_config.http2_enabled",
              "site_config.ip_restriction",
              "site_config.load_balancing_mode",
              "site_config.local_mysql_enabled",
              "site_config.managed_pipeline_mode",
              "site_config.minimum_tls_version",
              "site_config.remote_debugging_enabled",
              "site_config.remote_debugging_version",
              "site_config.scm_ip_restriction",
              "site_config.scm_minimum_tls_version",
              "site_config.scm_use_main_ip_restriction",
              "site_config.use_32_bit_worker",
              "site_config.vnet_route_all_enabled",
              "site_config.websockets_enabled",
              "site_config.worker_count",
              "site_config.application_stack.current_stack",
              "site_config.application_stack.docker_container_name",
              "site_config.application_stack.docker_container_registry",
              "site_config.application_stack.docker_container_tag",
              "site_config.application_stack.dotnet_version",
              "site_config.application_stack.java_container",
              "site_config.application_stack.java_container_version",
              "site_config.application_stack.java_version",
              "site_config.application_stack.node_version",
              "site_config.application_stack.php_version",
              "site_config.application_stack.python_version",
              "site_config.auto_heal_setting.action.minimum_process_execution_time",
              "site_config.auto_heal_setting.action.custom_action.parameters",
              "site_config.auto_heal_setting.trigger.private_memory_kb",
              "site_config.auto_heal_setting.trigger.slow_request.path",
              "site_config.auto_heal_setting.trigger.status_code.path",
              "site_config.auto_heal_setting.trigger.status_code.sub_status",
              "site_config.auto_heal_setting.trigger.status_code.win32_status",
              "site_config.cors.support_credentials",
              "site_config.virtual_application.virtual_directory.physical_path",
              "site_config.virtual_application.virtual_directory.virtual_path",
              "storage_account.mount_path",
              "timeouts.create",
              "timeouts.delete",
              "timeouts.read",
              "timeouts.update",
              "app_service_id",
              "name",
              "auth_settings.enabled",
              "auth_settings.active_directory.client_id",
              "auth_settings.facebook.app_id",
              "auth_settings.github.client_id",
              "auth_settings.google.client_id",
              "auth_settings.microsoft.client_id",
              "auth_settings.twitter.consumer_key",
              "backup.name",
              "backup.storage_account_url",
              "backup.schedule.frequency_interval",
              "backup.schedule.frequency_unit",
              "connection_string.name",
              "connection_string.type",
              "connection_string.value",
              "identity.type",
              "logs.application_logs.file_system_level",
              "logs.application_logs.azure_blob_storage.level",
              "logs.application_logs.azure_blob_storage.retention_in_days",
              "logs.application_logs.azure_blob_storage.sas_url",
              "logs.http_logs.azure_blob_storage.sas_url",
              "logs.http_logs.file_system.retention_in_days",
              "logs.http_logs.file_system.retention_in_mb",
              "site_config.auto_heal_setting.action.action_type",
              "site_config.auto_heal_setting.action.custom_action.executable",
              "site_config.auto_heal_setting.trigger.requests.count",
              "site_config.auto_heal_setting.trigger.requests.interval",
              "site_config.auto_heal_setting.trigger.slow_request.count",
              "site_config.auto_heal_setting.trigger.slow_request.interval",
              "site_config.auto_heal_setting.trigger.slow_request.time_taken",
              "site_config.auto_heal_setting.trigger.status_code.count",
              "site_config.auto_heal_setting.trigger.status_code.interval",
              "site_config.auto_heal_setting.trigger.status_code.status_code_range",
              "site_config.cors.allowed_origins",
              "site_config.virtual_application.physical_path",
              "site_config.virtual_application.preload",
              "site_config.virtual_application.virtual_path",
              "storage_account.access_key",
              "storage_account.account_name",
              "storage_account.name",
              "storage_account.share_name",
              "storage_account.type",
              "auth_settings",
              "auth_settings.active_directory",
              "auth_settings.facebook",
              "auth_settings.github",
              "auth_settings.google",
              "auth_settings.microsoft",
              "auth_settings.twitter",
              "backup",
              "backup.schedule",
              "connection_string",
              "identity",
              "logs",
              "logs.application_logs",
              "logs.application_logs.azure_blob_storage",
              "logs.http_logs",
              "logs.http_logs.azure_blob_storage",
              "logs.http_logs.file_system",
              "site_config",
              "site_config.application_stack",
              "site_config.auto_heal_setting",
              "site_config.auto_heal_setting.action",
              "site_config.auto_heal_setting.action.custom_action",
              "site_config.auto_heal_setting.trigger",
              "site_config.auto_heal_setting.trigger.requests",
              "site_config.auto_heal_setting.trigger.slow_request",
              "site_config.auto_heal_setting.trigger.status_code",
              "site_config.cors",
              "site_config.virtual_application",
              "site_config.virtual_application.virtual_directory",
              "storage_account",
              "timeouts"
            ]
          },
          "text": "data.assemble.result",
          "location": {
            "row": 1,
            "col": 1
          }
        }
      ]
    }
  ]
}
